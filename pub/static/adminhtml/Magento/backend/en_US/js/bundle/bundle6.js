require.config({"config": {
        "jsbuild":{"Magento_Ui/js/grid/sticky/sticky.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Ui/js/lib/view/utils/raf'\r\n], function ($, _, Component, raf) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            listingSelector: '${ $.listingProvider }::not([data-role = \"sticky-el-root\"])',\r\n            toolbarSelector: '${ $.toolbarProvider }::not([data-role = \"sticky-el-root\"])',\r\n            bulkRowSelector: '[data-role = \"data-grid-bulk-row\"]',\r\n            bulkRowHeaderSelector: '.data-grid-info-panel:visible',\r\n            tableSelector: 'table',\r\n            columnSelector: 'thead tr th',\r\n            rowSelector: 'tbody tr',\r\n            toolbarCollapsiblesSelector: '[data-role=\"toolbar-menu-item\"]',\r\n            toolbarCollapsiblesActiveClass: '_active',\r\n            template: 'ui/grid/sticky/sticky',\r\n            stickyContainerSelector: '.sticky-header',\r\n            stickyElementSelector: '[data-role = \"sticky-el-root\"]',\r\n            leftDataGridCapSelector: '.data-grid-cap-left',\r\n            rightDataGridCapSelector: '.data-grid-cap-right',\r\n            visible: false,\r\n            enableToolbar: true,\r\n            enableHeader: true,\r\n            modules: {\r\n                toolbar: '${ $.toolbarProvider }',\r\n                listing: '${ $.listingProvider }'\r\n            },\r\n            otherStickyElsSize: 77,\r\n            containerNode: null,\r\n            listingNode: null,\r\n            toolbarNode: null,\r\n            stickyListingNode: null,\r\n            stickyToolbarNode: null,\r\n            storedOriginalToolbarElements: [],\r\n            cache: {},\r\n            flags: {},\r\n            dirtyFlag: 'dirty'\r\n        },\r\n\r\n        /**\r\n         * Initializes Sticky component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            _.bindAll(this,\r\n                'adjustStickyElems',\r\n                'initListingNode',\r\n                'initToolbarNode',\r\n                'initContainerNode',\r\n                'initColumns',\r\n                'initStickyListingNode',\r\n                'initStickyToolbarNode',\r\n                'initLeftDataGridCap',\r\n                'initRightDataGridCap'\r\n            );\r\n\r\n            $.async(this.listingSelector,\r\n                this.initListingNode);\r\n            $.async(this.toolbarSelector,\r\n                this.initToolbarNode);\r\n\r\n            $.async(this.stickyContainerSelector,\r\n                this,\r\n                this.initContainerNode);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init observables\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track('visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init original listing node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initListingNode: function (node) {\r\n            if ($(node).is(this.stickyElementSelector)) {\r\n                return;\r\n            }\r\n            this.listingNode = $(node);\r\n            $.async(this.columnSelector, node, this.initColumns);\r\n        },\r\n\r\n        /**\r\n         * Init original toolbar node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initToolbarNode: function (node) {\r\n            if ($(node).is(this.stickyElementSelector)) {\r\n                return;\r\n            }\r\n            this.toolbarNode = $(node);\r\n        },\r\n\r\n        /**\r\n         * Init sticky listing node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initStickyListingNode: function (node) {\r\n            this.stickyListingNode = $(node);\r\n            this.checkPos();\r\n            this.initListeners();\r\n        },\r\n\r\n        /**\r\n         * Init sticky toolbar node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initStickyToolbarNode: function (node) {\r\n            this.stickyToolbarNode = $(node);\r\n        },\r\n\r\n        /**\r\n         * Init sticky header container node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initContainerNode: function (node) {\r\n            this.containerNode = $(node);\r\n\r\n            $.async(this.leftDataGridCapSelector,\r\n                node,\r\n                this.initLeftDataGridCap);\r\n            $.async(this.rightDataGridCapSelector,\r\n                node,\r\n                this.initRightDataGridCap);\r\n\r\n            $.async(this.stickyElementSelector,\r\n                this.listing(),\r\n                this.initStickyListingNode);\r\n            $.async(this.stickyElementSelector,\r\n                this.toolbar(),\r\n                this.initStickyToolbarNode);\r\n        },\r\n\r\n        /**\r\n         * Init columns (each time when amount of columns is changed)\r\n         *\r\n         */\r\n        initColumns: function () {\r\n            this.columns = this.listingNode.find(this.columnSelector);\r\n        },\r\n\r\n        /**\r\n         * Init left DataGridCap\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initLeftDataGridCap: function (node) {\r\n            this.leftDataGridCap = $(node);\r\n        },\r\n\r\n        /**\r\n         * Init right DataGridCap\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initRightDataGridCap: function (node) {\r\n            this.rightDataGridCap = $(node);\r\n        },\r\n\r\n        /**\r\n         * Init listeners\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initListeners: function () {\r\n            this.adjustStickyElems();\r\n            this.initOnResize()\r\n                .initOnScroll()\r\n                .initOnListingScroll();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Start to listen to window scroll event\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initOnScroll: function () {\r\n            this.lastHorizontalScrollPos = $(window).scrollLeft();\r\n            document.addEventListener('scroll', function () {\r\n                this.flags.scrolled = true;\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Start to listen to original listing scroll event\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initOnListingScroll: function () {\r\n            $(this.listingNode).scroll(function (e) {\r\n                this.flags.listingScrolled = true;\r\n                this.flags.listingScrolledValue = $(e.target).scrollLeft();\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Start to listen to window resize event\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initOnResize: function () {\r\n            $(window).resize(function () {\r\n                this.flags.resized = true;\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adjust sticky header elements according to flags of the events that have happened in the endless RAF loop\r\n         */\r\n        adjustStickyElems: function () {\r\n            if (this.flags.resized ||\r\n                this.flags.scrolled) {\r\n                this.checkPos();\r\n            }\r\n\r\n            if (this.visible) {\r\n                this.checkTableElemsWidth();\r\n\r\n                if (this.flags.originalWidthChanged) {\r\n                    this.adjustContainerElemsWidth();\r\n                }\r\n\r\n                if (this.flags.resized) {\r\n                    this.onResize();\r\n                }\r\n\r\n                if (this.flags.scrolled) {\r\n                    this.onWindowScroll();\r\n                }\r\n\r\n                if (this.flags.listingScrolled) {\r\n                    this.onListingScroll(this.flags.listingScrolledValue);\r\n                }\r\n            }\r\n            _.each(this.flags, function (val, key) {\r\n                if (val === this.dirtyFlag) {\r\n                    this.flags[key] = false;\r\n                } else if (val) {\r\n                    this.flags[key] = this.dirtyFlag;\r\n                }\r\n            }, this);\r\n\r\n            raf(this.adjustStickyElems);\r\n        },\r\n\r\n        /**\r\n         * Handles window scroll\r\n         */\r\n        onWindowScroll: function () {\r\n            var scrolled = $(window).scrollLeft(),\r\n                horizontal = this.lastHorizontalScrollPos !== scrolled;\r\n\r\n            if (horizontal) {\r\n                this.adjustOffset()\r\n                    .adjustDataGridCapPositions();\r\n                this.lastHorizontalScrollPos = scrolled;\r\n            } else {\r\n                this.checkPos();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles original listing scroll\r\n         *\r\n         * @param {Number} scrolled\r\n         */\r\n        onListingScroll: function (scrolled) {\r\n            this.adjustOffset(scrolled);\r\n        },\r\n\r\n        /**\r\n         * Handles window resize\r\n         */\r\n        onResize: function () {\r\n            this.checkPos();\r\n            this.adjustContainerElemsWidth()\r\n                .adjustDataGridCapPositions();\r\n        },\r\n\r\n        /**\r\n         * Check if original table or columns change it dimensions and sets appropriate flag\r\n         */\r\n        checkTableElemsWidth: function () {\r\n            var newWidth = this.getTableWidth();\r\n\r\n            if (this.cache.tableWidth !== newWidth) {\r\n                this.cache.tableWidth = newWidth;\r\n                this.flags.originalWidthChanged = true;\r\n            } else if (this.cache.colChecksum !== this.getColsChecksum()) {\r\n                this.cache.colChecksum = this.getColsChecksum();\r\n                this.flags.originalWidthChanged = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the checksum of original columns width\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getColsChecksum: function () {\r\n            return _.reduce(this.columns,\r\n            function (pv, cv) {\r\n                return ($(pv).width() || pv) + '' + $(cv).width();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the width of the sticky table wrapper\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getListingWidth: function () {\r\n            return this.listingNode.width();\r\n        },\r\n\r\n        /**\r\n         * Get the width of the original table\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getTableWidth: function () {\r\n            return this.listingNode.find(this.tableSelector).width();\r\n        },\r\n\r\n        /**\r\n         * Get the top elem: header or toolbar\r\n         *\r\n         * @returns {HTMLElement}.\r\n         */\r\n        getTopElement: function () {\r\n            return this.toolbarNode || this.listingNode;\r\n        },\r\n\r\n        /**\r\n         * Get the height of the other sticky elem (Page header)\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getOtherStickyElementsSize: function () {\r\n            return this.otherStickyElsSize;\r\n        },\r\n\r\n        /**\r\n         * Get original bulk row height, if is visible\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getBulkRowHeight: function () {\r\n            return this.listingNode.find(this.bulkRowSelector).filter(':visible').height();\r\n        },\r\n\r\n        /**\r\n         * Get top Y coord of the sticky header\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getListingTopYCoord: function () {\r\n            var bulkRowHeight = this.getBulkRowHeight();\r\n\r\n            return this.listingNode.find('tbody').offset().top -\r\n                this.containerNode.height() -\r\n                $(window).scrollTop() +\r\n                bulkRowHeight;\r\n        },\r\n\r\n        /**\r\n         * Check if sticky header must be visible\r\n         *\r\n         * @returns {Boolean}.\r\n         */\r\n        getMustBeSticky: function () {\r\n            var stickyTopCondition = this.getListingTopYCoord() - this.getOtherStickyElementsSize(),\r\n                stickyBottomCondition = this.listingNode.offset().top +\r\n                    this.listingNode.height() -\r\n                    $(window).scrollTop() +\r\n                    this.getBulkRowHeight() -\r\n                    this.getOtherStickyElementsSize();\r\n\r\n            return stickyTopCondition < 0 && stickyBottomCondition > 0;\r\n        },\r\n\r\n        /**\r\n         * Resize sticky header and cols\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustContainerElemsWidth: function () {\r\n            this.resizeContainer()\r\n                .resizeCols()\r\n                .resizeBulk();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resize sticky header\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        resizeContainer: function () {\r\n            var listingWidth = this.getListingWidth();\r\n\r\n            this.stickyListingNode.innerWidth(listingWidth);\r\n            this.stickyListingNode.find(this.tableSelector).innerWidth(this.getTableWidth());\r\n\r\n            if (this.stickyToolbarNode) {\r\n                this.stickyToolbarNode.innerWidth(listingWidth);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resize sticky cols\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        resizeCols: function () {\r\n            var cols = this.listingNode.find(this.columnSelector);\r\n\r\n            this.stickyListingNode.find(this.columnSelector).each(function (ind) {\r\n                var originalColWidth =  $(cols[ind]).width();\r\n\r\n                $(this).width(originalColWidth);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resize bulk row header\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        resizeBulk: function () {\r\n            var bulk = this.containerNode.find(this.bulkRowHeaderSelector)[0];\r\n\r\n            if (bulk) {\r\n                $(bulk).innerWidth(this.getListingWidth());\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Reset viewport to the top of listing\r\n         */\r\n        resetToTop: function () {\r\n            var posOfTopEl = this.getTopElement().offset().top - this.getOtherStickyElementsSize() || 0;\r\n\r\n            $(window).scrollTop(posOfTopEl);\r\n        },\r\n\r\n        /**\r\n         * Adjust sticky header offset\r\n         *\r\n         * @param {Number} val\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustOffset: function (val) {\r\n            val = val || this.listingNode.scrollLeft();\r\n            this.stickyListingNode.offset({\r\n                left: this.listingNode.offset().left - val\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adjust both DataGridCap position\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustDataGridCapPositions: function () {\r\n            this.adjustLeftDataGridCapPos()\r\n                .adjustRightDataGridCapPos();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adjust left DataGridCap position\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustLeftDataGridCapPos: function () {\r\n            this.leftDataGridCap.offset({\r\n                left: this.listingNode.offset().left - this.leftDataGridCap.width()\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adjust right DataGridCap position\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustRightDataGridCapPos: function () {\r\n            this.rightDataGridCap.offset({\r\n                left: this.listingNode.offset().left + this.listingNode.width()\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides the oiginal toolbar opened dropdowns/collapsibles etc\r\n         */\r\n        collapseOriginalElements: function () {\r\n            this.toolbarNode\r\n                .find(this.toolbarCollapsiblesSelector)\r\n                .css('visibility', 'hidden');\r\n            $(this.listingNode.find(this.bulkRowSelector)[0]).css('visibility', 'hidden');\r\n        },\r\n\r\n        /**\r\n         * Restores the oiginal toolbar opened dropdowns/collapsibles etc\r\n         */\r\n        restoreOriginalElements: function () {\r\n            this.toolbarNode\r\n                .find(this.toolbarCollapsiblesSelector)\r\n                .css('visibility', 'visible');\r\n            $(this.listingNode.find(this.bulkRowSelector)[0]).css('visibility', 'visible');\r\n        },\r\n\r\n        /**\r\n         * Toggle the visibility of sticky header\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        toggleContainerVisibility: function () {\r\n            this.visible = !this.visible;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks position of the listing to know if need to show/hide sticky header\r\n         *\r\n         * @returns {Boolean} whether the visibility of the sticky header was toggled.\r\n         */\r\n        checkPos: function () {\r\n            var isSticky = this.visible,\r\n                mustBeSticky = this.getMustBeSticky(),\r\n                needChange = isSticky !== mustBeSticky;\r\n\r\n            if (needChange) {\r\n                if (mustBeSticky) {\r\n                    this.collapseOriginalElements();\r\n                    this.toggleContainerVisibility();\r\n                    this.adjustContainerElemsWidth()\r\n                        .adjustOffset()\r\n                        .adjustDataGridCapPositions();\r\n\r\n                } else {\r\n                    this.toggleContainerVisibility();\r\n                    this.restoreOriginalElements();\r\n                }\r\n            }\r\n\r\n            return needChange;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/collapsible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiComponent'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            opened: false,\r\n            collapsible: true\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('opened');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Toggles value of the 'opened' property.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        toggleOpened: function () {\r\n            this.opened() ?\r\n                this.close() :\r\n                this.open();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' flag to false.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        close: function () {\r\n            if (this.collapsible) {\r\n                this.opened(false);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' flag to true.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        open: function () {\r\n            if (this.collapsible) {\r\n                this.opened(true);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/key-codes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        13: 'enterKey',\r\n        27: 'escapeKey',\r\n        40: 'pageDownKey',\r\n        38: 'pageUpKey',\r\n        32: 'spaceKey',\r\n        9:  'tabKey',\r\n        37: 'pageLeftKey',\r\n        39: 'pageRightKey',\r\n        17: 'ctrlKey',\r\n        18: 'altKey',\r\n        16: 'shiftKey',\r\n        66: 'bKey',\r\n        73: 'iKey',\r\n        85: 'uKey'\r\n    };\r\n});\r\n","Magento_Ui/js/lib/spinner.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var selector = '[data-role=\"spinner\"]',\r\n        spinner = $(selector);\r\n\r\n    return {\r\n        /**\r\n         * Show spinner.\r\n         */\r\n        show: function () {\r\n            spinner.show();\r\n        },\r\n\r\n        /**\r\n         * Hide spinner.\r\n         */\r\n        hide: function () {\r\n            spinner.hide();\r\n        },\r\n\r\n        /**\r\n         * Get spinner by selector.\r\n         *\r\n         * @param {String} id\r\n         * @return {jQuery}\r\n         */\r\n        get: function (id) {\r\n            return $(selector + '[data-component=\"' + id + '\"]');\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/step-wizard.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiRegistry',\r\n    'uiComponent',\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'mage/backend/notification',\r\n    'mage/translate'\r\n], function (uiRegistry, Component, $, _, ko) {\r\n    'use strict';\r\n\r\n    var Wizard;\r\n\r\n    ko.utils.domNodeDisposal.cleanExternalData = _.wrap(\r\n        ko.utils.domNodeDisposal.cleanExternalData,\r\n        function (func, node) {\r\n            if (!$(node).closest('[data-type=skipKO]').length) {\r\n                func(node);\r\n            }\r\n        }\r\n    );\r\n\r\n    /**\r\n     * Wizard constructor.\r\n     *\r\n     * @param {Array} steps\r\n     * @param {String} modalClass\r\n     * @constructor\r\n     */\r\n    Wizard = function (steps, modalClass) {\r\n        this.steps = steps;\r\n        this.index = 0;\r\n        this.data = {};\r\n        this.nextLabelText = $.mage.__('Next');\r\n        this.prevLabelText = $.mage.__('Back');\r\n        this.elementSelector = '[data-role=steps-wizard-main]';\r\n        this.element = modalClass ? $('.' + modalClass + this.elementSelector) : $(this.elementSelector);\r\n        this.nextLabel = '[data-role=\"step-wizard-next\"]';\r\n        this.prevLabel = '[data-role=\"step-wizard-prev\"]';\r\n        this.element.notification();\r\n\r\n        /**\r\n         * Move to newIndex.\r\n         *\r\n         * @param {Number} newIndex\r\n         * @return {String}\r\n         */\r\n        this.move = function (newIndex) {\r\n            if (!this.preventSwitch(newIndex)) {\r\n                if (newIndex > this.index) {\r\n                    this._next(newIndex);\r\n                } else if (newIndex < this.index) {\r\n                    this._prev(newIndex);\r\n                }\r\n            }\r\n            this.updateLabels(this.getStep());\r\n            this.showNotificationMessage();\r\n\r\n            return this.getStep().name;\r\n        };\r\n\r\n        /**\r\n         * Move wizard to next step.\r\n         *\r\n         * @return {String}\r\n         */\r\n        this.next = function () {\r\n            this.move(this.index + 1);\r\n\r\n            return this.getStep().name;\r\n        };\r\n\r\n        /**\r\n         * Move wizard to previous step.\r\n         *\r\n         * @return {String}\r\n         */\r\n        this.prev = function () {\r\n            this.move(this.index - 1);\r\n\r\n            return this.getStep().name;\r\n        };\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        this.preventSwitch = function (newIndex) {\r\n            return newIndex < 0 || (newIndex - this.index) > 1;//eslint-disable-line no-extra-parens\r\n        };\r\n\r\n        /**\r\n         * @param {Number} newIndex\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        this._next = function (newIndex) {\r\n            newIndex = _.isNumber(newIndex) ? newIndex : this.index + 1;\r\n\r\n            try {\r\n                this.getStep().force(this);\r\n\r\n                if (newIndex >= steps.length) {\r\n                    return false;\r\n                }\r\n            } catch (e) {\r\n                this.setNotificationMessage(e.message, true);\r\n\r\n                return false;\r\n            }\r\n            this.cleanErrorNotificationMessage();\r\n            this.index = newIndex;\r\n            this.cleanNotificationMessage();\r\n            this.render();\r\n        };\r\n\r\n        /**\r\n         * @param {Number} newIndex\r\n         * @private\r\n         */\r\n        this._prev = function (newIndex) {\r\n            newIndex = _.isNumber(newIndex) ? newIndex : this.index - 1;\r\n            this.getStep().back(this);\r\n            this.index = newIndex;\r\n        };\r\n\r\n        /**\r\n         * @param {Number} stepIndex\r\n         * @return {Object}\r\n         */\r\n        this.getStep = function (stepIndex) {\r\n            return this.steps[stepIndex || this.index] || {};\r\n        };\r\n\r\n        /**\r\n         * @param {String} message\r\n         * @param {String} error\r\n         */\r\n        this.notifyMessage = function (message, error) {\r\n            $(this.element).notification('clear').notification('add', {\r\n                error: error,\r\n                message: message\r\n            });\r\n        };\r\n\r\n        /**\r\n         * @param {Object} step\r\n         */\r\n        this.updateLabels = function (step) {\r\n            this.element.find(this.nextLabel).find('button').text(step.nextLabelText || this.nextLabelText);\r\n            this.element.find(this.prevLabel).find('button').text(step.prevLabelText || this.prevLabelText);\r\n        };\r\n\r\n        /**\r\n         * Show notification message.\r\n         */\r\n        this.showNotificationMessage = function () {\r\n            if (!_.isEmpty(this.getStep())) {\r\n                this.hideNotificationMessage();\r\n\r\n                if (this.getStep().notificationMessage.text !== null) {\r\n                    this.notifyMessage(\r\n                        this.getStep().notificationMessage.text,\r\n                        this.getStep().notificationMessage.error\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Remove notification message.\r\n         */\r\n        this.cleanNotificationMessage = function () {\r\n            this.getStep().notificationMessage.text = null;\r\n            this.hideNotificationMessage();\r\n        };\r\n\r\n        /**\r\n         * Remove error message.\r\n         */\r\n        this.cleanErrorNotificationMessage = function () {\r\n            if (this.getStep().notificationMessage.error === true) {\r\n                this.cleanNotificationMessage();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {String} text\r\n         * @param {String} error\r\n         */\r\n        this.setNotificationMessage = function (text, error) {\r\n            error = error !== undefined;\r\n\r\n            if (!_.isEmpty(this.getStep())) {\r\n                this.getStep().notificationMessage.text = text;\r\n                this.getStep().notificationMessage.error = error;\r\n                this.showNotificationMessage();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Hide notification message.\r\n         */\r\n        this.hideNotificationMessage = function () {\r\n            $(this.element).notification('clear');\r\n        };\r\n\r\n        /**\r\n         * Render step.\r\n         */\r\n        this.render = function () {\r\n            this.hideNotificationMessage();\r\n            this.getStep().render(this);\r\n        };\r\n\r\n        /**\r\n         * Initialize step.\r\n         */\r\n        this.init = function () {\r\n            this.updateLabels(this.getStep());\r\n            this.render();\r\n        };\r\n        this.init();\r\n    };\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            modalClass: '',\r\n            initData: [],\r\n            stepsNames: [],\r\n            selectedStep: '',\r\n            steps: [],\r\n            disabled: true\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n            this.selectedStep.subscribe(this.wrapDisabledBackButton.bind(this));\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initElement: function (step) {\r\n            step.initData = this.initData;\r\n            step.mode = _.all(this.initData, _.isEmpty) ? 'create' : 'edit';\r\n            this.steps[this.getStepIndexByName(step.name)] = step;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super().observe([\r\n                'selectedStep',\r\n                'disabled'\r\n            ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        destroy: function () {\r\n            _.each(this.steps, function (step) {\r\n                step.destroy();\r\n            });\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Toggle disable property.\r\n         *\r\n         * @param {String} stepName\r\n         */\r\n        wrapDisabledBackButton: function (stepName) {\r\n            if (_.first(this.stepsNames) === stepName) {\r\n                this.disabled(true);\r\n            } else {\r\n                this.disabled(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get step by index name.\r\n         *\r\n         * @param {String} stepName\r\n         */\r\n        getStepIndexByName: function (stepName) {\r\n            return _.indexOf(this.stepsNames, stepName);\r\n        },\r\n        //controls, todo to another object\r\n        /**\r\n         * Select next step.\r\n         */\r\n        next: function () {\r\n            this.selectedStep(this.wizard.next());\r\n        },\r\n\r\n        /**\r\n         * Select previous step.\r\n         */\r\n        back: function () {\r\n            this.selectedStep(this.wizard.prev());\r\n        },\r\n\r\n        /**\r\n         * Open wizard.\r\n         */\r\n        open: function () {\r\n            this.selectedStep(this.stepsNames.first());\r\n            this.wizard = new Wizard(this.steps, this.modalClass);\r\n        },\r\n\r\n        /**\r\n         * Close wizard.\r\n         */\r\n        close: function () {\r\n            var modal =  uiRegistry.get(this.initData.configurableModal);\r\n\r\n            if (!_.isUndefined(modal)) {\r\n                modal.closeModal();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} data\r\n         * @param {Object} event\r\n         */\r\n        showSpecificStep: function (data, event) {\r\n            var index = _.indexOf(this.stepsNames, event.target.hash.substr(1)),\r\n                stepName = this.wizard.move(index);\r\n\r\n            this.selectedStep(stepName);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/core/class.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/utils/wrapper'\r\n], function (_, utils, wrapper) {\r\n    'use strict';\r\n\r\n    var Class;\r\n\r\n    /**\r\n     * Returns property of an object if\r\n     * it's his own property.\r\n     *\r\n     * @param {Object} obj - Object whose property should be retrieved.\r\n     * @param {String} prop - Name of the property.\r\n     * @returns {*} Value of the property or false.\r\n     */\r\n    function getOwn(obj, prop) {\r\n        return _.isObject(obj) && obj.hasOwnProperty(prop) && obj[prop];\r\n    }\r\n\r\n    /**\r\n     * Creates constructor function which allows\r\n     * initialization without usage of a 'new' operator.\r\n     *\r\n     * @param {Object} protoProps - Prototypal properties of a new constructor.\r\n     * @param {Function} constructor\r\n     * @returns {Function} Created constructor.\r\n     */\r\n    function createConstructor(protoProps, constructor) {\r\n        var UiClass = constructor;\r\n\r\n        if (!UiClass) {\r\n\r\n            /**\r\n             * Default constructor function.\r\n             */\r\n            UiClass = function () {\r\n                var obj = this;\r\n\r\n                if (!_.isObject(obj) || Object.getPrototypeOf(obj) !== UiClass.prototype) {\r\n                    obj = Object.create(UiClass.prototype);\r\n                }\r\n\r\n                obj.initialize.apply(obj, arguments);\r\n\r\n                return obj;\r\n            };\r\n        }\r\n\r\n        UiClass.prototype = protoProps;\r\n        UiClass.prototype.constructor = UiClass;\r\n\r\n        return UiClass;\r\n    }\r\n\r\n    Class = createConstructor({\r\n\r\n        /**\r\n         * Entry point to the initialization of constructor's instance.\r\n         *\r\n         * @param {Object} [options={}]\r\n         * @returns {Class} Chainable.\r\n         */\r\n        initialize: function (options) {\r\n            this.initConfig(options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Recursively extends data specified in constructors' 'defaults'\r\n         * property with provided options object. Evaluates resulting\r\n         * object using string templates (see: mage/utils/template.js).\r\n         *\r\n         * @param {Object} [options={}]\r\n         * @returns {Class} Chainable.\r\n         */\r\n        initConfig: function (options) {\r\n            var defaults    = this.constructor.defaults,\r\n                config      = utils.extend({}, defaults, options || {}),\r\n                ignored     = config.ignoreTmpls || {},\r\n                cached      = utils.omit(config, ignored);\r\n\r\n            config = utils.template(config, this, false, true);\r\n\r\n            _.each(cached, function (value, key) {\r\n                utils.nested(config, key, value);\r\n            });\r\n\r\n            return _.extend(this, config);\r\n        }\r\n    });\r\n\r\n    _.extend(Class, {\r\n        defaults: {\r\n            ignoreTmpls: {\r\n                templates: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates new constructor based on a current prototype properties,\r\n         * extending them with properties specified in 'exender' object.\r\n         *\r\n         * @param {Object} [extender={}]\r\n         * @returns {Function} New constructor.\r\n         */\r\n        extend: function (extender) {\r\n            var parent      = this,\r\n                parentProto = parent.prototype,\r\n                childProto  = Object.create(parentProto),\r\n                child       = createConstructor(childProto, getOwn(extender, 'constructor')),\r\n                defaults;\r\n\r\n            extender = extender || {};\r\n            defaults = extender.defaults;\r\n\r\n            delete extender.defaults;\r\n\r\n            _.each(extender, function (method, name) {\r\n                childProto[name] = wrapper.wrapSuper(parentProto[name], method);\r\n            });\r\n\r\n            child.defaults = utils.extend({}, parent.defaults || {});\r\n\r\n            if (defaults) {\r\n                utils.extend(child.defaults, defaults);\r\n                extender.defaults = defaults;\r\n            }\r\n\r\n            return _.extend(child, {\r\n                __super__:  parentProto,\r\n                extend:     parent.extend\r\n            });\r\n        }\r\n    });\r\n\r\n    return Class;\r\n});\r\n","Magento_Ui/js/lib/core/collection.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiElement'\r\n], function (_, utils, registry, Element) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes non plain object items from the specified array.\r\n     *\r\n     * @param {Array} container - Array whose value should be filtered.\r\n     * @returns {Array}\r\n     */\r\n    function compact(container) {\r\n        return container.filter(utils.isObject);\r\n    }\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/collection',\r\n            _elems: [],\r\n            ignoreTmpls: {\r\n                childDefaults: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Model} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe({\r\n                    elems: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when another element was added to current component.\r\n         *\r\n         * @param {Object} elem - Instance of an element that was added.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initElement: function (elem) {\r\n            elem.initContainer(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns instance of a child found by provided index.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Object}\r\n         */\r\n        getChild: function (index) {\r\n            return _.findWhere(this.elems(), {\r\n                index: index\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Requests specified components to insert\r\n         * them into 'elems' array starting from provided position.\r\n         *\r\n         * @param {(String|Array)} elems - Name of the component to insert.\r\n         * @param {Number} [position=-1] - Position at which to insert elements.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        insertChild: function (elems, position) {\r\n            var container   = this._elems,\r\n                insert      = this._insert.bind(this),\r\n                update;\r\n\r\n            if (!Array.isArray(elems)) {\r\n                elems = [elems];\r\n            }\r\n\r\n            elems.map(function (item) {\r\n                return item.elem ?\r\n                    utils.insert(item.elem, container, item.position) :\r\n                    utils.insert(item, container, position);\r\n            }).forEach(function (item) {\r\n                if (item === true) {\r\n                    update = true;\r\n                } else if (_.isString(item)) {\r\n                    registry.get(item, insert);\r\n                } else if (utils.isObject(item)) {\r\n                    insert(item);\r\n                }\r\n            });\r\n\r\n            if (update) {\r\n                this._updateCollection();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified child from collection.\r\n         *\r\n         * @param {(Object|String)} elem - Child or index of a child to be removed.\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        removeChild: function (elem, skipUpdate) {\r\n            if (_.isString(elem)) {\r\n                elem = this.getChild(elem);\r\n            }\r\n\r\n            if (elem) {\r\n                utils.remove(this._elems, elem);\r\n\r\n                if (!skipUpdate) {\r\n                    this._updateCollection();\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys collection children with its' elements.\r\n         */\r\n        destroyChildren: function () {\r\n            this.elems.each(function (elem) {\r\n                elem.destroy(true);\r\n            });\r\n\r\n            this._updateCollection();\r\n        },\r\n\r\n        /**\r\n         * Clear data. Call method \"clear\"\r\n         * in child components\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        clear: function () {\r\n            var elems = this.elems();\r\n\r\n            _.each(elems, function (elem) {\r\n                if (_.isFunction(elem.clear)) {\r\n                    elem.clear();\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified child exists in collection.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Boolean}\r\n         */\r\n        hasChild: function (index) {\r\n            return !!this.getChild(index);\r\n        },\r\n\r\n        /**\r\n         * Creates 'async' wrapper for the specified child\r\n         * using uiRegistry 'async' method and caches it\r\n         * in a '_requested' components  object.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Function} Async module wrapper.\r\n         */\r\n        requestChild: function (index) {\r\n            var name = this.formChildName(index);\r\n\r\n            return this.requestModule(name);\r\n        },\r\n\r\n        /**\r\n         * Creates complete child name based on a provided index.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {String}\r\n         */\r\n        formChildName: function (index) {\r\n            return this.name + '.' + index;\r\n        },\r\n\r\n        /**\r\n         * Retrieves requested region.\r\n         * Creates region if it was not created yet\r\n         *\r\n         * @returns {ObservableArray}\r\n         */\r\n        getRegion: function (name) {\r\n            var regions = this.regions = this.regions || {};\r\n\r\n            if (!regions[name]) {\r\n                regions[name] = [];\r\n\r\n                this.observe.call(regions, name);\r\n            }\r\n\r\n            return regions[name];\r\n        },\r\n\r\n        /**\r\n         * Checks if the specified region has any elements\r\n         * associated with it.\r\n         *\r\n         * @param {String} name\r\n         * @returns {Boolean}\r\n         */\r\n        regionHasElements: function (name) {\r\n            var region = this.getRegion(name);\r\n\r\n            return region().length > 0;\r\n        },\r\n\r\n        /**\r\n         * Replaces specified regions' data with a provided one.\r\n         * Creates region if it was not created yet.\r\n         *\r\n         * @param {Array} items - New regions' data.\r\n         * @param {String} name - Name of the region.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        updateRegion: function (items, name) {\r\n            this.getRegion(name)(items);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys collection along with its' elements.\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n\r\n            this.elems.each('destroy');\r\n        },\r\n\r\n        /**\r\n         * Inserts provided component into 'elems' array at a specified position.\r\n         * @private\r\n         *\r\n         * @param {Object} elem - Element to insert.\r\n         */\r\n        _insert: function (elem) {\r\n            var index = this._elems.indexOf(elem.name);\r\n\r\n            if (~index) {\r\n                this._elems[index] = elem;\r\n            }\r\n\r\n            this._updateCollection()\r\n                .initElement(elem);\r\n        },\r\n\r\n        /**\r\n         * Synchronizes multiple elements arrays with a core '_elems' container.\r\n         * Performs elemets grouping by theirs 'displayArea' property.\r\n         * @private\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        _updateCollection: function () {\r\n            var _elems = compact(this._elems),\r\n                grouped;\r\n\r\n            grouped = _elems.filter(function (elem) {\r\n                return elem.displayArea && _.isString(elem.displayArea);\r\n            });\r\n            grouped = _.groupBy(grouped, 'displayArea');\r\n\r\n            _.each(grouped, this.updateRegion, this);\r\n\r\n            _.each(this.regions, function (items) {\r\n                var hasObsoleteComponents = items().length && !_.intersection(_elems, items()).length;\r\n\r\n                if (hasObsoleteComponents) {\r\n                    items.removeAll();\r\n                }\r\n            });\r\n\r\n            this.elems(_elems);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Tries to call specified method of a current component,\r\n         * otherwise delegates attempt to its' children.\r\n         *\r\n         * @param {String} target - Name of the method.\r\n         * @param {...*} parameters - Arguments that will be passed to method.\r\n         * @returns {*} Result of the method calls.\r\n         */\r\n        delegate: function (target) {\r\n            var args = _.toArray(arguments);\r\n\r\n            target = this[target];\r\n\r\n            if (_.isFunction(target)) {\r\n                return target.apply(this, args.slice(1));\r\n            }\r\n\r\n            return this._delegate(args);\r\n        },\r\n\r\n        /**\r\n         * Calls 'delegate' method of all of it's children components.\r\n         * @private\r\n         *\r\n         * @param {Array} args - An array of arguments to pass to the next delegation call.\r\n         * @returns {Array} An array of delegation results.\r\n         */\r\n        _delegate: function (args) {\r\n            var result;\r\n\r\n            result = this.elems.map(function (elem) {\r\n                var target;\r\n\r\n                if (!_.isFunction(elem.delegate)) {\r\n                    target = elem[args[0]];\r\n\r\n                    if (_.isFunction(target)) {\r\n                        return target.apply(elem, args.slice(1));\r\n                    }\r\n                } else {\r\n                    return elem.delegate.apply(elem, args);\r\n                }\r\n            });\r\n\r\n            return _.flatten(result);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/core/events.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global WeakMap, Map*/\r\ndefine([\r\n    'ko',\r\n    'underscore'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    var eventsMap = new WeakMap();\r\n\r\n    /**\r\n     * Returns events map or a specific event\r\n     * data associated with a provided object.\r\n     *\r\n     * @param {Object} obj - Key in the events weakmap.\r\n     * @param {String} [name] - Name of the event.\r\n     * @returns {Map|Array|Boolean}\r\n     */\r\n    function getEvents(obj, name) {\r\n        var events = eventsMap.get(obj);\r\n\r\n        if (!events) {\r\n            return false;\r\n        }\r\n\r\n        return name ? events.get(name) : events;\r\n    }\r\n\r\n    /**\r\n     * Adds new event handler.\r\n     *\r\n     * @param {Object} obj - Key in the events weakmap.\r\n     * @param {String} ns - Callback namespace.\r\n     * @param {Function} callback - Event callback.\r\n     * @param {String} name - Name of the event.\r\n     */\r\n    function addHandler(obj, ns, callback, name) {\r\n        var events      = getEvents(obj),\r\n            observable,\r\n            data;\r\n\r\n        observable = !ko.isObservable(obj[name]) ?\r\n            ko.getObservable(obj, name) :\r\n            obj[name];\r\n\r\n        if (observable) {\r\n            observable.subscribe(callback);\r\n\r\n            return;\r\n        }\r\n\r\n        if (!events) {\r\n            events = new Map();\r\n\r\n            eventsMap.set(obj, events);\r\n        }\r\n\r\n        data = {\r\n            callback: callback,\r\n            ns: ns\r\n        };\r\n\r\n        events.has(name) ?\r\n            events.get(name).push(data) :\r\n            events.set(name, [data]);\r\n    }\r\n\r\n    /**\r\n     * Invokes provided callbacks with a specified arguments.\r\n     *\r\n     * @param {Array} handlers\r\n     * @param {Array} args\r\n     * @returns {Boolean}\r\n     */\r\n    function trigger(handlers, args) {\r\n        var bubble = true,\r\n            callback;\r\n\r\n        handlers.forEach(function (handler) {\r\n            callback = handler.callback;\r\n\r\n            if (callback.apply(null, args) === false) {\r\n                bubble = false;\r\n            }\r\n        });\r\n\r\n        return bubble;\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Calls callback when name event is triggered.\r\n         * @param  {String}   events\r\n         * @param  {Function} callback\r\n         * @param  {Function} ns\r\n         * @return {Object} reference to this\r\n         */\r\n        on: function (events, callback, ns) {\r\n            var iterator;\r\n\r\n            if (arguments.length < 2) {\r\n                ns = callback;\r\n            }\r\n\r\n            iterator = addHandler.bind(null, this, ns);\r\n\r\n            _.isObject(events) ?\r\n                _.each(events, iterator) :\r\n                iterator(callback, events);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removed callback from listening to target event\r\n         * @param  {String} ns\r\n         * @return {Object} reference to this\r\n         */\r\n        off: function (ns) {\r\n            var storage = getEvents(this);\r\n\r\n            if (!storage) {\r\n                return this;\r\n            }\r\n\r\n            storage.forEach(function (handlers, name) {\r\n                handlers = handlers.filter(function (handler) {\r\n                    return !ns ? false : handler.ns !== ns;\r\n                });\r\n\r\n                handlers.length ?\r\n                    storage.set(name, handlers) :\r\n                    storage.delete(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggers event and executes all attached callbacks.\r\n         *\r\n         * @param {String} name - Name of the event to be triggered.\r\n         * @returns {Boolean}\r\n         */\r\n        trigger: function (name) {\r\n            var handlers,\r\n                args;\r\n\r\n            handlers = getEvents(this, name),\r\n            args = _.toArray(arguments).slice(1);\r\n\r\n            if (!handlers || !name) {\r\n                return true;\r\n            }\r\n\r\n            return trigger(handlers, args);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/element/element.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiEvents',\r\n    'uiClass',\r\n    './links',\r\n    '../storage/local'\r\n], function (ko, _, utils, registry, Events, Class, links) {\r\n    'use strict';\r\n\r\n    var Element;\r\n\r\n    /**\r\n     * Creates observable property using knockouts'\r\n     * 'observableArray' or 'observable' methods,\r\n     * depending on a type of 'value' parameter.\r\n     *\r\n     * @param {Object} obj - Object to whom property belongs.\r\n     * @param {String} key - Key of the property.\r\n     * @param {*} value - Initial value.\r\n     */\r\n    function observable(obj, key, value) {\r\n        var method = Array.isArray(value) ? 'observableArray' : 'observable';\r\n\r\n        if (_.isFunction(obj[key]) && !ko.isObservable(obj[key])) {\r\n            return;\r\n        }\r\n\r\n        if (ko.isObservable(value)) {\r\n            value = value();\r\n        }\r\n\r\n        ko.isObservable(obj[key]) ?\r\n            obj[key](value) :\r\n            obj[key] = ko[method](value);\r\n    }\r\n\r\n    /**\r\n     * Creates observable property using 'track' method.\r\n     *\r\n     * @param {Object} obj - Object to whom property belongs.\r\n     * @param {String} key - Key of the property.\r\n     * @param {*} value - Initial value.\r\n     */\r\n    function accessor(obj, key, value) {\r\n        if (_.isFunction(obj[key]) || ko.isObservable(obj[key])) {\r\n            return;\r\n        }\r\n\r\n        obj[key] = value;\r\n\r\n        if (!ko.es5.isTracked(obj, key)) {\r\n            ko.track(obj, [key]);\r\n        }\r\n    }\r\n\r\n    Element = _.extend({\r\n        defaults: {\r\n            _requested: {},\r\n            containers: [],\r\n            exports: {},\r\n            imports: {},\r\n            links: {},\r\n            listens: {},\r\n            name: '',\r\n            ns: '${ $.name.split(\".\")[0] }',\r\n            provider: '',\r\n            registerNodes: true,\r\n            source: null,\r\n            statefull: {},\r\n            template: '',\r\n            tracks: {},\r\n            storageConfig: {\r\n                provider: 'localStorage',\r\n                namespace: '${ $.name }',\r\n                path: '${ $.storageConfig.provider }:${ $.storageConfig.namespace }'\r\n            },\r\n            maps: {\r\n                imports: {},\r\n                exports: {}\r\n            },\r\n            modules: {\r\n                storage: '${ $.storageConfig.provider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes model instance.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initObservable()\r\n                .initModules()\r\n                .initStatefull()\r\n                .initLinks()\r\n                .initUnique();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            _.each(this.tracks, function (enabled, key) {\r\n                if (enabled) {\r\n                    this.track(key);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Parses 'modules' object and creates\r\n         * async wrappers for specified components.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initModules: function () {\r\n            _.each(this.modules, function (name, property) {\r\n                if (name) {\r\n                    this[property] = this.requestModule(name);\r\n                }\r\n            }, this);\r\n\r\n            if (!_.isFunction(this.source)) {\r\n                this.source = registry.get(this.provider);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when current element was injected to another component.\r\n         *\r\n         * @param {Object} parent - Instance of a 'parent' component.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initContainer: function (parent) {\r\n            this.containers.push(parent);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes statefull properties\r\n         * based on the keys of 'statefull' object.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initStatefull: function () {\r\n            _.each(this.statefull, function (path, key) {\r\n                if (path) {\r\n                    this.setStatefull(key, path);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes links between properties.\r\n         *\r\n         * @returns {Element} Chainbale.\r\n         */\r\n        initLinks: function () {\r\n            return this.setListeners(this.listens)\r\n                       .setLinks(this.links, 'imports')\r\n                       .setLinks(this.links, 'exports')\r\n                       .setLinks(this.exports, 'exports')\r\n                       .setLinks(this.imports, 'imports');\r\n        },\r\n\r\n        /**\r\n         * Initializes listeners of the unique property.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initUnique: function () {\r\n            var update = this.onUniqueUpdate.bind(this),\r\n                uniqueNs = this.uniqueNs;\r\n\r\n            this.hasUnique = this.uniqueProp && uniqueNs;\r\n\r\n            if (this.hasUnique) {\r\n                this.source.on(uniqueNs, update, this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Makes specified property to be stored automatically.\r\n         *\r\n         * @param {String} key - Name of the property\r\n         *      that will be stored.\r\n         * @param {String} [path=key] - Path to the property in storage.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        setStatefull: function (key, path) {\r\n            var link = {};\r\n\r\n            path        = !_.isString(path) || !path ? key : path;\r\n            link[key]   = this.storageConfig.path + '.' + path;\r\n\r\n            this.setLinks(link, 'imports')\r\n                .setLinks(link, 'exports');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates property specified in uniqueNs\r\n         * if elements' unique property is set to 'true'.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        setUnique: function () {\r\n            var property = this.uniqueProp;\r\n\r\n            if (this[property]()) {\r\n                this.source.set(this.uniqueNs, this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates 'async' wrapper for the specified component\r\n         * using uiRegistry 'async' method and caches it\r\n         * in a '_requested' components  object.\r\n         *\r\n         * @param {String} name - Name of requested component.\r\n         * @returns {Function} Async module wrapper.\r\n         */\r\n        requestModule: function (name) {\r\n            var requested = this._requested;\r\n\r\n            if (!requested[name]) {\r\n                requested[name] = registry.async(name);\r\n            }\r\n\r\n            return requested[name];\r\n        },\r\n\r\n        /**\r\n         * Returns path to elements' template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getTemplate: function () {\r\n            return this.template;\r\n        },\r\n\r\n        /**\r\n         * Checks if template was specified for an element.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasTemplate: function () {\r\n            return !!this.template;\r\n        },\r\n\r\n        /**\r\n         * Returns value of the nested property.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         * @returns {*} Value of the property.\r\n         */\r\n        get: function (path) {\r\n            return utils.nested(this, path);\r\n        },\r\n\r\n        /**\r\n         * Sets provided value as a value of the specified nested property.\r\n         * Triggers changes notifications, if value has mutated.\r\n         *\r\n         * @param {String} path - Path to property.\r\n         * @param {*} value - New value of the property.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        set: function (path, value) {\r\n            var data = this.get(path),\r\n                diffs;\r\n\r\n            diffs = !_.isFunction(data) && !this.isTracked(path) ?\r\n                utils.compare(data, value, path) :\r\n                false;\r\n\r\n            utils.nested(this, path, value);\r\n\r\n            if (diffs) {\r\n                this._notifyChanges(diffs);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes nested property from the object.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        remove: function (path) {\r\n            var data = utils.nested(this, path),\r\n                diffs;\r\n\r\n            if (_.isUndefined(data) || _.isFunction(data)) {\r\n                return this;\r\n            }\r\n\r\n            diffs = utils.compare(data, undefined, path);\r\n\r\n            utils.nestedRemove(this, path);\r\n\r\n            this._notifyChanges(diffs);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates observable properties for the current object.\r\n         *\r\n         * If 'useTrack' flag is set to 'true' then each property will be\r\n         * created with a ES5 get/set accessor descriptors, instead of\r\n         * making them an observable functions.\r\n         * See 'knockout-es5' library for more information.\r\n         *\r\n         * @param {Boolean} [useAccessors=false] - Whether to create an\r\n         *      observable function or to use property accesessors.\r\n         * @param {(Object|String|Array)} properties - List of observable properties.\r\n         * @returns {Element} Chainable.\r\n         *\r\n         * @example Sample declaration and equivalent knockout methods.\r\n         *      this.key = 'value';\r\n         *      this.array = ['value'];\r\n         *\r\n         *      this.observe(['key', 'array']);\r\n         *      =>\r\n         *          this.key = ko.observable('value');\r\n         *          this.array = ko.observableArray(['value']);\r\n         *\r\n         * @example Another syntaxes of the previous example.\r\n         *      this.observe({\r\n         *          key: 'value',\r\n         *          array: ['value']\r\n         *      });\r\n         */\r\n        observe: function (useAccessors, properties) {\r\n            var model = this,\r\n                trackMethod;\r\n\r\n            if (typeof useAccessors !== 'boolean') {\r\n                properties   = useAccessors;\r\n                useAccessors = false;\r\n            }\r\n\r\n            trackMethod = useAccessors ? accessor : observable;\r\n\r\n            if (_.isString(properties)) {\r\n                properties = properties.split(' ');\r\n            }\r\n\r\n            if (Array.isArray(properties)) {\r\n                properties.forEach(function (key) {\r\n                    trackMethod(model, key, model[key]);\r\n                });\r\n            } else if (typeof properties === 'object') {\r\n                _.each(properties, function (value, key) {\r\n                    trackMethod(model, key, value);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Delegates call to 'observe' method but\r\n         * with a predefined 'useAccessors' flag.\r\n         *\r\n         * @param {(String|Array|Object)} properties - List of observable properties.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        track: function (properties) {\r\n            this.observe(true, properties);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified property is tracked.\r\n         *\r\n         * @param {String} property - Property to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isTracked: function (property) {\r\n            return ko.es5.isTracked(this, property);\r\n        },\r\n\r\n        /**\r\n         * Invokes subscribers for the provided changes.\r\n         *\r\n         * @param {Object} diffs - Object with changes descriptions.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _notifyChanges: function (diffs) {\r\n            diffs.changes.forEach(function (change) {\r\n                this.trigger(change.path, change.value, change);\r\n            }, this);\r\n\r\n            _.each(diffs.containers, function (changes, name) {\r\n                var value = utils.nested(this, name);\r\n\r\n                this.trigger(name, value, changes);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts all stored data and sets it to element.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        restore: function () {\r\n            var ns = this.storageConfig.namespace,\r\n                storage = this.storage();\r\n\r\n            if (storage) {\r\n                utils.extend(this, storage.get(ns));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Stores value of the specified property in components' storage module.\r\n         *\r\n         * @param {String} property\r\n         * @param {*} [data=this[property]]\r\n         * @returns {Element} Chainable.\r\n         */\r\n        store: function (property, data) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property);\r\n\r\n            if (arguments.length < 2) {\r\n                data = this.get(property);\r\n            }\r\n\r\n            this.storage('set', path, data);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts specified property from storage.\r\n         *\r\n         * @param {String} [property] - Name of the property\r\n         *      to be extracted. If not specified then all of the\r\n         *      stored will be returned.\r\n         * @returns {*}\r\n         */\r\n        getStored: function (property) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property),\r\n                storage = this.storage(),\r\n                data;\r\n\r\n            if (storage) {\r\n                data = storage.get(path);\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Removes stored property.\r\n         *\r\n         * @param {String} property - Property to be removed from storage.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        removeStored: function (property) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property);\r\n\r\n            this.storage('remove', path);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys current instance along with all of its' children.\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         */\r\n        destroy: function (skipUpdate) {\r\n            this._dropHandlers()\r\n                ._clearRefs(skipUpdate);\r\n        },\r\n\r\n        /**\r\n         * Removes events listeners.\r\n         * @private\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _dropHandlers: function () {\r\n            this.off();\r\n\r\n            if (_.isFunction(this.source)) {\r\n                this.source().off(this.name);\r\n            } else if (this.source) {\r\n                this.source.off(this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes all references to current instance and\r\n         * calls 'destroy' method on all of its' children.\r\n         * @private\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _clearRefs: function (skipUpdate) {\r\n            registry.remove(this.name);\r\n\r\n            this.containers.forEach(function (parent) {\r\n                parent.removeChild(this, skipUpdate);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Overrides 'EventsBus.trigger' method to implement events bubbling.\r\n         *\r\n         * @param {...*} arguments - Any number of arguments that should be passed to the events' handler.\r\n         * @returns {Boolean} False if event bubbling was canceled.\r\n         */\r\n        bubble: function () {\r\n            var args = _.toArray(arguments),\r\n                bubble = this.trigger.apply(this, args),\r\n                result;\r\n\r\n            if (!bubble) {\r\n                return false;\r\n            }\r\n\r\n            this.containers.forEach(function (parent) {\r\n                result = parent.bubble.apply(parent, args);\r\n\r\n                if (result === false) {\r\n                    bubble = false;\r\n                }\r\n            });\r\n\r\n            return !!bubble;\r\n        },\r\n\r\n        /**\r\n         * Callback which fires when property under uniqueNs has changed.\r\n         */\r\n        onUniqueUpdate: function (name) {\r\n            var active = name === this.name,\r\n                property = this.uniqueProp;\r\n\r\n            this[property](active);\r\n        },\r\n\r\n        /**\r\n         * Clean data form data source.\r\n         *\r\n         * @returns {Element}\r\n         */\r\n        cleanData: function () {\r\n            if (this.source && this.source.componentType === 'dataSource') {\r\n                if (this.elems) {\r\n                    _.each(this.elems(), function (val) {\r\n                        val.cleanData();\r\n                    });\r\n                } else {\r\n                    this.source.remove(this.dataScope);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Fallback data.\r\n         */\r\n        cacheData: function () {\r\n            this.cachedComponent = utils.copy(this);\r\n        },\r\n\r\n        /**\r\n         * Update configuration in component.\r\n         *\r\n         * @param {*} oldValue\r\n         * @param {*} newValue\r\n         * @param {String} path - path to value.\r\n         * @returns {Element}\r\n         */\r\n        updateConfig: function (oldValue, newValue, path) {\r\n            var names = path.split('.'),\r\n                index = _.lastIndexOf(names, 'config') + 1;\r\n\r\n            names = names.splice(index, names.length - index).join('.');\r\n            this.set(names, newValue);\r\n\r\n            return this;\r\n        }\r\n    }, Events, links);\r\n\r\n    return Class.extend(Element);\r\n});\r\n","Magento_Ui/js/lib/core/element/links.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry'\r\n], function (ko, _, utils, registry) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse provided data.\r\n     *\r\n     * @param {String} placeholder\r\n     * @param {String} data\r\n     * @param {String} direction\r\n     * @returns {Boolean|Object}\r\n     */\r\n    function parseData(placeholder, data, direction) {\r\n        if (typeof data !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        data = data.split(':');\r\n\r\n        if (!data[0]) {\r\n            return false;\r\n        }\r\n\r\n        if (!data[1]) {\r\n            data[1] = data[0];\r\n            data[0] = placeholder;\r\n        }\r\n\r\n        return {\r\n            target: data[0],\r\n            property: data[1],\r\n            direction: direction\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if value not empty.\r\n     *\r\n     * @param {*} value\r\n     * @returns {Boolean}\r\n     */\r\n    function notEmpty(value) {\r\n        return typeof value !== 'undefined' && value != null;\r\n    }\r\n\r\n    /**\r\n     * Update value for linked component.\r\n     *\r\n     * @param {Object} data\r\n     * @param {Object} owner\r\n     * @param {Object} target\r\n     * @param {*} value\r\n     */\r\n    function updateValue(data, owner, target, value) {\r\n        var component = target.component,\r\n            property = target.property,\r\n            linked = data.linked;\r\n\r\n        if (data.mute) {\r\n            return;\r\n        }\r\n\r\n        if (linked) {\r\n            linked.mute = true;\r\n        }\r\n\r\n        if (owner.component !== target.component) {\r\n            value = data.inversionValue ? !utils.copy(value) : utils.copy(value);\r\n        }\r\n\r\n        component.set(property, value, owner);\r\n\r\n        if (linked) {\r\n            linked.mute = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get value form owner component property.\r\n     *\r\n     * @param {Object} owner\r\n     * @returns {*}\r\n     */\r\n    function getValue(owner) {\r\n        var component = owner.component,\r\n            property = owner.property;\r\n\r\n        return component.get(property);\r\n    }\r\n\r\n    /**\r\n     * Format provided params to object.\r\n     *\r\n     * @param {String} ownerComponent\r\n     * @param {String} targetComponent\r\n     * @param {String} ownerProp\r\n     * @param {String} targetProp\r\n     * @param {String} direction\r\n     * @returns {Object}\r\n     */\r\n    function form(ownerComponent, targetComponent, ownerProp, targetProp, direction) {\r\n        var result,\r\n            tmp;\r\n\r\n        result = {\r\n            owner: {\r\n                component: ownerComponent,\r\n                property: ownerProp\r\n            },\r\n            target: {\r\n                component: targetComponent,\r\n                property: targetProp\r\n            }\r\n        };\r\n\r\n        if (direction === 'exports') {\r\n            tmp = result.owner;\r\n            result.owner = result.target;\r\n            result.target = tmp;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Set data to linked property.\r\n     *\r\n     * @param {Object} map\r\n     * @param {Object} data\r\n     */\r\n    function setLinked(map, data) {\r\n        var match;\r\n\r\n        if (!map) {\r\n            return;\r\n        }\r\n\r\n        match = _.findWhere(map, {\r\n            linked: false,\r\n            target: data.target,\r\n            property: data.property\r\n        });\r\n\r\n        if (match) {\r\n            match.linked = data;\r\n            data.linked = match;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set data by direction.\r\n     *\r\n     * @param {Object} maps\r\n     * @param {String} property\r\n     * @param {Object} data\r\n     */\r\n    function setData(maps, property, data) {\r\n        var direction   = data.direction,\r\n            map         = maps[direction];\r\n\r\n        data.linked = false;\r\n\r\n        (map[property] = map[property] || []).push(data);\r\n\r\n        direction = direction === 'imports' ? 'exports' : 'imports';\r\n\r\n        setLinked(maps[direction][property], data);\r\n    }\r\n\r\n    /**\r\n     * Set links for components.\r\n     *\r\n     * @param {String} target\r\n     * @param {String} owner\r\n     * @param {Object} data\r\n     * @param {String} property\r\n     * @param {Boolean} immediate\r\n     */\r\n    function setLink(target, owner, data, property, immediate) {\r\n        var direction = data.direction,\r\n            formated = form(target, owner, data.property, property, direction),\r\n            callback,\r\n            value;\r\n\r\n        owner = formated.owner;\r\n        target = formated.target;\r\n\r\n        callback = updateValue.bind(null, data, owner, target);\r\n\r\n        owner.component.on(owner.property, callback, target.component.name);\r\n\r\n        if (immediate) {\r\n            value = getValue(owner);\r\n\r\n            if (notEmpty(value)) {\r\n                updateValue(data, owner, target, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transfer data between components.\r\n     *\r\n     * @param {Object} owner\r\n     * @param {Object} data\r\n     */\r\n    function transfer(owner, data) {\r\n        var args = _.toArray(arguments);\r\n\r\n        if (data.target.substr(0, 1) === '!') {\r\n            data.target = data.target.substr(1);\r\n            data.inversionValue = true;\r\n        }\r\n\r\n        if (owner.name === data.target) {\r\n            args.unshift(owner);\r\n\r\n            setLink.apply(null, args);\r\n        } else {\r\n            registry.get(data.target, function (target) {\r\n                args.unshift(target);\r\n\r\n                setLink.apply(null, args);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Assign listeners.\r\n         *\r\n         * @param {Object} listeners\r\n         * @returns {Object} Chainable\r\n         */\r\n        setListeners: function (listeners) {\r\n            var owner = this,\r\n                data;\r\n\r\n            _.each(listeners, function (callbacks, sources) {\r\n                sources = sources.split(' ');\r\n                callbacks = callbacks.split(' ');\r\n\r\n                sources.forEach(function (target) {\r\n                    callbacks.forEach(function (callback) {//eslint-disable-line max-nested-callbacks\r\n                        data = parseData(owner.name, target, 'imports');\r\n\r\n                        if (data) {\r\n                            setData(owner.maps, callback, data);\r\n                            transfer(owner, data, callback);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set links in provided direction.\r\n         *\r\n         * @param {Object} links\r\n         * @param {String} direction\r\n         * @returns {Object} Chainable\r\n         */\r\n        setLinks: function (links, direction) {\r\n            var owner = this,\r\n                property,\r\n                data;\r\n\r\n            for (property in links) {\r\n                if (links.hasOwnProperty(property)) {\r\n                    data = parseData(owner.name, links[property], direction);\r\n\r\n                    if (data) {//eslint-disable-line max-depth\r\n                        setData(owner.maps, property, data);\r\n                        transfer(owner, data, property, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/storage/local.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiEvents'\r\n], function (_, registry, utils, EventsBus) {\r\n    'use strict';\r\n\r\n    var root = 'appData',\r\n        localStorage,\r\n        hasSupport,\r\n        storage;\r\n\r\n    /**\r\n     * Flag which indicates whether localStorage is supported.\r\n     */\r\n    hasSupport = (function () {\r\n        var key = '_storageSupported';\r\n\r\n        try {\r\n            localStorage = window.localStorage;\r\n            localStorage.setItem(key, 'true');\r\n\r\n            if (localStorage.getItem(key) === 'true') {\r\n                localStorage.removeItem(key);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    if (!hasSupport) {\r\n        localStorage = {\r\n            _data: {},\r\n\r\n            /**\r\n             * Sets value of the specified item.\r\n             *\r\n             * @param {String} key - Key of the property.\r\n             * @param {*} value - Properties' value.\r\n             */\r\n            setItem: function (key, value) {\r\n                this._data[key] = value + '';\r\n            },\r\n\r\n            /**\r\n             * Retrieves specified item.\r\n             *\r\n             * @param {String} key - Key of the property to be retrieved.\r\n             */\r\n            getItem: function (key) {\r\n                return this._data[key];\r\n            },\r\n\r\n            /**\r\n             * Removes specified item.\r\n             *\r\n             * @param {String} key - Key of the property to be removed.\r\n             */\r\n            removeItem: function (key) {\r\n                delete this._data[key];\r\n            },\r\n\r\n            /**\r\n             * Removes all items.\r\n             */\r\n            clear: function () {\r\n                this._data = {};\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Extracts and parses data stored in localStorage by the\r\n     * key specified in 'root' variable.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    function getRoot() {\r\n        var data = localStorage.getItem(root),\r\n            result = {};\r\n\r\n        if (!_.isNull(data) && typeof data != 'undefined') {\r\n            result = JSON.parse(data);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Writes provided data to the localStorage.\r\n     *\r\n     * @param {*} data - Data to be stored.\r\n     */\r\n    function setRoot(data) {\r\n        localStorage.setItem(root, JSON.stringify(data));\r\n    }\r\n\r\n    /**\r\n     * Provides methods to work with a localStorage\r\n     * as a single nested structure.\r\n     */\r\n    storage = _.extend({\r\n\r\n        /**\r\n         * Retrieves value of the specified property.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         *\r\n         * @example Retrieving data.\r\n         *      localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {\"two\": \"three\"}\r\n         *          '\r\n         *      storage.get('one.two')\r\n         *      => \"three\"\r\n         *\r\n         *      storage.get('one')\r\n         *      => {\"two\": \"three\"}\r\n         */\r\n        get: function (path) {\r\n            var data = getRoot();\r\n\r\n            return utils.nested(data, path);\r\n        },\r\n\r\n        /**\r\n         * Sets specified data to the localStorage.\r\n         *\r\n         * @param {String} path - Path of the property.\r\n         * @param {*} value - Value of the property.\r\n         *\r\n         * @example Setting data.\r\n         *      storage.set('one.two', 'four');\r\n         *      => localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {\"two\": \"four\"}\r\n         *          '\r\n         */\r\n        set: function (path, value) {\r\n            var data = getRoot();\r\n\r\n            utils.nested(data, path, value);\r\n\r\n            setRoot(data);\r\n        },\r\n\r\n        /**\r\n         * Removes specified data from the localStorage.\r\n         *\r\n         * @param {String} path - Path to the property that should be removed.\r\n         *\r\n         * @example Removing data.\r\n         *      storage.remove('one.two', 'four');\r\n         *      => localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {}\r\n         *          '\r\n         */\r\n        remove: function (path) {\r\n            var data = getRoot();\r\n\r\n            utils.nestedRemove(data, path);\r\n\r\n            setRoot(data);\r\n        }\r\n    }, EventsBus);\r\n\r\n    registry.set('localStorage', storage);\r\n\r\n    return storage;\r\n});\r\n","Magento_Ui/js/lib/knockout/bootstrap.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Loads all available knockout bindings, sets custom template engine, initializes knockout on page */\r\n\r\ndefine([\r\n    'ko',\r\n    './template/engine',\r\n    'knockoutjs/knockout-es5',\r\n    './bindings/bootstrap',\r\n    './extender/observable_array',\r\n    './extender/bound-nodes',\r\n    'domReady!'\r\n], function (ko, templateEngine) {\r\n    'use strict';\r\n\r\n    ko.uid = 0;\r\n\r\n    ko.setTemplateEngine(templateEngine);\r\n    ko.applyBindings();\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/after-render.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.afterRender = {\r\n\r\n        /**\r\n         * Binding init callback.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var callback = valueAccessor();\r\n\r\n            if (typeof callback === 'function') {\r\n                callback.call(viewModel, element, viewModel);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('afterRender');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/autoselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    '../template/renderer'\r\n], function (ko, $, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * 'Focus' event handler.\r\n     *\r\n     * @param {EventObject} e\r\n     */\r\n    function onFocus(e) {\r\n        e.target.select();\r\n    }\r\n\r\n    ko.bindingHandlers.autoselect = {\r\n\r\n        /**\r\n         * Adds event handler which automatically\r\n         * selects inputs' element text when field gets focused.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var enabled = ko.unwrap(valueAccessor());\r\n\r\n            if (enabled !== false) {\r\n                $(element).on('focus', onFocus);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('autoselect');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/bind-html.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/apply/main',\r\n    '../template/renderer'\r\n], function (ko, _, mage, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set html to node element.\r\n     *\r\n     * @param {HTMLElement} el - Element to apply bindings to.\r\n     * @param {Function} html - Observable html content.\r\n     */\r\n    function setHtml(el, html) {\r\n        ko.utils.emptyDomNode(el);\r\n        html = ko.utils.unwrapObservable(html);\r\n\r\n        if (!_.isNull(html) && !_.isUndefined(html)) {\r\n            if (!_.isString(html)) {\r\n                html = html.toString();\r\n            }\r\n\r\n            el.innerHTML = html;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply bindings and call magento attributes parser.\r\n     *\r\n     * @param {HTMLElement} el - Element to apply bindings to.\r\n     * @param {ko.bindingContext} ctx - Instance of ko.bindingContext, passed to binding initially.\r\n     */\r\n    function applyComponents(el, ctx) {\r\n        ko.utils.arrayForEach(el.childNodes, ko.cleanNode);\r\n        ko.applyBindingsToDescendants(ctx, el);\r\n        mage.apply();\r\n    }\r\n\r\n    ko.bindingHandlers.bindHtml = {\r\n        /**\r\n         * Scope binding's init method.\r\n         *\r\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\r\n         */\r\n        init: function () {\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding.\r\n         * Set html to node element, apply bindings and call magento attributes parser.\r\n         *\r\n         * @param {HTMLElement} el - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to el.\r\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\r\n         */\r\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            setHtml(el, valueAccessor());\r\n            applyComponents(el, bindingContext);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('bindHtml');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/bootstrap.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function (require) {\r\n    'use strict';\r\n\r\n    var renderer = require('../template/renderer');\r\n\r\n    renderer.addAttribute('repeat', renderer.handlers.wrapAttribute);\r\n\r\n    renderer.addAttribute('outerfasteach', {\r\n        binding: 'fastForEach',\r\n        handler: renderer.handlers.wrapAttribute\r\n    });\r\n\r\n    renderer\r\n        .addNode('repeat')\r\n        .addNode('fastForEach');\r\n\r\n    return {\r\n        resizable:      require('./resizable'),\r\n        i18n:           require('./i18n'),\r\n        scope:          require('./scope'),\r\n        range:          require('./range'),\r\n        mageInit:       require('./mage-init'),\r\n        keyboard:       require('./keyboard'),\r\n        optgroup:       require('./optgroup'),\r\n        afterRender:     require('./after-render'),\r\n        autoselect:     require('./autoselect'),\r\n        datepicker:     require('./datepicker'),\r\n        outerClick:     require('./outer_click'),\r\n        fadeVisible:    require('./fadeVisible'),\r\n        collapsible:    require('./collapsible'),\r\n        staticChecked:  require('./staticChecked'),\r\n        simpleChecked:  require('./simple-checked'),\r\n        bindHtml:       require('./bind-html'),\r\n        tooltip:        require('./tooltip'),\r\n        repeat:         require('knockoutjs/knockout-repeat'),\r\n        fastForEach:    require('knockoutjs/knockout-fast-foreach'),\r\n        colorPicker:    require('./color-picker')\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/collapsible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var collapsible,\r\n        defaults;\r\n\r\n    defaults = {\r\n        closeOnOuter: true,\r\n        onTarget: false,\r\n        openClass: '_active',\r\n        as: '$collapsible'\r\n    };\r\n\r\n    collapsible = {\r\n\r\n        /**\r\n         * Sets 'opened' property to true.\r\n         */\r\n        open: function () {\r\n            this.opened(true);\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' property to false.\r\n         */\r\n        close: function () {\r\n            this.opened(false);\r\n        },\r\n\r\n        /**\r\n         * Toggles value of the 'opened' property.\r\n         */\r\n        toggle: function () {\r\n            this.opened(!this.opened());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Document click handler which in case if event target is not\r\n     * a descendant of provided container element, closes collapsible model.\r\n     *\r\n     * @param {HTMLElement} container\r\n     * @param {Object} model\r\n     * @param {EventObject} e\r\n     */\r\n    function onOuterClick(container, model, e) {\r\n        var target = e.target;\r\n\r\n        if (target !== container && !container.contains(target)) {\r\n            model.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates 'css' binding which toggles\r\n     * class specified in 'name' parameter.\r\n     *\r\n     * @param {Object} model\r\n     * @param {String} name\r\n     * @returns {Object}\r\n     */\r\n    function getClassBinding(model, name) {\r\n        var binding = {};\r\n\r\n        binding[name] = model.opened;\r\n\r\n        return {\r\n            css: binding\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Prepares configuration for the binding based\r\n     * on a default properties and provided options.\r\n     *\r\n     * @param {Object} [options={}]\r\n     * @returns {Object} Complete instance configuration.\r\n     */\r\n    function buildConfig(options) {\r\n        if (typeof options !== 'object') {\r\n            options = {};\r\n        }\r\n\r\n        return _.extend({}, defaults, options);\r\n    }\r\n\r\n    ko.bindingHandlers.collapsible = {\r\n\r\n        /**\r\n         * Initializes 'collapsible' binding.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var $collapsible = Object.create(collapsible),\r\n                config = buildConfig(valueAccessor()),\r\n                outerClick,\r\n                bindings;\r\n\r\n            _.bindAll($collapsible, 'open', 'close', 'toggle');\r\n\r\n            $collapsible.opened = ko.observable(!!config.opened);\r\n\r\n            bindingCtx[config.as] = $collapsible;\r\n\r\n            if (config.closeOnOuter) {\r\n                outerClick = onOuterClick.bind(null, element, $collapsible);\r\n\r\n                $(document).on('click', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('click', outerClick);\r\n                });\r\n            }\r\n\r\n            if (config.openClass) {\r\n                bindings = getClassBinding($collapsible, config.openClass);\r\n\r\n                ko.applyBindingsToNode(element, bindings, bindingCtx);\r\n            }\r\n\r\n            if (config.onTarget) {\r\n                $(element).on('click', $collapsible.toggle);\r\n            }\r\n\r\n            if (viewModel && _.isFunction(viewModel.on)) {\r\n                viewModel.on({\r\n                    close:          $collapsible.close,\r\n                    open:           $collapsible.open,\r\n                    toggleOpened:   $collapsible.toggle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.closeCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which closes associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.close);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.openCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which opens associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.open);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.toggleCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which toggles associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.toggle);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer\r\n        .addAttribute('collapsible')\r\n        .addAttribute('openCollapsible')\r\n        .addAttribute('closeCollapsible')\r\n        .addAttribute('toggleCollapsible');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/color-picker.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    '../template/renderer',\r\n    'spectrum',\r\n    'tinycolor'\r\n], function (ko, $, renderer, spectrum, tinycolor) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Change color picker status to be enabled or disabled\r\n     *\r\n     * @param {HTMLElement} element - Element to apply colorpicker enable/disable status to.\r\n     * @param {Object} viewModel - Object, which represents view model binded to el.\r\n     */\r\n    function changeColorPickerStateBasedOnViewModel(element, viewModel) {\r\n        $(element).spectrum(viewModel.disabled() ? 'disable' : 'enable');\r\n    }\r\n\r\n    ko.bindingHandlers.colorPicker = {\r\n        /**\r\n         * Binding init callback.\r\n         *\r\n         * @param {*} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Function} allBindings\r\n         * @param {Object} viewModel\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = valueAccessor(),\r\n\r\n                /** change value */\r\n                changeValue = function (value) {\r\n                    if (value == null) {\r\n                        value = '';\r\n                    }\r\n                    config.value(value.toString());\r\n                };\r\n\r\n            config.change = changeValue;\r\n\r\n            config.hide = changeValue;\r\n\r\n            /** show value */\r\n            config.show = function () {\r\n                if (!viewModel.focused()) {\r\n                    viewModel.focused(true);\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            $(element).spectrum(config);\r\n\r\n            changeColorPickerStateBasedOnViewModel(element, viewModel);\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding, parses component declarations.\r\n         * Fetches for those found and attaches them to the new context.\r\n         *\r\n         * @param {HTMLElement} element - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to element.\r\n         */\r\n        update: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = valueAccessor();\r\n\r\n            /** Initialise value as empty if it is undefined when color picker input is reset **/\r\n            if (config.value() === undefined) {\r\n                config.value('');\r\n            }\r\n\r\n            if (tinycolor(config.value()).isValid() || config.value() === '') {\r\n                $(element).spectrum('set', config.value());\r\n\r\n                if (config.value() !== '') {\r\n                    config.value($(element).spectrum('get').toString());\r\n                }\r\n            }\r\n\r\n            changeColorPickerStateBasedOnViewModel(element, viewModel);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('colorPicker');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/datepicker.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates datepicker binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'jquery',\r\n    'mage/translate'\r\n], function (ko, _, $, $t) {\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        dateFormat: 'mm\\/dd\\/yyyy',\r\n        showsTime: false,\r\n        timeFormat: null,\r\n        buttonImage: null,\r\n        buttonImageOnly: null,\r\n        buttonText: $t('Select Date')\r\n    };\r\n\r\n    ko.bindingHandlers.datepicker = {\r\n        /**\r\n         * Initializes calendar widget on element and stores it's value to observable property.\r\n         * Datepicker binding takes either observable property or object\r\n         *  { storage: {ko.observable}, options: {Object} }.\r\n         * For more info about options take a look at \"mage/calendar\" and jquery.ui.datepicker widget.\r\n         * @param {HTMLElement} el - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         */\r\n        init: function (el, valueAccessor) {\r\n            var config = valueAccessor(),\r\n                observable,\r\n                options = {};\r\n\r\n            _.extend(options, defaults);\r\n\r\n            if (typeof config === 'object') {\r\n                observable = config.storage;\r\n                _.extend(options, config.options);\r\n            } else {\r\n                observable = config;\r\n            }\r\n\r\n            require(['mage/calendar'], function () {\r\n                $(el).calendar(options);\r\n\r\n                ko.utils.registerEventHandler(el, 'change', function () {\r\n                    observable(this.value);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Update calendar widget on element and stores it's value to observable property.\r\n         * Datepicker binding takes either observable property or object\r\n         *  { storage: {ko.observable}, options: {Object} }.\r\n         * @param {HTMLElement} element - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var config = valueAccessor(),\r\n                $element = $(element),\r\n                observable,\r\n                options = {},\r\n                newVal;\r\n\r\n            _.extend(options, defaults);\r\n\r\n            if (typeof config === 'object') {\r\n                observable = config.storage;\r\n                _.extend(options, config.options);\r\n            } else {\r\n                observable = config;\r\n            }\r\n\r\n            require(['moment', 'mage/utils/misc', 'mage/calendar'], function (moment, utils) {\r\n                if (_.isEmpty(observable())) {\r\n                    newVal = null;\r\n                } else {\r\n                    newVal = moment(\r\n                        observable(),\r\n                        utils.convertToMomentFormat(\r\n                            options.dateFormat + (options.showsTime ? ' ' + options.timeFormat : '')\r\n                        )\r\n                    ).toDate();\r\n                }\r\n\r\n                $element.datepicker('setDate', newVal);\r\n                $element.blur();\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/fadeVisible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko'\r\n], function ($, ko) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.fadeVisible = {\r\n        /**\r\n         * Initially set the element to be instantly visible/hidden depending on the value.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var value = valueAccessor();\r\n\r\n            // Use \"unwrapObservable\" so we can handle values that may or may not be observable\r\n            $(element).toggle(ko.unwrap(value));\r\n        },\r\n\r\n        /**\r\n         * Whenever the value subsequently changes, slowly fade the element in or out.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var value = valueAccessor();\r\n\r\n            ko.unwrap(value) ? $(element).fadeIn() : $(element).fadeOut();\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/i18n.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'module',\r\n    '../template/renderer',\r\n    'mage/translate'\r\n], function ($, ko, module, renderer) {\r\n    'use strict';\r\n\r\n    var locations = {\r\n            'legend': 'Caption for the fieldset element',\r\n            'label': 'Label for an input element.',\r\n            'button': 'Push button',\r\n            'a': 'Link label',\r\n            'b': 'Bold text',\r\n            'strong': 'Strong emphasized text',\r\n            'i': 'Italic text',\r\n            'em': 'Emphasized text',\r\n            'u': 'Underlined text',\r\n            'sup': 'Superscript text',\r\n            'sub': 'Subscript text',\r\n            'span': 'Span element',\r\n            'small': 'Smaller text',\r\n            'big': 'Bigger text',\r\n            'address': 'Contact information',\r\n            'blockquote': 'Long quotation',\r\n            'q': 'Short quotation',\r\n            'cite': 'Citation',\r\n            'caption': 'Table caption',\r\n            'abbr': 'Abbreviated phrase',\r\n            'acronym': 'An acronym',\r\n            'var': 'Variable part of a text',\r\n            'dfn': 'Term',\r\n            'strike': 'Strikethrough text',\r\n            'del': 'Deleted text',\r\n            'ins': 'Inserted text',\r\n            'h1': 'Heading level 1',\r\n            'h2': 'Heading level 2',\r\n            'h3': 'Heading level 3',\r\n            'h4': 'Heading level 4',\r\n            'h5': 'Heading level 5',\r\n            'h6': 'Heading level 6',\r\n            'center': 'Centered text',\r\n            'select': 'List options',\r\n            'img': 'Image',\r\n            'input': 'Form element'\r\n        },\r\n\r\n        /**\r\n         * Generates [data-translate] attribute's value\r\n         * @param {Object} translationData\r\n         * @param {String} location\r\n         */\r\n        composeTranslateAttr = function (translationData, location) {\r\n            var obj = [{\r\n                'shown': translationData.shown,\r\n                'translated': translationData.translated,\r\n                'original': translationData.original,\r\n                'location': locations[location] || 'Text'\r\n            }];\r\n\r\n            return JSON.stringify(obj);\r\n        },\r\n\r\n        /**\r\n         * Sets text for the element\r\n         * @param {Object} el\r\n         * @param {String} text\r\n         */\r\n        setText = function (el, text) {\r\n            $(el).text(text);\r\n        },\r\n\r\n        /**\r\n         * Sets [data-translate] attribute for the element\r\n         * @param {Object} el - The element which is binded\r\n         * @param {String} original - The original value of the element\r\n         */\r\n        setTranslateProp = function (el, original) {\r\n            var location = $(el).prop('tagName').toLowerCase(),\r\n                translated = $.mage.__(original),\r\n                translationData = {\r\n                    shown: translated,\r\n                    translated: translated,\r\n                    original: original\r\n                },\r\n                translateAttr = composeTranslateAttr(translationData, location);\r\n\r\n            $(el).attr('data-translate', translateAttr);\r\n\r\n            setText(el, translationData.shown);\r\n        },\r\n\r\n        /**\r\n         * Checks if node represents ko virtual node (nodeType === 8, nodeName === '#comment').\r\n         *\r\n         * @param {HTMLElement} node\r\n         * @returns {Boolean}\r\n         */\r\n        isVirtualElement = function (node) {\r\n            return node.nodeType === 8;\r\n        },\r\n\r\n        /**\r\n        * Checks if it's real DOM element\r\n        * in case of virtual element, returns span wrapper\r\n        * @param {Object} el\r\n        * @param {bool} isUpdate\r\n        * @return {Object} el\r\n        */\r\n        getRealElement = function (el, isUpdate) {\r\n            if (isVirtualElement(el)) {\r\n                if (isUpdate) {\r\n                    return $(el).next('span');\r\n                }\r\n\r\n                return $('<span/>').insertAfter(el);\r\n            }\r\n\r\n            return el;\r\n        },\r\n\r\n        /**\r\n         * execute i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         * @param {bool} isUpdate\r\n         */\r\n        execute = function (element, valueAccessor, isUpdate) {\r\n            var original = ko.unwrap(valueAccessor() || ''),\r\n                el = getRealElement(element, isUpdate),\r\n                inlineTranslation = (module.config() || {}).inlineTranslation;\r\n\r\n            if (inlineTranslation) {\r\n                setTranslateProp(el, original);\r\n            } else {\r\n                setText(el, $.mage.__(original));\r\n            }\r\n        };\r\n\r\n    /**\r\n     * i18n binding\r\n     * @property {Function}  init\r\n     * @property {Function}  update\r\n     */\r\n    ko.bindingHandlers.i18n = {\r\n\r\n        /**\r\n         * init i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            execute(element, valueAccessor);\r\n        },\r\n\r\n        /**\r\n         * update i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            execute(element, valueAccessor, true);\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.i18n = true;\r\n\r\n    renderer\r\n        .addNode('translate', {\r\n            binding: 'i18n'\r\n        })\r\n        .addAttribute('translate', {\r\n            binding: 'i18n'\r\n        });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/keyboard.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.keyboard = {\r\n\r\n        /**\r\n         * Attaches keypress handlers to element\r\n         * @param {HTMLElement} el - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         * @param  {Object} allBindings - all bindings object\r\n         * @param  {Object} viewModel - reference to viewmodel\r\n         */\r\n        init: function (el, valueAccessor, allBindings, viewModel) {\r\n            var map = valueAccessor();\r\n\r\n            ko.utils.registerEventHandler(el, 'keyup', function (e) {\r\n                var callback = map[e.keyCode];\r\n\r\n                if (callback) {\r\n                    return callback.call(viewModel, e);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('keyboard');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/mage-init.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/apply/main'\r\n], function (ko, _, mage) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.mageInit = {\r\n        /**\r\n         * Initializes components assigned to HTML elements.\r\n         *\r\n         * @param {HTMLElement} el\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (el, valueAccessor) {\r\n            var data = valueAccessor();\r\n\r\n            _.each(data, function (config, component) {\r\n                mage.applyFor(el, config, component);\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/optgroup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'mageUtils'\r\n    ], function (ko, utils) {\r\n    'use strict';\r\n\r\n    var captionPlaceholder = {},\r\n        optgroupTmpl = '<optgroup label=\"${ $.label }\"></optgroup>',\r\n        nbspRe = /&nbsp;/g,\r\n        optionsText,\r\n        optionsValue,\r\n        optionTitle;\r\n\r\n    ko.bindingHandlers.optgroup = {\r\n        /**\r\n         * @param {*} element\r\n         * @returns {Object}\r\n         */\r\n        init: function (element) {\r\n            if (ko.utils.tagNameLower(element) !== 'select') {\r\n                throw new Error('options binding applies only to SELECT elements');\r\n            }\r\n\r\n            // Remove all existing <option>s.\r\n            while (element.length > 0) {\r\n                element.remove(0);\r\n            }\r\n\r\n            // Ensures that the binding processor doesn't try to bind the options\r\n            return {\r\n                'controlsDescendantBindings': true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @param {*} element\r\n         * @param {*} valueAccessor\r\n         * @param {*} allBindings\r\n         */\r\n        update: function (element, valueAccessor, allBindings) {\r\n            var selectWasPreviouslyEmpty = element.length === 0,\r\n                previousScrollTop = !selectWasPreviouslyEmpty && element.multiple ? element.scrollTop : null,\r\n                includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n                arrayToDomNodeChildrenOptions = {},\r\n                captionValue,\r\n                unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\r\n                filteredArray,\r\n                previousSelectedValues,\r\n                itemUpdate = false,\r\n                callback = setSelectionCallback,//eslint-disable-line no-use-before-define\r\n                nestedOptionsLevel = -1;\r\n\r\n            optionsText = ko.utils.unwrapObservable(allBindings.get('optionsText')) || 'text';\r\n            optionsValue = ko.utils.unwrapObservable(allBindings.get('optionsValue')) || 'value';\r\n            optionTitle = optionsText + 'title';\r\n\r\n            if (element.multiple) {\r\n                previousSelectedValues = ko.utils.arrayMap(\r\n                    selectedOptions(),//eslint-disable-line no-use-before-define\r\n                    ko.selectExtensions.readValue\r\n                );\r\n            } else {\r\n                previousSelectedValues = element.selectedIndex >= 0 ?\r\n                    [ko.selectExtensions.readValue(element.options[element.selectedIndex])] :\r\n                    [];\r\n            }\r\n\r\n            if (unwrappedArray) {\r\n                if (typeof unwrappedArray.length === 'undefined') { // Coerce single value into array\r\n                    unwrappedArray = [unwrappedArray];\r\n                }\r\n\r\n                // Filter out any entries marked as destroyed\r\n                filteredArray = ko.utils.arrayFilter(unwrappedArray, function (item) {\r\n                    if (item && !item.label) {\r\n                        return false;\r\n                    }\r\n\r\n                    return includeDestroyed ||\r\n                        item === undefined ||\r\n                        item === null ||\r\n                        !ko.utils.unwrapObservable(item._destroy);\r\n                });\r\n                filteredArray.map(recursivePathBuilder, null);//eslint-disable-line no-use-before-define\r\n            }\r\n\r\n            /**\r\n             * @param {*} option\r\n             */\r\n            arrayToDomNodeChildrenOptions.beforeRemove = function (option) {\r\n                element.removeChild(option);\r\n            };\r\n\r\n            if (allBindings.has('optionsAfterRender')) {\r\n\r\n                /**\r\n                 * @param {*} arrayEntry\r\n                 * @param {*} newOptions\r\n                 */\r\n                callback = function (arrayEntry, newOptions) {\r\n                    setSelectionCallback(arrayEntry, newOptions);//eslint-disable-line no-use-before-define\r\n                    ko.dependencyDetection.ignore(\r\n                        allBindings.get('optionsAfterRender'),\r\n                        null,\r\n                        [newOptions[0],\r\n                        arrayEntry !== captionPlaceholder ? arrayEntry : undefined]\r\n                    );\r\n                };\r\n            }\r\n\r\n            filteredArray = formatOptions(filteredArray);//eslint-disable-line no-use-before-define\r\n            ko.utils.setDomNodeChildrenFromArrayMapping(\r\n                element,\r\n                filteredArray,\r\n                optionNodeFromArray,//eslint-disable-line no-use-before-define\r\n                arrayToDomNodeChildrenOptions,\r\n                callback\r\n            );\r\n\r\n            ko.dependencyDetection.ignore(function () {\r\n                var selectionChanged;\r\n\r\n                if (allBindings.get('valueAllowUnset') && allBindings.has('value')) {\r\n                    // The model value is authoritative, so make sure its value is the one selected\r\n                    ko.selectExtensions.writeValue(\r\n                        element,\r\n                        ko.utils.unwrapObservable(allBindings.get('value')),\r\n                        true /* allowUnset */\r\n                    );\r\n                } else {\r\n                    // Determine if the selection has changed as a result of updating the options list\r\n                    if (element.multiple) {\r\n                        // For a multiple-select box, compare the new selection count to the previous one\r\n                        // But if nothing was selected before, the selection can't have changed\r\n                        selectionChanged = previousSelectedValues.length &&\r\n                            selectedOptions().length < //eslint-disable-line no-use-before-define\r\n                            previousSelectedValues.length;\r\n                    } else {\r\n                        // For a single-select box, compare the current value to the previous value\r\n                        // But if nothing was selected before or nothing is selected now,\r\n                        // just look for a change in selection\r\n                        selectionChanged = previousSelectedValues.length && element.selectedIndex >= 0 ?\r\n                            ko.selectExtensions.readValue(element.options[element.selectedIndex]) !==\r\n                            previousSelectedValues[0] : previousSelectedValues.length || element.selectedIndex >= 0;\r\n                    }\r\n\r\n                    // Ensure consistency between model value and selected option.\r\n                    // If the dropdown was changed so that selection is no longer the same,\r\n                    // notify the value or selectedOptions binding.\r\n                    if (selectionChanged) {\r\n                        ko.utils.triggerEvent(element, 'change');\r\n                    }\r\n                }\r\n            });\r\n\r\n            /*eslint-enable max-len, no-use-before-define*/\r\n\r\n            if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20) {\r\n                element.scrollTop = previousScrollTop;\r\n            }\r\n\r\n            /**\r\n             * @returns {*}\r\n             */\r\n            function selectedOptions() {\r\n                return ko.utils.arrayFilter(element.options, function (node) {\r\n                    return node.selected;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @param {*} object\r\n             * @param {*} predicate\r\n             * @param {*} defaultValue\r\n             * @returns {*}\r\n             */\r\n            function applyToObject(object, predicate, defaultValue) {\r\n                var predicateType = typeof predicate;\r\n\r\n                if (predicateType === 'function') {   // run it against the data value\r\n                    return predicate(object);\r\n                } else if (predicateType === 'string') { // treat it as a property name on the data value\r\n                    return object[predicate];\r\n                }\r\n\r\n                return defaultValue;\r\n            }\r\n\r\n            /**\r\n             * @param {*} obj\r\n             */\r\n            function recursivePathBuilder(obj) {\r\n\r\n                obj[optionTitle] = (this && this[optionTitle] ? this[optionTitle] + '/' : '') + obj[optionsText].trim();\r\n\r\n                if (Array.isArray(obj[optionsValue])) {\r\n                    obj[optionsValue].map(recursivePathBuilder, obj);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @param {Array} arrayEntry\r\n             * @param {*} oldOptions\r\n             * @returns {*[]}\r\n             */\r\n            function optionNodeFromArray(arrayEntry, oldOptions) {\r\n                var option;\r\n\r\n                if (oldOptions.length) {\r\n                    previousSelectedValues = oldOptions[0].selected ?\r\n                        [ko.selectExtensions.readValue(oldOptions[0])] : [];\r\n                    itemUpdate = true;\r\n                }\r\n\r\n                if (arrayEntry === captionPlaceholder) { // empty value, label === caption\r\n                    option = element.ownerDocument.createElement('option');\r\n                    ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\r\n                    ko.selectExtensions.writeValue(option, undefined);\r\n                } else if (typeof arrayEntry[optionsValue] === 'undefined') { // empty value === optgroup\r\n                    if (arrayEntry.__disableTmpl) {\r\n                        option = '<optgroup label=\"' + arrayEntry[optionsText] + '\"></optgroup>';\r\n                    } else {\r\n                        option = utils.template(optgroupTmpl, {\r\n                            label: arrayEntry[optionsText],\r\n                            title: arrayEntry[optionsText + 'title']\r\n                        });\r\n                    }\r\n                    option = ko.utils.parseHtmlFragment(option)[0];\r\n\r\n                } else {\r\n                    option = element.ownerDocument.createElement('option');\r\n                    option.setAttribute('data-title', arrayEntry[optionsText + 'title']);\r\n                    ko.selectExtensions.writeValue(option, arrayEntry[optionsValue]);\r\n                    ko.utils.setTextContent(option, arrayEntry[optionsText]);\r\n                }\r\n\r\n                return [option];\r\n            }\r\n\r\n            /**\r\n             * @param {*} newOptions\r\n             */\r\n            function setSelectionCallback(newOptions) {\r\n                var isSelected;\r\n\r\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                // That's why we first added them without selection. Now it's time to set the selection.\r\n                if (previousSelectedValues.length && newOptions.value) {\r\n                    isSelected = ko.utils.arrayIndexOf(\r\n                        previousSelectedValues,\r\n                        ko.selectExtensions.readValue(newOptions.value)\r\n                    ) >= 0;\r\n\r\n                    ko.utils.setOptionNodeSelectionState(newOptions.value, isSelected);\r\n\r\n                    // If this option was changed from being selected during a single-item update, notify the change\r\n                    if (itemUpdate && !isSelected) {\r\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, 'change']);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @param {*} string\r\n             * @param {Number} times\r\n             * @returns {Array}\r\n             */\r\n            function strPad(string, times) {\r\n                return (new Array(times + 1)).join(string);\r\n            }\r\n\r\n            /**\r\n             * @param {*} options\r\n             * @returns {Array}\r\n             */\r\n            function formatOptions(options) {\r\n                var res = [];\r\n\r\n                nestedOptionsLevel++;\r\n\r\n                if (!nestedOptionsLevel) { // zero level\r\n                    // If caption is included, add it to the array\r\n                    if (allBindings.has('optionsCaption')) {\r\n                        captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\r\n                        // If caption value is null or undefined, don't show a caption\r\n                        if (//eslint-disable-line max-depth\r\n                            captionValue !== null &&\r\n                            captionValue !== undefined &&\r\n                            captionValue !== false\r\n                        ) {\r\n                            res.push(captionPlaceholder);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                ko.utils.arrayForEach(options, function (option) {\r\n                    var value = applyToObject(option, optionsValue, option),\r\n                        label = applyToObject(option, optionsText, value) || '',\r\n                        disabled = applyToObject(option, 'disabled', false) || false,\r\n                        obj = {},\r\n                        space = '\\u2007\\u2007\\u2007';\r\n\r\n                    obj[optionTitle] = applyToObject(option, optionsText + 'title', value);\r\n\r\n                    if (disabled) {\r\n                        obj.disabled = disabled;\r\n                    }\r\n\r\n                    if (option.hasOwnProperty('__disableTmpl')) {\r\n                        obj.__disableTmpl = option.__disableTmpl;\r\n                    }\r\n\r\n                    label = label.replace(nbspRe, '').trim();\r\n\r\n                    if (Array.isArray(value)) {\r\n                        obj[optionsText] = strPad('&nbsp;', nestedOptionsLevel * 4) + label;\r\n                        res.push(obj);\r\n                        res = res.concat(formatOptions(value));\r\n                    } else {\r\n                        obj[optionsText] = strPad(space, nestedOptionsLevel * 2) + label;\r\n                        obj[optionsValue] = value;\r\n                        res.push(obj);\r\n                    }\r\n                });\r\n                nestedOptionsLevel--;\r\n\r\n                return res;\r\n            }\r\n        }\r\n    };\r\n    ko.bindingHandlers.selectedOptions.after.push('optgroup');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/outer_click.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates outerClick binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        onlyIfVisible: true\r\n    };\r\n\r\n    /**\r\n     * Checks if element sis visible.\r\n     *\r\n     * @param {Element} el\r\n     * @returns {Boolean}\r\n     */\r\n    function isVisible(el) {\r\n        var style = window.getComputedStyle(el),\r\n            visibility = {\r\n                display: 'none',\r\n                visibility: 'hidden',\r\n                opacity: '0'\r\n            },\r\n            visible = true;\r\n\r\n        _.each(visibility, function (val, key) {\r\n            if (style[key] === val) {\r\n                visible = false;\r\n            }\r\n        });\r\n\r\n        return visible;\r\n    }\r\n\r\n    /**\r\n     * Document click handler which in case if event target is not\r\n     * a descendant of provided container element,\r\n     * invokes specified in configuration callback.\r\n     *\r\n     * @param {HTMLElement} container\r\n     * @param {Object} config\r\n     * @param {EventObject} e\r\n     */\r\n    function onOuterClick(container, config, e) {\r\n        var target = e.target,\r\n            callback = config.callback;\r\n\r\n        if (container === target || container.contains(target)) {\r\n            return;\r\n        }\r\n\r\n        if (config.onlyIfVisible) {\r\n            if (!_.isNull(container.offsetParent) && isVisible(container)) {\r\n                callback();\r\n            }\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prepares configuration for the binding based\r\n     * on a default properties and provided options.\r\n     *\r\n     * @param {(Object|Function)} [options={}]\r\n     * @returns {Object}\r\n     */\r\n    function buildConfig(options) {\r\n        var config = {};\r\n\r\n        if (_.isFunction(options)) {\r\n            options = {\r\n                callback: options\r\n            };\r\n        } else if (!_.isObject(options)) {\r\n            options = {};\r\n        }\r\n\r\n        return _.extend(config, defaults, options);\r\n    }\r\n\r\n    ko.bindingHandlers.outerClick = {\r\n\r\n        /**\r\n         * Initializes outer click binding.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var config = buildConfig(valueAccessor()),\r\n                outerClick = onOuterClick.bind(null, element, config),\r\n                isTouchDevice = typeof document.ontouchstart !== 'undefined';\r\n\r\n            if (isTouchDevice) {\r\n                $(document).on('touchstart', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('touchstart', outerClick);\r\n                });\r\n            } else {\r\n                $(document).on('click', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('click', outerClick);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('outerClick');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/range.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var isTouchDevice = !_.isUndefined(document.ontouchstart),\r\n        sliderFn = 'slider',\r\n        sliderModule = 'jquery-ui-modules/slider';\r\n\r\n    if (isTouchDevice) {\r\n        sliderFn = 'touchSlider';\r\n        sliderModule = 'mage/touch-slider';\r\n    }\r\n\r\n    ko.bindingHandlers.range = {\r\n\r\n        /**\r\n         * Initializes binding and a slider update.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var config  = valueAccessor(),\r\n                value   = config.value;\r\n\r\n            _.extend(config, {\r\n                value: value(),\r\n\r\n                /**\r\n                 * Callback which is being called when sliders' value changes.\r\n                 *\r\n                 * @param {Event} event\r\n                 * @param {Object} ui\r\n                 */\r\n                slide: function (event, ui) {\r\n                    value(ui.value);\r\n                }\r\n            });\r\n\r\n            require([sliderModule], function () {\r\n                $(element)[sliderFn](config);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates sliders' plugin configuration.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var config = valueAccessor();\r\n\r\n            config.value = ko.unwrap(config.value);\r\n\r\n            require([sliderModule], function () {\r\n                $(element)[sliderFn]('option', config);\r\n            });\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('range');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/resizable.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiRegistry',\r\n    'underscore',\r\n    '../template/renderer',\r\n    'jquery-ui-modules/resizable'\r\n], function (ko, $, async, registry, _, renderer) {\r\n    'use strict';\r\n\r\n    var sizeOptions = [\r\n            'minHeight',\r\n            'maxHeight',\r\n            'minWidth',\r\n            'maxWidth'\r\n        ],\r\n\r\n        handles = {\r\n            height: '.ui-resizable-s, .ui-resizable-n',\r\n            width: '.ui-resizable-w, .ui-resizable-e'\r\n        };\r\n\r\n    /**\r\n     * Recalcs visibility of handles, width and height of resizable based on content\r\n     * @param {HTMLElement} element\r\n     */\r\n    function adjustSize(element) {\r\n        var maxHeight,\r\n            maxWidth;\r\n\r\n        element = $(element);\r\n        maxHeight = element.resizable('option').maxHeight;\r\n        maxWidth = element.resizable('option').maxWidth;\r\n\r\n        if (maxHeight && element.height() > maxHeight) {\r\n            element.height(maxHeight + 1);\r\n            $(handles.height).hide();\r\n        } else {\r\n            $(handles.height).show();\r\n        }\r\n\r\n        if (maxWidth && element.width() > maxWidth) {\r\n            element.width(maxWidth + 1);\r\n            $(handles.width).hide();\r\n        } else {\r\n            $(handles.width).show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recalcs allowed min, max width and height based on configured selectors\r\n     * @param {Object} sizeConstraints\r\n     * @param {String} componentName\r\n     * @param {HTMLElement} element\r\n     * @param {Boolean} hasWidthUpdate\r\n     */\r\n    function recalcAllowedSize(sizeConstraints, componentName, element, hasWidthUpdate) {\r\n        var size;\r\n\r\n        element = $(element);\r\n\r\n        if (!element.data('resizable')) {\r\n            return;\r\n        }\r\n\r\n        if (!hasWidthUpdate) {\r\n            element.css('width', 'auto');\r\n        }\r\n\r\n        _.each(sizeConstraints, function (selector, key) {\r\n            async.async({\r\n                component: componentName,\r\n                selector: selector\r\n            }, function (elem) {\r\n                size = key.indexOf('Height') !== -1 ? $(elem).outerHeight(true) : $(elem).outerWidth(true);\r\n\r\n                if (element.data('resizable')) {\r\n                    element.resizable('option', key, size + 1);\r\n                }\r\n            });\r\n        }, this);\r\n\r\n        adjustSize(element);\r\n    }\r\n\r\n    /**\r\n     * Preprocess config to separate options,\r\n     * which must be processed further before applying\r\n     *\r\n     * @param {Object} config\r\n     * @param {Object} viewModel\r\n     * @param {*} element\r\n     * @return {Object} config\r\n     */\r\n    function processConfig(config, viewModel, element) {\r\n        var sizeConstraint,\r\n            sizeConstraints = {},\r\n            recalc,\r\n            hasWidthUpdate;\r\n\r\n        if (_.isEmpty(config)) {\r\n            return {};\r\n        }\r\n        _.each(sizeOptions, function (key) {\r\n            sizeConstraint = config[key];\r\n\r\n            if (sizeConstraint && !_.isNumber(sizeConstraint)) {\r\n                sizeConstraints[key] = sizeConstraint;\r\n                delete config[key];\r\n            }\r\n        });\r\n        hasWidthUpdate =  _.some(sizeConstraints, function (value, key) {\r\n            return key.indexOf('Width') !== -1;\r\n        });\r\n\r\n        recalc = recalcAllowedSize.bind(null, sizeConstraints, viewModel.name, element, hasWidthUpdate);\r\n        config.start = recalc;\r\n        $(window).on('resize.resizable', recalc);\r\n        registry.get(viewModel.provider).on('reloaded', recalc);\r\n\r\n        return config;\r\n    }\r\n\r\n    ko.bindingHandlers.resizable = {\r\n\r\n        /**\r\n         * Binding init callback.\r\n         *\r\n         * @param {*} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Function} allBindings\r\n         * @param {Object} viewModel\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = processConfig(valueAccessor(), viewModel, element);\r\n\r\n            $(element).resizable(config);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('resizable');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/scope.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates scope binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'uiRegistry',\r\n    'mage/translate',\r\n    '../template/renderer',\r\n    'jquery',\r\n    '../../logger/console-logger'\r\n], function (ko, registry, $t, renderer, $, consoleLogger) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Creates child context with passed component param as $data. Extends context with $t helper.\r\n     * Applies bindings to descendant nodes.\r\n     * @param {HTMLElement} el - element to apply bindings to.\r\n     * @param {ko.bindingContext} bindingContext - instance of ko.bindingContext, passed to binding initially.\r\n     * @param {Promise} promise - instance of jQuery promise\r\n     * @param {Object} component - component instance to attach to new context\r\n     */\r\n    function applyComponents(el, bindingContext, promise, component) {\r\n        promise.resolve();\r\n        component = bindingContext.createChildContext(component);\r\n\r\n        ko.utils.extend(component, {\r\n            $t: $t\r\n        });\r\n\r\n        ko.utils.arrayForEach(el.childNodes, ko.cleanNode);\r\n\r\n        ko.applyBindingsToDescendants(component, el);\r\n    }\r\n\r\n    ko.bindingHandlers.scope = {\r\n\r\n        /**\r\n         * Scope binding's init method.\r\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\r\n         */\r\n        init: function () {\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding, parses component declarations.\r\n         * Fetches for those found and attaches them to the new context.\r\n         * @param {HTMLElement} el - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to el.\r\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\r\n         */\r\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var component = valueAccessor(),\r\n                promise = $.Deferred(),\r\n                apply = applyComponents.bind(this, el, bindingContext, promise),\r\n                loggerUtils = consoleLogger.utils;\r\n\r\n            if (typeof component === 'string') {\r\n                loggerUtils.asyncLog(\r\n                    promise,\r\n                    {\r\n                        data: {\r\n                            component: component\r\n                        },\r\n                        messages: loggerUtils.createMessages(\r\n                            'requestingComponent',\r\n                            'requestingComponentIsLoaded',\r\n                            'requestingComponentIsFailed'\r\n                        )\r\n                    }\r\n                );\r\n\r\n                registry.get(component, apply);\r\n            } else if (typeof component === 'function') {\r\n                component(apply);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.scope = true;\r\n\r\n    renderer\r\n        .addNode('scope')\r\n        .addAttribute('scope', {\r\n            name: 'ko-scope'\r\n        });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/simple-checked.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.simpleChecked = {\r\n        'after': ['attr'],\r\n\r\n        /**\r\n         * Implements same functionality as a standard 'simpleChecked' binding,\r\n         * but with a difference that it wont' change values array if\r\n         * value of DOM element changes.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var isCheckbox = element.type === 'checkbox',\r\n                isRadio = element.type === 'radio',\r\n                updateView,\r\n                updateModel;\r\n\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            /**\r\n             * Updates checked observable\r\n             */\r\n            updateModel = function () {\r\n                var  modelValue = ko.dependencyDetection.ignore(valueAccessor),\r\n                    isChecked = element.checked;\r\n\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                if (modelValue.peek() === isChecked) {\r\n                    return;\r\n                }\r\n\r\n                if (isRadio && !isChecked) {\r\n                    return;\r\n                }\r\n\r\n                modelValue(isChecked);\r\n            };\r\n\r\n            /**\r\n             * Updates checkbox state\r\n             */\r\n            updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                element.checked = !!modelValue;\r\n            };\r\n\r\n            ko.utils.registerEventHandler(element, 'change', updateModel);\r\n\r\n            ko.computed(updateModel, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n            ko.computed(updateView, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.expressionRewriting._twoWayBindings.simpleChecked = true;\r\n\r\n    renderer.addAttribute('simpleChecked');\r\n    renderer.addAttribute('simple-checked', {\r\n        binding: 'simpleChecked'\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/staticChecked.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.staticChecked = {\r\n        'after': ['value', 'attr'],\r\n\r\n        /**\r\n         * Implements same functionality as a standard 'checked' binding,\r\n         * but with a difference that it wont' change values array if\r\n         * value of DOM element changes.\r\n         */\r\n        init: function (element, valueAccessor, allBindings) {\r\n            var isCheckbox = element.type === 'checkbox',\r\n                isRadio = element.type === 'radio',\r\n                isValueArray,\r\n                oldElemValue,\r\n                useCheckedValue,\r\n                checkedValue,\r\n                updateModel,\r\n                updateView;\r\n\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            checkedValue = ko.pureComputed(function () {\r\n                if (allBindings.has('checkedValue')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\r\n                } else if (allBindings.has('value')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('value'));\r\n                }\r\n\r\n                return element.value;\r\n            });\r\n\r\n            isValueArray = isCheckbox && ko.utils.unwrapObservable(valueAccessor()) instanceof Array;\r\n            oldElemValue = isValueArray ? checkedValue() : undefined;\r\n            useCheckedValue = isRadio || isValueArray;\r\n\r\n            /**\r\n             * Updates values array if it's necessary.\r\n             */\r\n            updateModel = function () {\r\n                var isChecked = element.checked,\r\n                    elemValue = useCheckedValue ? checkedValue() : isChecked,\r\n                    modelValue;\r\n\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                if (isRadio && !isChecked) {\r\n                    return;\r\n                }\r\n\r\n                modelValue = ko.dependencyDetection.ignore(valueAccessor);\r\n\r\n                if (isValueArray) {\r\n                    if (oldElemValue !== elemValue) {\r\n                        oldElemValue = elemValue;\r\n                    } else {\r\n                        ko.utils.addOrRemoveItem(modelValue, elemValue, isChecked);\r\n                    }\r\n                } else {\r\n                    ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Updates checkbox state.\r\n             */\r\n            updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                if (isValueArray) {\r\n                    element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\r\n                } else if (isCheckbox) {\r\n                    element.checked = modelValue;\r\n                } else {\r\n                    element.checked = checkedValue() === modelValue;\r\n                }\r\n            };\r\n\r\n            ko.computed(updateModel, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n\r\n            ko.utils.registerEventHandler(element, 'click', updateModel);\r\n\r\n            ko.computed(updateView, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.expressionRewriting._twoWayBindings.staticChecked = true;\r\n\r\n    renderer.addAttribute('staticChecked');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/tooltip.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/tooltip/tooltip.html',\r\n    '../template/renderer'\r\n], function ($, ko, _, template, tooltipTmpl, renderer) {\r\n    'use strict';\r\n\r\n    var tooltip,\r\n        defaults,\r\n        positions,\r\n        transformProp,\r\n        checkedPositions = {},\r\n        iterator = 0,\r\n        previousTooltip,\r\n        tooltipData,\r\n        positionData = {},\r\n        tooltipsCollection = {},\r\n        isTouchDevice = (function () {\r\n            return 'ontouchstart' in document.documentElement;\r\n        })(),\r\n        CLICK_EVENT = (function () {\r\n            return isTouchDevice ? 'touchstart' : 'click';\r\n        })();\r\n\r\n    defaults = {\r\n        tooltipWrapper: '[data-tooltip=tooltip-wrapper]',\r\n        tooltipContentBlock: 'data-tooltip-content',\r\n        closeButtonClass: 'action-close',\r\n        tailClass: 'data-tooltip-tail',\r\n        action: 'hover',\r\n        delay: 300,\r\n        track: false,\r\n        step: 20,\r\n        position: 'top',\r\n        closeButton: false,\r\n        showed: false,\r\n        strict: true,\r\n        center: false,\r\n        closeOnScroll: true\r\n    };\r\n\r\n    tooltipData = {\r\n        tooltipClasses: '',\r\n        trigger: false,\r\n        timeout: 0,\r\n        element: false,\r\n        event: false,\r\n        targetElement: {},\r\n        showed: false,\r\n        currentID: 0\r\n    };\r\n\r\n    /**\r\n     * Polyfill for css transform\r\n     */\r\n    transformProp = (function () {\r\n        var style = document.createElement('div').style,\r\n            base = 'Transform',\r\n            vendors = ['webkit', 'moz', 'ms', 'o'],\r\n            vi = vendors.length,\r\n            property;\r\n\r\n        if (typeof style.transform !== 'undefined') {\r\n            return 'transform';\r\n        }\r\n\r\n        while (vi--) {\r\n            property = vendors[vi] + base;\r\n\r\n            if (typeof style[property] !== 'undefined') {\r\n                return property;\r\n            }\r\n        }\r\n    })();\r\n\r\n    positions = {\r\n\r\n        /*eslint max-depth: [0, 0]*/\r\n\r\n        map: {\r\n            horizontal: {\r\n                s: 'w',\r\n                p: 'left'\r\n            },\r\n            vertical: {\r\n                s: 'h',\r\n                p: 'top'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        top: function (s) {\r\n            return positions._topLeftChecker(s, positions.map, 'vertical', '_bottom', 'top', 'right');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        left: function (s) {\r\n            return positions._topLeftChecker(s, positions.map, 'horizontal', '_right', 'left', 'top');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        bottom: function (s) {\r\n            return positions._bottomRightChecker(s, positions.map, 'vertical', '_top', 'bottom', 'left');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        right: function (s) {\r\n            return positions._bottomRightChecker(s, positions.map, 'horizontal', '_left', 'right', 'bottom');\r\n        },\r\n\r\n        /**\r\n         * Check can tooltip setted on current position or not. If can't setted - delegate call.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {String} className - class whats should be setted to tooltip\r\n         * @param {String} side - parent method name\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _topLeftChecker: function (s, map, direction, className, side, delegate) {\r\n            var result = {\r\n                    position: {}\r\n                },\r\n                config = tooltip.getTooltip(tooltipData.currentID),\r\n                startPosition = !config.strict ? s.eventPosition : s.elementPosition,\r\n                changedDirection;\r\n\r\n            checkedPositions[side] = true;\r\n\r\n            if (\r\n                startPosition[map[direction].p] - s.tooltipSize[map[direction].s] - config.step >\r\n                s.scrollPosition[map[direction].p]\r\n            ) {\r\n                result.position[map[direction].p] = startPosition[map[direction].p] - s.tooltipSize[map[direction].s] -\r\n                    config.step;\r\n                result.className = className;\r\n                result.side = side;\r\n                changedDirection = direction === 'vertical' ? 'horizontal' : 'vertical';\r\n                result = positions._normalize(s, result, config, delegate, map, changedDirection);\r\n            } else if (!checkedPositions[delegate]) {\r\n                result = positions[delegate].apply(null, arguments);\r\n            } else {\r\n                result = positions.positionCenter(s, result);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Check can tooltip setted on current position or not. If can't setted - delegate call.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {String} className - class whats should be setted to tooltip\r\n         * @param {String} side - parent method name\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _bottomRightChecker: function (s, map, direction, className, side, delegate) {\r\n            var result = {\r\n                    position: {}\r\n                },\r\n                config = tooltip.getTooltip(tooltipData.currentID),\r\n                startPosition = !config.strict ? s.eventPosition : {\r\n                    top: s.elementPosition.top + s.elementSize.h,\r\n                    left: s.elementPosition.left + s.elementSize.w\r\n                },\r\n                changedDirection;\r\n\r\n            checkedPositions[side] = true;\r\n\r\n            if (\r\n                startPosition[map[direction].p] + s.tooltipSize[map[direction].s] + config.step <\r\n                s.scrollPosition[map[direction].p] + s.windowSize[map[direction].s]\r\n            ) {\r\n                result.position[map[direction].p] = startPosition[map[direction].p] + config.step;\r\n                result.className = className;\r\n                result.side = side;\r\n                changedDirection = direction === 'vertical' ? 'horizontal' : 'vertical';\r\n                result = positions._normalize(s, result, config, delegate, map, changedDirection);\r\n            } else if (!checkedPositions[delegate]) {\r\n                result = positions[delegate].apply(null, arguments);\r\n            } else {\r\n                result = positions.positionCenter(s, result);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Centered tooltip if tooltip does not fit in window\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        positionCenter: function (s, data) {\r\n            data = positions._positionCenter(s, data, 'horizontal', positions.map);\r\n            data = positions._positionCenter(s, data, 'vertical', positions.map);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Centered tooltip side\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _positionCenter: function (s, data, direction, map) {\r\n            if (s.tooltipSize[map[direction].s] < s.windowSize[map[direction].s]) {\r\n                data.position[map[direction].p] = (s.windowSize[map[direction].s] -\r\n                    s.tooltipSize[map[direction].s]) / 2 + s.scrollPosition[map[direction].p];\r\n            } else {\r\n                data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                data.tooltipSize = {};\r\n                data.tooltipSize[map[direction].s] = s.windowSize[map[direction].s];\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Normalize horizontal or vertical position.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {Object} config - tooltip config\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _normalize: function (s, data, config, delegate, map, direction) {\r\n            var startPosition = !config.center ? s.eventPosition : {\r\n                    left: s.elementPosition.left + s.elementSize.w / 2,\r\n                    top: s.elementPosition.top + s.elementSize.h / 2\r\n                },\r\n                depResult;\r\n\r\n            if (startPosition[map[direction].p] - s.tooltipSize[map[direction].s] / 2 >\r\n                s.scrollPosition[map[direction].p] && startPosition[map[direction].p] +\r\n                s.tooltipSize[map[direction].s] / 2 <\r\n                s.scrollPosition[map[direction].p] + s.windowSize[map[direction].s]\r\n            ) {\r\n                data.position[map[direction].p] = startPosition[map[direction].p] - s.tooltipSize[map[direction].s] / 2;\r\n            } else {\r\n\r\n                /*eslint-disable no-lonely-if*/\r\n                if (!checkedPositions[delegate]) {\r\n                    depResult = positions[delegate].apply(null, arguments);\r\n\r\n                    if (depResult.hasOwnProperty('className')) {\r\n                        data = depResult;\r\n                    } else {\r\n                        data = positions._normalizeTail(s, data, config, delegate, map, direction, startPosition);\r\n                    }\r\n                } else {\r\n                    data = positions._normalizeTail(s, data, config, delegate, map, direction, startPosition);\r\n                }\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Calc tail position.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {Object} config - tooltip config\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {Object} startPosition - start position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _normalizeTail: function (s, data, config, delegate, map, direction, startPosition) {\r\n            data.tail = {};\r\n\r\n            if (s.tooltipSize[map[direction].s] < s.windowSize[map[direction].s]) {\r\n\r\n                if (\r\n                    startPosition[map[direction].p] >\r\n                    s.windowSize[map[direction].s] / 2 + s.scrollPosition[map[direction].p]\r\n                ) {\r\n                    data.position[map[direction].p] = s.windowSize[map[direction].s] +\r\n                        s.scrollPosition[map[direction].p] - s.tooltipSize[map[direction].s];\r\n                    data.tail[map[direction].p] = startPosition[map[direction].p] -\r\n                        s.tooltipSize[map[direction].s] / 2 - data.position[map[direction].p];\r\n                } else {\r\n                    data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                    data.tail[map[direction].p] = startPosition[map[direction].p] -\r\n                        s.tooltipSize[map[direction].s] / 2 - data.position[map[direction].p];\r\n                }\r\n            } else {\r\n                data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                data.tail[map[direction].p] = s.eventPosition[map[direction].p] - s.windowSize[map[direction].s] / 2;\r\n                data.tooltipSize = {};\r\n                data.tooltipSize[map[direction].s] = s.windowSize[map[direction].s];\r\n            }\r\n\r\n            return data;\r\n        }\r\n    };\r\n\r\n    tooltip = {\r\n\r\n        /**\r\n         * Set new tooltip to tooltipCollection, save config, and add unic id\r\n         *\r\n         * @param {Object} config - tooltip config\r\n         * @returns {String} tooltip id\r\n         */\r\n        setTooltip: function (config) {\r\n            var property = 'id-' + iterator;\r\n\r\n            tooltipsCollection[property] = config;\r\n            iterator++;\r\n\r\n            return property;\r\n        },\r\n\r\n        /**\r\n         * Get tooltip config by id\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @returns {Object} tooltip config\r\n         */\r\n        getTooltip: function (id) {\r\n            return tooltipsCollection[id];\r\n        },\r\n\r\n        /**\r\n         * Set content to current tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {Object} viewModel - tooltip view model\r\n         * @param {String} id - tooltip id\r\n         * @param {Object} bindingCtx - tooltip context\r\n         * @param {Object} event - action event\r\n         */\r\n        setContent: function (tooltipElement, viewModel, id, bindingCtx, event) {\r\n            var html = $(tooltipElement).html(),\r\n                config = tooltip.getTooltip(id),\r\n                body = $('body');\r\n\r\n            tooltipData.currentID = id;\r\n            tooltipData.trigger = $(event.currentTarget);\r\n            tooltip.setTargetData(event);\r\n            body.on('mousemove.setTargetData', tooltip.setTargetData);\r\n            tooltip.clearTimeout(id);\r\n\r\n            tooltipData.timeout = _.delay(function () {\r\n                body.off('mousemove.setTargetData', tooltip.setTargetData);\r\n\r\n                if (tooltipData.trigger[0] === tooltipData.targetElement) {\r\n                    tooltip.destroy(id);\r\n                    event.stopPropagation();\r\n                    tooltipElement = tooltip.createTooltip(id);\r\n                    tooltipElement.find('.' + defaults.tooltipContentBlock).append(html);\r\n                    tooltipElement.applyBindings(bindingCtx);\r\n                    tooltip.setHandlers(id);\r\n                    tooltip.setPosition(tooltipElement, id);\r\n                    previousTooltip = id;\r\n                }\r\n\r\n            }, config.delay);\r\n        },\r\n\r\n        /**\r\n         * Set position to current tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {String} id - tooltip id\r\n         */\r\n        setPosition: function (tooltipElement, id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            tooltip.sizeData = {\r\n                windowSize: {\r\n                    h: $(window).outerHeight(),\r\n                    w: $(window).outerWidth()\r\n                },\r\n                scrollPosition: {\r\n                    top: $(window).scrollTop(),\r\n                    left: $(window).scrollLeft()\r\n                },\r\n                tooltipSize: {\r\n                    h: tooltipElement.outerHeight(),\r\n                    w: tooltipElement.outerWidth()\r\n                },\r\n                elementSize: {\r\n                    h: tooltipData.trigger.outerHeight(),\r\n                    w: tooltipData.trigger.outerWidth()\r\n                },\r\n                elementPosition: tooltipData.trigger.offset(),\r\n                eventPosition: this.getEventPosition(tooltipData.event)\r\n            };\r\n\r\n            _.extend(positionData, positions[config.position](tooltip.sizeData));\r\n            tooltipElement.css(positionData.position);\r\n            tooltipElement.addClass(positionData.className);\r\n            tooltip._setTooltipSize(positionData, tooltipElement);\r\n            tooltip._setTailPosition(positionData, tooltipElement);\r\n            checkedPositions = {};\r\n        },\r\n\r\n        /**\r\n         * Check position data and change tooltip size if needs\r\n         *\r\n         * @param {Object} data - position data\r\n         * @param {Object} tooltipElement - tooltip element\r\n         */\r\n        _setTooltipSize: function (data, tooltipElement) {\r\n            if (data.tooltipSize) {\r\n                data.tooltipSize.w ?\r\n                    tooltipElement.css('width', data.tooltipSize.w) :\r\n                    tooltipElement.css('height', data.tooltipSize.h);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check position data and set position to tail\r\n         *\r\n         * @param {Object} data - position data\r\n         * @param {Object} tooltipElement - tooltip element\r\n         */\r\n        _setTailPosition: function (data, tooltipElement) {\r\n            var tail,\r\n                tailMargin;\r\n\r\n            if (data.tail) {\r\n                tail = tooltipElement.find('.' + defaults.tailClass);\r\n\r\n                if (data.tail.left) {\r\n                    tailMargin = parseInt(tail.css('margin-left'), 10);\r\n                    tail.css('margin-left', tailMargin + data.tail.left);\r\n                } else {\r\n                    tailMargin = parseInt(tail.css('margin-top'), 10);\r\n                    tail.css('margin-top', tailMargin + data.tail.top);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolves position for tooltip\r\n         *\r\n         * @param {Object} event\r\n         * @returns {Object}\r\n         */\r\n        getEventPosition: function (event) {\r\n            var position = {\r\n                left: event.originalEvent && event.originalEvent.pageX || 0,\r\n                top: event.originalEvent && event.originalEvent.pageY || 0\r\n            };\r\n\r\n            if (position.left === 0 && position.top === 0) {\r\n                _.extend(position, event.target.getBoundingClientRect());\r\n            }\r\n\r\n            return position;\r\n        },\r\n\r\n        /**\r\n         * Close tooltip if action happened outside handler and tooltip element\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @param {Object} event - action event\r\n         */\r\n        outerClick: function (id, event) {\r\n            var tooltipElement = $(event.target).parents(defaults.tooltipWrapper)[0],\r\n                isTrigger = event.target === tooltipData.trigger[0] || $.contains(tooltipData.trigger[0], event.target);\r\n\r\n            if (tooltipData.showed && tooltipElement !== tooltipData.element[0] && !isTrigger) {\r\n                tooltip.destroy(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Parse keydown event and if event trigger is escape key - close tooltip\r\n         *\r\n         * @param {Object} event - action event\r\n         */\r\n        keydownHandler: function (event) {\r\n            if (tooltipData.showed && event.keyCode === 27) {\r\n                tooltip.destroy(tooltipData.currentID);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change tooltip position when track is enabled\r\n         *\r\n         * @param {Object} event - current event\r\n         */\r\n        track: function (event) {\r\n            var inequality = {},\r\n                map = positions.map,\r\n                translate = {\r\n                    left: 'translateX',\r\n                    top: 'translateY'\r\n                },\r\n                eventPosition = {\r\n                    left: event.pageX,\r\n                    top: event.pageY\r\n                },\r\n                tooltipSize = {\r\n                    w: tooltipData.element.outerWidth(),\r\n                    h: tooltipData.element.outerHeight()\r\n                },\r\n                direction = positionData.side === 'bottom' || positionData.side === 'top' ? 'horizontal' : 'vertical';\r\n\r\n            inequality[map[direction].p] = eventPosition[map[direction].p] - (positionData.position[map[direction].p] +\r\n                tooltipSize[map[direction].s] / 2);\r\n\r\n            if (positionData.position[map[direction].p] + inequality[map[direction].p] +\r\n                tooltip.sizeData.tooltipSize[map[direction].s] >\r\n                tooltip.sizeData.windowSize[map[direction].s] + tooltip.sizeData.scrollPosition[map[direction].p] ||\r\n                inequality[map[direction].p] + positionData.position[map[direction].p] <\r\n                tooltip.sizeData.scrollPosition[map[direction].p]) {\r\n\r\n                return false;\r\n            }\r\n\r\n            tooltipData.element[0].style[transformProp] = translate[map[direction].p] +\r\n                '(' + inequality[map[direction].p] + 'px)';\r\n        },\r\n\r\n        /**\r\n         * Set handlers to tooltip\r\n         *\r\n         * @param {String} id - tooltip id\r\n         */\r\n        setHandlers: function (id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            if (config.track) {\r\n                tooltipData.trigger.on('mousemove.track', tooltip.track);\r\n            }\r\n\r\n            if (config.action === 'click') {\r\n                $(window).on(CLICK_EVENT + '.outerClick', tooltip.outerClick.bind(null, id));\r\n            }\r\n\r\n            if (config.closeButton) {\r\n                $('.' + config.closeButtonClass).on('click.closeButton', tooltip.destroy.bind(null, id));\r\n            }\r\n\r\n            if (config.closeOnScroll) {\r\n                document.addEventListener('scroll', tooltip.destroy, true);\r\n                $(window).on('scroll.tooltip', tooltip.outerClick.bind(null, id));\r\n            }\r\n\r\n            $(window).on('keydown.tooltip', tooltip.keydownHandler);\r\n            $(window).on('resize.outerClick', tooltip.outerClick.bind(null, id));\r\n        },\r\n\r\n        /**\r\n         * Toggle tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {Object} viewModel - tooltip view model\r\n         * @param {String} id - tooltip id\r\n         */\r\n        toggleTooltip: function (tooltipElement, viewModel, id) {\r\n            if (previousTooltip === id && tooltipData.showed) {\r\n                tooltip.destroy(id);\r\n\r\n                return false;\r\n            }\r\n\r\n            tooltip.setContent.apply(null, arguments);\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Create tooltip and append to DOM\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @returns {Object} tooltip element\r\n         */\r\n        createTooltip: function (id) {\r\n            var body = $('body'),\r\n                config = tooltip.getTooltip(id);\r\n\r\n            $(template(tooltipTmpl, {\r\n                data: config\r\n            })).appendTo(body);\r\n\r\n            tooltipData.showed = true;\r\n            tooltipData.element = $(config.tooltipWrapper);\r\n\r\n            return tooltipData.element;\r\n        },\r\n\r\n        /**\r\n         * Check action and clean timeout\r\n         *\r\n         * @param {String} id - tooltip id\r\n         */\r\n        clearTimeout: function (id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            if (config.action === 'hover') {\r\n                clearTimeout(tooltipData.timeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check previous tooltip\r\n         */\r\n        checkPreviousTooltip: function () {\r\n            if (!tooltipData.timeout) {\r\n                tooltip.destroy();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Destroy tooltip instance\r\n         */\r\n        destroy: function () {\r\n            if (tooltipData.element) {\r\n                tooltipData.element.remove();\r\n                tooltipData.showed = false;\r\n            }\r\n\r\n            positionData = {};\r\n            tooltipData.timeout = false;\r\n            tooltip.removeHandlers();\r\n        },\r\n\r\n        /**\r\n         * Remove tooltip handlers\r\n         */\r\n        removeHandlers: function () {\r\n            $('.' + defaults.closeButtonClass).off('click.closeButton');\r\n            tooltipData.trigger.off('mousemove.track');\r\n            document.removeEventListener('scroll', tooltip.destroy, true);\r\n            $(window).off('scroll.tooltip');\r\n            $(window).off(CLICK_EVENT + '.outerClick');\r\n            $(window).off('keydown.tooltip');\r\n            $(window).off('resize.outerClick');\r\n        },\r\n\r\n        /**\r\n         * Set target element\r\n         *\r\n         * @param {Object} event - current event\r\n         */\r\n        setTargetData: function (event) {\r\n            tooltipData.event = event;\r\n\r\n            //TODO: bug chrome v.49; Link to issue https://bugs.chromium.org/p/chromium/issues/detail?id=161464\r\n            if (event.timeStamp - (tooltipData.timestamp || 0) < 1) {\r\n                return;\r\n            }\r\n\r\n            if (event.type === 'mousemove') {\r\n                tooltipData.targetElement = event.target;\r\n            } else {\r\n                tooltipData.targetElement = event.currentTarget;\r\n                tooltipData.timestamp = event.timeStamp;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Merged user config with defaults configuration\r\n         *\r\n         * @param {Object} config - user config\r\n         * @returns {Object} merged config\r\n         */\r\n        processingConfig: function (config) {\r\n            return _.extend({}, defaults, config);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.tooltip = {\r\n\r\n        /**\r\n         * Initialize tooltip\r\n         *\r\n         * @param {Object} elem - tooltip DOM element\r\n         * @param {Function} valueAccessor - ko observable property, tooltip data\r\n         * @param {Object} allBindings - all bindings on current element\r\n         * @param {Object} viewModel - current element viewModel\r\n         * @param {Object} bindingCtx - current element binding context\r\n         */\r\n        init: function (elem, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var config = tooltip.processingConfig(valueAccessor()),\r\n                $parentScope = config.parentScope ? $(config.parentScope) : $(elem).parent(),\r\n                tooltipId;\r\n\r\n            $(elem).addClass('hidden');\r\n\r\n            if (isTouchDevice) {\r\n                config.action = 'click';\r\n            }\r\n            tooltipId = tooltip.setTooltip(config);\r\n\r\n            if (config.action === 'hover') {\r\n                $parentScope.on(\r\n                    'mouseenter',\r\n                    config.trigger,\r\n                    tooltip.setContent.bind(null, elem, viewModel, tooltipId, bindingCtx)\r\n                );\r\n                $parentScope.on(\r\n                    'mouseleave',\r\n                    config.trigger,\r\n                    tooltip.checkPreviousTooltip.bind(null, tooltipId)\r\n                );\r\n            } else if (config.action === 'click') {\r\n                $parentScope.on(\r\n                    'click',\r\n                    config.trigger,\r\n                    tooltip.toggleTooltip.bind(null, elem, viewModel, tooltipId, bindingCtx)\r\n                );\r\n            }\r\n\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('tooltip');\r\n});\r\n","Magento_Ui/js/lib/knockout/extender/bound-nodes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global WeakMap */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/utils/wrapper',\r\n    'uiEvents'\r\n], function (ko, _, wrapper, Events) {\r\n    'use strict';\r\n\r\n    var nodesMap = new WeakMap();\r\n\r\n    /**\r\n     * Returns a array of nodes associated with a specified model.\r\n     *\r\n     * @param {Object} model\r\n     * @returns {Undefined|Array}\r\n     */\r\n    function getBounded(model) {\r\n        return nodesMap.get(model);\r\n    }\r\n\r\n    /**\r\n     * Removes specified node to models' associations list, if it's\r\n     * a root node (node is not a descendant of any previously added nodes).\r\n     * Triggers 'addNode' event.\r\n     *\r\n     * @param {Object} model\r\n     * @param {HTMLElement} node\r\n     */\r\n    function addBounded(model, node) {\r\n        var nodes = getBounded(model),\r\n            isRoot;\r\n\r\n        if (!nodes) {\r\n            nodesMap.set(model, [node]);\r\n\r\n            Events.trigger.call(model, 'addNode', node);\r\n\r\n            return;\r\n        }\r\n\r\n        isRoot = nodes.every(function (bounded) {\r\n            return !bounded.contains(node);\r\n        });\r\n\r\n        if (isRoot) {\r\n            nodes.push(node);\r\n\r\n            Events.trigger.call(model, 'addNode', node);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes specified node from models' associations list.\r\n     * Triggers 'removeNode' event.\r\n     *\r\n     * @param {Object} model\r\n     * @param {HTMLElement} node\r\n     */\r\n    function removeBounded(model, node) {\r\n        var nodes = getBounded(model),\r\n            index;\r\n\r\n        if (!nodes) {\r\n            return;\r\n        }\r\n\r\n        index = nodes.indexOf(node);\r\n\r\n        if (~index) {\r\n            nodes.splice(index, 0);\r\n\r\n            Events.trigger.call(model, 'removeNode', node);\r\n        }\r\n\r\n        if (!nodes.length) {\r\n            nodesMap.delete(model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns node's first sibling of 'element' type within the common component scope\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {*} data\r\n     * @returns {HTMLElement}\r\n     */\r\n    function getElement(node, data) {\r\n        var elem;\r\n\r\n        while (node.nextElementSibling) {\r\n            node = node.nextElementSibling;\r\n\r\n            if (node.nodeType === 1 && ko.dataFor(node) === data) {\r\n                elem = node;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    wrapper.extend(ko, {\r\n\r\n        /**\r\n         * Extends knockouts' 'applyBindings'\r\n         * to track nodes associated with model.\r\n         *\r\n         * @param {Function} orig - Original 'applyBindings' method.\r\n         * @param {Object} ctx\r\n         * @param {HTMLElement} node - Original 'applyBindings' method.\r\n         */\r\n        applyBindings: function (orig, ctx, node) {\r\n            var result = orig(),\r\n                data = ctx && (ctx.$data || ctx);\r\n\r\n            if (node && node.nodeType === 8) {\r\n                node = getElement(node, data);\r\n            }\r\n\r\n            if (!node || node.nodeType !== 1) {\r\n                return result;\r\n            }\r\n\r\n            if (data && data.registerNodes) {\r\n                addBounded(data, node);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Extends knockouts' cleanNode\r\n         * to track nodes associated with model.\r\n         *\r\n         * @param {Function} orig - Original 'cleanNode' method.\r\n         * @param {HTMLElement} node - Original 'cleanNode' method.\r\n         */\r\n        cleanNode: function (orig, node) {\r\n            var result = orig(),\r\n                data;\r\n\r\n            if (node.nodeType !== 1) {\r\n                return result;\r\n            }\r\n\r\n            data = ko.dataFor(node);\r\n\r\n            if (data && data.registerNodes) {\r\n                removeBounded(data, node);\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n\r\n    return {\r\n\r\n        /**\r\n         * Returns root nodes associated with a model. If callback is provided,\r\n         * will iterate through all of the present nodes triggering callback\r\n         * for each of it. Also it will subscribe to the 'addNode' event.\r\n         *\r\n         * @param {Object} model\r\n         * @param {Function} [callback]\r\n         * @returns {Array|Undefined}\r\n         */\r\n        get: function (model, callback) {\r\n            var nodes = getBounded(model) || [];\r\n\r\n            if (!_.isFunction(callback)) {\r\n                return nodes;\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                callback(node);\r\n            });\r\n\r\n            this.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Subscribes to adding of nodes associated with a model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        add: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            args.unshift('addNode');\r\n\r\n            Events.on.apply(model, args);\r\n        },\r\n\r\n        /**\r\n         * Subscribes to removal of nodes associated with a model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        remove: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            args.unshift('removeNode');\r\n\r\n            Events.on.apply(model, args);\r\n        },\r\n\r\n        /**\r\n         * Removes subscriptions from the model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        off: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            Events.off.apply(model, args);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/extender/observable_array.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Iterator function.\r\n     *\r\n     * @param {String} callback\r\n     * @param {Array} args\r\n     * @param {Object} elem\r\n     * @returns {*}\r\n     */\r\n    function iterator(callback, args, elem) {\r\n        callback = elem[callback];\r\n\r\n        if (_.isFunction(callback)) {\r\n            return callback.apply(elem, args);\r\n        }\r\n\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Wrapper function.\r\n     *\r\n     * @param {String} method\r\n     * @returns {Function}\r\n     */\r\n    function wrapper(method) {\r\n        return function (iteratee) {\r\n            var callback = iteratee,\r\n                elems = this(),\r\n                args = _.toArray(arguments);\r\n\r\n            if (_.isString(iteratee)) {\r\n                callback = iterator.bind(null, iteratee, args.slice(1));\r\n\r\n                args.unshift(callback);\r\n            }\r\n\r\n            args.unshift(elems);\r\n\r\n            return _[method].apply(_, args);\r\n        };\r\n    }\r\n\r\n    _.extend(ko.observableArray.fn, {\r\n        each: wrapper('each'),\r\n\r\n        map: wrapper('map'),\r\n\r\n        filter: wrapper('filter'),\r\n\r\n        some: wrapper('some'),\r\n\r\n        every: wrapper('every'),\r\n\r\n        groupBy: wrapper('groupBy'),\r\n\r\n        sortBy: wrapper('sortBy'),\r\n\r\n        /**\r\n         * Wrapper for underscore findWhere function.\r\n         *\r\n         * @param {Object} properties\r\n         * @return {Object}\r\n         */\r\n        findWhere: function (properties) {\r\n            return _.findWhere(this(), properties);\r\n        },\r\n\r\n        /**\r\n         * Wrapper for underscore contains function.\r\n         *\r\n         * @param {*} value\r\n         * @return {Boolean}\r\n         */\r\n        contains: function (value) {\r\n            return _.contains(this(), value);\r\n        },\r\n\r\n        /**\r\n         * Inverse contains call.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        hasNo: function () {\r\n            return !this.contains.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Getter for length property.\r\n         *\r\n         * @return {Number}\r\n         */\r\n        getLength: function () {\r\n            return this().length;\r\n        },\r\n\r\n        /**\r\n         * Create object with keys that gets from each object property.\r\n         *\r\n         * @return {Object}\r\n         */\r\n        indexBy: function (key) {\r\n            return _.indexBy(this(), key);\r\n        },\r\n\r\n        /**\r\n         * Returns a copy of the array with all instances of the values removed.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        without: function () {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            args.unshift(this());\r\n\r\n            return _.without.apply(_, args);\r\n        },\r\n\r\n        /**\r\n         * Returns the first element of an array.\r\n         *\r\n         * @return {*}\r\n         */\r\n        first: function () {\r\n            return _.first(this());\r\n        },\r\n\r\n        /**\r\n         * Returns the last element of an array\r\n         *\r\n         * @return {*}\r\n         */\r\n        last: function () {\r\n            return _.last(this());\r\n        },\r\n\r\n        /**\r\n         * Iterate and pick provided properties.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        pluck: function () {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            args.unshift(this());\r\n\r\n            return _.pluck.apply(_, args);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/template/engine.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    './observable_source',\r\n    './renderer',\r\n    '../../logger/console-logger'\r\n], function ($, ko, _, Source, renderer, consoleLogger) {\r\n    'use strict';\r\n\r\n    var RemoteTemplateEngine,\r\n        NativeTemplateEngine = ko.nativeTemplateEngine,\r\n        sources = {};\r\n\r\n    /**\r\n     * Remote template engine class. Is used to be able to load remote templates via knockout template binding.\r\n     */\r\n    RemoteTemplateEngine = function () {\r\n        // Instance reference for closure.\r\n        var engine = this,\r\n        // Decorate the builtin Knockout \"template\" binding to track synchronous template renders.\r\n        origUpdate = ko.bindingHandlers.template.update;\r\n\r\n        /**\r\n         * Counter to track the number of currently running render tasks (both synchronous and asynchronous).\r\n         * @type {Number}\r\n         * @private\r\n         */\r\n        this._rendersOutstanding = 0;\r\n\r\n        /**\r\n         * Use a jQuery object as an event bus (but any event emitter with on/off/emit methods could work)\r\n         * @type {jQuery}\r\n         * @private\r\n         */\r\n        this._events = $(this);\r\n\r\n        /**\r\n         * Rendered templates\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n        this._templatesRendered = {};\r\n\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Decorate update method\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Object} allBindings\r\n         * @param {Object} viewModel\r\n         * @param {ko.bindingContext} bindingContext\r\n         * @returns {*}\r\n         */\r\n        ko.bindingHandlers.template.update = function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            /*eslint-enable no-unused-vars*/\r\n            var options = ko.utils.peekObservable(valueAccessor()),\r\n                templateName,\r\n                isSync,\r\n                updated;\r\n\r\n            if (typeof options === 'object') {\r\n                if (options.templateEngine && options.templateEngine !== engine) {\r\n                    return origUpdate.apply(this, arguments);\r\n                }\r\n\r\n                if (!options.name) {\r\n                    consoleLogger.error('Could not find template name', options);\r\n                }\r\n                templateName = options.name;\r\n            } else if (typeof options === 'string') {\r\n                templateName = options;\r\n            } else {\r\n                consoleLogger.error('Could not build a template binding', options);\r\n            }\r\n            engine._trackRender(templateName);\r\n            isSync = engine._hasTemplateLoaded(templateName);\r\n            updated = origUpdate.apply(this, arguments);\r\n\r\n            if (isSync) {\r\n                engine._releaseRender(templateName, 'sync');\r\n            }\r\n\r\n            return updated;\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Creates unique template identifier based on template name and it's extenders (optional)\r\n     * @param  {String} templateName\r\n     * @return {String} - unique template identifier\r\n     */\r\n    function createTemplateIdentifier(templateName) {\r\n        return templateName;\r\n    }\r\n\r\n    RemoteTemplateEngine.prototype = new NativeTemplateEngine;\r\n    RemoteTemplateEngine.prototype.constructor = RemoteTemplateEngine;\r\n\r\n    /**\r\n     * When an asynchronous render task begins, increment the internal counter for tracking when renders are complete.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._trackRender = function (templateName) {\r\n        var rendersForTemplate = this._templatesRendered[templateName] !== undefined ?\r\n            this._templatesRendered[templateName] : 0;\r\n\r\n        this._rendersOutstanding++;\r\n        this._templatesRendered[templateName] = rendersForTemplate + 1;\r\n        this._resolveRenderWaits();\r\n    };\r\n\r\n    /**\r\n     * When an asynchronous render task ends, decrement the internal counter for tracking when renders are complete.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._releaseRender = function (templateName) {\r\n        var rendersForTemplate = this._templatesRendered[templateName];\r\n\r\n        this._rendersOutstanding--;\r\n        this._templatesRendered[templateName] = rendersForTemplate - 1;\r\n        this._resolveRenderWaits();\r\n    };\r\n\r\n    /**\r\n     * Check to see if renders are complete and trigger events for listeners.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._resolveRenderWaits = function () {\r\n        if (this._rendersOutstanding === 0) {\r\n            this._events.triggerHandler('finishrender');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a promise for the end of the current run of renders, both sync and async.\r\n     * @return {jQueryPromise} - promise that resolves when render completes\r\n     */\r\n    RemoteTemplateEngine.prototype.waitForFinishRender = function () {\r\n        var defer = $.Deferred();\r\n\r\n        this._events.one('finishrender', defer.resolve);\r\n\r\n        return defer.promise();\r\n    };\r\n\r\n    /**\r\n     * Returns true if this template has already been asynchronously loaded and will be synchronously rendered.\r\n     * @param {String} templateName\r\n     * @returns {Boolean}\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._hasTemplateLoaded = function (templateName) {\r\n        // Sources object will have cached template once makeTemplateSource has run\r\n        return sources.hasOwnProperty(templateName);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Caches template after it's unique name and renders in once.\r\n     * If template name is not typeof string, delegates work to knockout.templateSources.anonymousTemplate.\r\n     * @param  {*} template\r\n     * @param  {HTMLElement} templateDocument - document\r\n     * @param  {Object} options - options, passed to template binding\r\n     * @param  {ko.bindingContext} bindingContext\r\n     * @returns {TemplateSource} Object with methods 'nodes' and 'data'.\r\n     */\r\n    RemoteTemplateEngine.prototype.makeTemplateSource = function (template, templateDocument, options, bindingContext) {\r\n        var engine = this,\r\n            source,\r\n            templateId;\r\n\r\n        if (typeof template === 'string') {\r\n            templateId = createTemplateIdentifier(template);\r\n            source = sources[templateId];\r\n\r\n            if (!source) {\r\n                source = new Source(template);\r\n                source.requestedBy = bindingContext.$data.name;\r\n                sources[templateId] = source;\r\n\r\n                consoleLogger.info('templateStartLoading', {\r\n                    template: templateId,\r\n                    component: bindingContext.$data.name\r\n                });\r\n\r\n                renderer.render(template).then(function (rendered) {\r\n                    consoleLogger.info('templateLoadedFromServer', {\r\n                        template: templateId,\r\n                        component: bindingContext.$data.name\r\n                    });\r\n                    source.nodes(rendered);\r\n                    engine._releaseRender(templateId, 'async');\r\n                }).fail(function () {\r\n                    consoleLogger.error('templateLoadingFail', {\r\n                        template: templateId,\r\n                        component: bindingContext.$data.name\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (source.requestedBy !== bindingContext.$data.name) {\r\n                consoleLogger.info('templateLoadedFromCache', {\r\n                    template: templateId,\r\n                    component: bindingContext.$data.name\r\n                });\r\n            }\r\n\r\n            return source;\r\n        } else if (template.nodeType === 1 || template.nodeType === 8) {\r\n            source = new ko.templateSources.anonymousTemplate(template);\r\n\r\n            return source;\r\n        }\r\n\r\n        throw new Error('Unknown template type: ' + template);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Should return array of html elements.\r\n     * @param  {TemplateSource} templateSource - object with methods 'nodes' and 'data'.\r\n     * @return {Array} - array of html elements\r\n     */\r\n    RemoteTemplateEngine.prototype.renderTemplateSource = function (templateSource) {\r\n        var nodes = templateSource.nodes();\r\n\r\n        return ko.utils.cloneNodes(nodes);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Created in order to invoke makeTemplateSource method with custom set of params.\r\n     * @param  {*} template - template identifier\r\n     * @param  {ko.bindingContext} bindingContext\r\n     * @param  {Object} options - options, passed to template binding\r\n     * @param  {HTMLElement} templateDocument - document\r\n     * @return {Array} - array of html elements\r\n     */\r\n    RemoteTemplateEngine.prototype.renderTemplate = function (template, bindingContext, options, templateDocument) {\r\n        var templateSource = this.makeTemplateSource(template, templateDocument, options, bindingContext);\r\n\r\n        return this.renderTemplateSource(templateSource);\r\n    };\r\n\r\n    return new RemoteTemplateEngine;\r\n});\r\n","Magento_Ui/js/lib/knockout/template/loader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var licenseRegExp   = /<!--[\\s\\S]*?-->/,\r\n        defaultPlugin   = 'text',\r\n        defaultExt      = 'html';\r\n\r\n    /**\r\n     * Checks of provided string contains a file extension.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasFileExtension(str) {\r\n        return !!~str.indexOf('.') && !!str.split('.').pop();\r\n    }\r\n\r\n    /**\r\n     * Checks if provided string contains a requirejs's plugin reference.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasPlugin(str) {\r\n        return !!~str.indexOf('!');\r\n    }\r\n\r\n    /**\r\n     * Checks if provided string is a full path to the file.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isFullPath(str) {\r\n        return !!~str.indexOf('://');\r\n    }\r\n\r\n    /**\r\n     * Removes license comment from the provided string.\r\n     *\r\n     * @param {String} content - String to be processed.\r\n     * @returns {String}\r\n     */\r\n    function removeLicense(content) {\r\n        return content.replace(licenseRegExp, function (match) {\r\n            return ~match.indexOf('/**') ? '' : match;\r\n        });\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attempts to extract template by provided path from\r\n         * a DOM element and falls back to a file loading if\r\n         * none of the DOM nodes was found.\r\n         *\r\n         * @param {String} path - Path to the template or a DOM selector.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        loadTemplate: function (path) {\r\n            var content = this.loadFromNode(path),\r\n                defer;\r\n\r\n            if (content) {\r\n                defer = $.Deferred();\r\n\r\n                defer.resolve(content);\r\n\r\n                return defer.promise();\r\n            }\r\n\r\n            return this.loadFromFile(path);\r\n        },\r\n\r\n        /**\r\n         * Loads template from external file by provided\r\n         * path, which will be preliminary formatted.\r\n         *\r\n         * @param {String} path - Path to the template.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        loadFromFile: function (path) {\r\n            var loading = $.Deferred();\r\n\r\n            path = this.formatPath(path);\r\n\r\n            require([path], function (template) {\r\n                template = removeLicense(template);\r\n                loading.resolve(template);\r\n            }, function (err) {\r\n                loading.reject(err);\r\n            });\r\n\r\n            return loading.promise();\r\n        },\r\n\r\n        /**\r\n         * Attempts to extract content of a node found by provided selector.\r\n         *\r\n         * @param {String} selector - Node's selector (not necessary valid).\r\n         * @returns {String|Boolean} If specified node doesn't exists\r\n         *      'false' will be returned, otherwise returns node's content.\r\n         */\r\n        loadFromNode: function (selector) {\r\n            var node;\r\n\r\n            try {\r\n                node =\r\n                    document.getElementById(selector) ||\r\n                    document.querySelector(selector);\r\n\r\n                return node ? node.innerHTML : false;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Adds requirejs's plugin and file extension to\r\n         * to the provided string if it's necessary.\r\n         *\r\n         * @param {String} path - Path to be processed.\r\n         * @returns {String} Formatted path.\r\n         */\r\n        formatPath: function (path) {\r\n            var result = path;\r\n\r\n            if (!hasPlugin(path)) {\r\n                result = defaultPlugin + '!' + result;\r\n            }\r\n\r\n            if (isFullPath(path)) {\r\n                return result;\r\n            }\r\n\r\n            if (!hasFileExtension(path)) {\r\n                result += '.' + defaultExt;\r\n            }\r\n\r\n            return result.replace(/^([^\\/]+)/g, '$1/template');\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/template/observable_source.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * Is being used by knockout template engine to store template to.\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiClass'\r\n], function (ko, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        /**\r\n         * Initializes templateName, _data, nodes properties.\r\n         *\r\n         * @param  {template} template - identifier of template\r\n         */\r\n        initialize: function (template) {\r\n            this.templateName = template;\r\n            this._data = {};\r\n            this.nodes = ko.observable([]);\r\n        },\r\n\r\n        /**\r\n         * Data setter. If only one arguments passed, returns corresponding value.\r\n         * Else, writes into it.\r\n         * @param  {String} key - key to write to or to read from\r\n         * @param  {*} value\r\n         * @return {*} - if 1 arg provided, Returns _data[key] property\r\n         */\r\n        data: function (key, value) {\r\n            if (arguments.length === 1) {\r\n                return this._data[key];\r\n            }\r\n\r\n            this._data[key] = value;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/template/renderer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    './loader'\r\n], function ($, _, loader) {\r\n    'use strict';\r\n\r\n    var colonReg       = /\\\\:/g,\r\n        renderedTemplatePromises = {},\r\n        attributes     = {},\r\n        elements       = {},\r\n        globals        = [],\r\n        renderer,\r\n        preset;\r\n\r\n    renderer = {\r\n\r\n        /**\r\n         * Loads template by provided path and\r\n         * than converts it's content to html.\r\n         *\r\n         * @param {String} tmplPath - Path to the template.\r\n         * @returns {jQueryPromise}\r\n         * @alias getRendered\r\n         */\r\n        render: function (tmplPath) {\r\n            var cachedPromise = renderedTemplatePromises[tmplPath];\r\n\r\n            if (!cachedPromise) {\r\n                cachedPromise = renderedTemplatePromises[tmplPath] = loader\r\n                    .loadTemplate(tmplPath)\r\n                    .then(renderer.parseTemplate);\r\n            }\r\n\r\n            return cachedPromise;\r\n        },\r\n\r\n        /**\r\n         * @ignore\r\n         */\r\n        getRendered: function (tmplPath) {\r\n            return renderer.render(tmplPath);\r\n        },\r\n\r\n        /**\r\n         * Parses provided string as html content\r\n         * and returns an array of DOM elements.\r\n         *\r\n         * @param {String} html - String to be processed.\r\n         * @returns {Array}\r\n         */\r\n        parseTemplate: function (html) {\r\n            var fragment = document.createDocumentFragment();\r\n\r\n            $(fragment).append(html);\r\n\r\n            return renderer.normalize(fragment);\r\n        },\r\n\r\n        /**\r\n         * Processes custom attributes and nodes of provided DOM element.\r\n         *\r\n         * @param {HTMLElement} content - Element to be processed.\r\n         * @returns {Array} An array of content's child nodes.\r\n         */\r\n        normalize: function (content) {\r\n            globals.forEach(function (handler) {\r\n                handler(content);\r\n            });\r\n\r\n            return _.toArray(content.childNodes);\r\n        },\r\n\r\n        /**\r\n         * Adds new global content handler.\r\n         *\r\n         * @param {Function} handler - Function which will be invoked for\r\n         *      an every content passed to 'normalize' method.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addGlobal: function (handler) {\r\n            if (!_.contains(globals, handler)) {\r\n                globals.push(handler);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified global content handler.\r\n         *\r\n         * @param {Function} handler - Handler to be removed.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeGlobal: function (handler) {\r\n            var index = globals.indexOf(handler);\r\n\r\n            if (~index) {\r\n                globals.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds new custom attribute handler.\r\n         *\r\n         * @param {String} id - Attribute identifier.\r\n         * @param {(Object|Function)} [config={}]\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addAttribute: function (id, config) {\r\n            var data = {\r\n                name: id,\r\n                binding: id,\r\n                handler: renderer.handlers.attribute\r\n            };\r\n\r\n            if (_.isFunction(config)) {\r\n                data.handler = config;\r\n            } else if (_.isObject(config)) {\r\n                _.extend(data, config);\r\n            }\r\n\r\n            data.id = id;\r\n            attributes[id] = data;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified attribute handler.\r\n         *\r\n         * @param {String} id - Attribute identifier.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeAttribute: function (id) {\r\n            delete attributes[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds new custom node handler.\r\n         *\r\n         * @param {String} id - Node identifier.\r\n         * @param {(Object|Function)} [config={}]\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addNode: function (id, config) {\r\n            var data = {\r\n                name: id,\r\n                binding: id,\r\n                handler: renderer.handlers.node\r\n            };\r\n\r\n            if (_.isFunction(config)) {\r\n                data.handler = config;\r\n            } else if (_.isObject(config)) {\r\n                _.extend(data, config);\r\n            }\r\n\r\n            data.id = id;\r\n            elements[id] = data;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified custom node handler.\r\n         *\r\n         * @param {String} id - Node identifier.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeNode: function (id) {\r\n            delete elements[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided DOM element is a custom node.\r\n         *\r\n         * @param {HTMLElement} node - Node to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isCustomNode: function (node) {\r\n            return _.some(elements, function (elem) {\r\n                return elem.name.toUpperCase() === node.tagName;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Processes custom attributes of a content's child nodes.\r\n         *\r\n         * @param {HTMLElement} content - DOM element to be processed.\r\n         */\r\n        processAttributes: function (content) {\r\n            var repeat;\r\n\r\n            repeat = _.some(attributes, function (attr) {\r\n                var attrName = attr.name,\r\n                    nodes    = content.querySelectorAll('[' + attrName + ']'),\r\n                    handler  = attr.handler;\r\n\r\n                return _.toArray(nodes).some(function (node) {\r\n                    var data = node.getAttribute(attrName);\r\n\r\n                    return handler(node, data, attr) === true;\r\n                });\r\n            });\r\n\r\n            if (repeat) {\r\n                renderer.processAttributes(content);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Processes custom nodes of a provided content.\r\n         *\r\n         * @param {HTMLElement} content - DOM element to be processed.\r\n         */\r\n        processNodes: function (content) {\r\n            var repeat;\r\n\r\n            repeat = _.some(elements, function (element) {\r\n                var nodes   = content.querySelectorAll(element.name),\r\n                    handler = element.handler;\r\n\r\n                return _.toArray(nodes).some(function (node) {\r\n                    var data = node.getAttribute('args');\r\n\r\n                    return handler(node, data, element) === true;\r\n                });\r\n            });\r\n\r\n            if (repeat) {\r\n                renderer.processNodes(content);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wraps provided string in curly braces if it's necessary.\r\n         *\r\n         * @param {String} args - String to be wrapped.\r\n         * @returns {String} Wrapped string.\r\n         */\r\n        wrapArgs: function (args) {\r\n            if (~args.indexOf('\\\\:')) {\r\n                args = args.replace(colonReg, ':');\r\n            } else if (~args.indexOf(':') && !~args.indexOf('}')) {\r\n                args = '{' + args + '}';\r\n            }\r\n\r\n            return args;\r\n        },\r\n\r\n        /**\r\n         * Wraps child nodes of provided DOM element\r\n         * with knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node whose children should be wrapped.\r\n         * @param {String} binding - Name of the binding for the opener comment tag.\r\n         * @param {String} data - Data associated with a binding.\r\n         *\r\n         * @example\r\n         *      <div id=\"example\"><span/></div>\r\n         *      wrapChildren(document.getElementById('example'), 'foreach', 'data');\r\n         *      =>\r\n         *      <div id=\"example\">\r\n         *      <!-- ko foreach: data -->\r\n         *          <span></span>\r\n         *      <!-- /ko -->\r\n         *      </div>\r\n         */\r\n        wrapChildren: function (node, binding, data) {\r\n            var tag = this.createComment(binding, data),\r\n                $node = $(node);\r\n\r\n            $node.prepend(tag.open);\r\n            $node.append(tag.close);\r\n        },\r\n\r\n        /**\r\n         * Wraps specified node with knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node to be wrapped.\r\n         * @param {String} binding - Name of the binding for the opener comment tag.\r\n         * @param {String} data - Data associated with a binding.\r\n         *\r\n         * @example\r\n         *      <div id=\"example\"></div>\r\n         *      wrapNode(document.getElementById('example'), 'foreach', 'data');\r\n         *      =>\r\n         *      <!-- ko foreach: data -->\r\n         *          <div id=\"example\"></div>\r\n         *      <!-- /ko -->\r\n         */\r\n        wrapNode: function (node, binding, data) {\r\n            var tag = this.createComment(binding, data),\r\n                $node = $(node);\r\n\r\n            $node.before(tag.open);\r\n            $node.after(tag.close);\r\n        },\r\n\r\n        /**\r\n         * Creates knockouts' comment tag for the provided binding.\r\n         *\r\n         * @param {String} binding - Name of the binding.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @returns {Object} Object with an open and close comment elements.\r\n         */\r\n        createComment: function (binding, data) {\r\n            return {\r\n                open: document.createComment(' ko ' + binding + ': ' + data + ' '),\r\n                close: document.createComment(' /ko ')\r\n            };\r\n        }\r\n    };\r\n\r\n    renderer.handlers = {\r\n\r\n        /**\r\n         * Basic node handler. Replaces custom nodes\r\n         * with a corresponding knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node to be processed.\r\n         * @param {String} data\r\n         * @param {Object} element\r\n         * @returns {Boolean} True\r\n         *\r\n         * @example Sample syntaxes conversions.\r\n         *      <with args=\"model\">\r\n         *          <span/>\r\n         *      </with>\r\n         *      =>\r\n         *      <!-- ko with: model-->\r\n         *          <span/>\r\n         *      <!-- /ko -->\r\n         */\r\n        node: function (node, data, element) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, element.binding, data);\r\n            $(node).replaceWith(node.childNodes);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Base attribute handler. Replaces custom attributes with\r\n         * a corresponding knockouts' data binding.\r\n         *\r\n         * @param {HTMLElement} node - Node to be processed.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @param {Object} attr - Attribute definition.\r\n         *\r\n         * @example Sample syntaxes conversions.\r\n         *      <div text=\"label\"></div>\r\n         *      =>\r\n         *      <div data-bind=\"text: label\"></div>\r\n         */\r\n        attribute: function (node, data, attr) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.bindings.add(node, attr.binding, data);\r\n            node.removeAttribute(attr.name);\r\n        },\r\n\r\n        /**\r\n         * Wraps provided node with a knockouts' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node that will be wrapped.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @param {Object} attr - Attribute definition.\r\n         *\r\n         * @example\r\n         *      <div outereach=\"data\" class=\"test\"></div>\r\n         *      =>\r\n         *      <!-- ko foreach: data -->\r\n         *          <div class=\"test\"></div>\r\n         *      <!-- /ko -->\r\n         */\r\n        wrapAttribute: function (node, data, attr) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, attr.binding, data);\r\n            node.removeAttribute(attr.name);\r\n        }\r\n    };\r\n\r\n    renderer.bindings = {\r\n\r\n        /**\r\n         * Appends binding string to the current\r\n         * 'data-bind' attribute of provided node.\r\n         *\r\n         * @param {HTMLElement} node - DOM element whose 'data-bind' attribute will be extended.\r\n         * @param {String} name - Name of a binding.\r\n         * @param {String} data - Data associated with the binding.\r\n         */\r\n        add: function (node, name, data) {\r\n            var bindings = this.get(node);\r\n\r\n            if (bindings) {\r\n                bindings += ', ';\r\n            }\r\n\r\n            bindings += name;\r\n\r\n            if (data) {\r\n                bindings += ': ' + data;\r\n            }\r\n\r\n            this.set(node, bindings);\r\n        },\r\n\r\n        /**\r\n         * Extracts value of a 'data-bind' attribute from provided node.\r\n         *\r\n         * @param {HTMLElement} node - Node whose attribute to be extracted.\r\n         * @returns {String}\r\n         */\r\n        get: function (node) {\r\n            return node.getAttribute('data-bind') || '';\r\n        },\r\n\r\n        /**\r\n         * Sets 'data-bind' attribute of the specified node\r\n         * to the provided value.\r\n         *\r\n         * @param {HTMLElement} node - Node whose attribute will be altered.\r\n         * @param {String} bindings - New value of 'data-bind' attribute.\r\n         */\r\n        set: function (node, bindings) {\r\n            node.setAttribute('data-bind', bindings);\r\n        }\r\n    };\r\n\r\n    renderer\r\n        .addGlobal(renderer.processAttributes)\r\n        .addGlobal(renderer.processNodes);\r\n\r\n    /**\r\n     * Collection of default binding conversions.\r\n     */\r\n    preset = {\r\n        nodes: _.object([\r\n            'if',\r\n            'text',\r\n            'with',\r\n            'scope',\r\n            'ifnot',\r\n            'foreach',\r\n            'component'\r\n        ], Array.prototype),\r\n        attributes: _.object([\r\n            'css',\r\n            'attr',\r\n            'html',\r\n            'with',\r\n            'text',\r\n            'click',\r\n            'event',\r\n            'submit',\r\n            'enable',\r\n            'disable',\r\n            'options',\r\n            'visible',\r\n            'template',\r\n            'hasFocus',\r\n            'textInput',\r\n            'component',\r\n            'uniqueName',\r\n            'optionsText',\r\n            'optionsValue',\r\n            'checkedValue',\r\n            'selectedOptions'\r\n        ], Array.prototype)\r\n    };\r\n\r\n    _.extend(preset.attributes, {\r\n        if: renderer.handlers.wrapAttribute,\r\n        ifnot: renderer.handlers.wrapAttribute,\r\n        innerif: {\r\n            binding: 'if'\r\n        },\r\n        innerifnot: {\r\n            binding: 'ifnot'\r\n        },\r\n        outereach: {\r\n            binding: 'foreach',\r\n            handler: renderer.handlers.wrapAttribute\r\n        },\r\n        foreach: {\r\n            name: 'each'\r\n        },\r\n        value: {\r\n            name: 'ko-value'\r\n        },\r\n        style: {\r\n            name: 'ko-style'\r\n        },\r\n        checked: {\r\n            name: 'ko-checked'\r\n        },\r\n        disabled: {\r\n            name: 'ko-disabled',\r\n            binding: 'disable'\r\n        },\r\n        focused: {\r\n            name: 'ko-focused',\r\n            binding: 'hasFocus'\r\n        },\r\n\r\n        /**\r\n         * Custom 'render' attribute handler function. Wraps child elements\r\n         * of a node with knockout's 'ko template:' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Element to be processed.\r\n         * @param {String} data - Data specified in 'render' attribute of a node.\r\n         */\r\n        render: function (node, data) {\r\n            data = data || 'getTemplate()';\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapChildren(node, 'template', data);\r\n            node.removeAttribute('render');\r\n        }\r\n    });\r\n\r\n    _.extend(preset.nodes, {\r\n        foreach: {\r\n            name: 'each'\r\n        },\r\n\r\n        /**\r\n         * Custom 'render' node handler function.\r\n         * Replaces node with knockout's 'ko template:' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Element to be processed.\r\n         * @param {String} data - Data specified in 'args' attribute of a node.\r\n         */\r\n        render: function (node, data) {\r\n            data = data || 'getTemplate()';\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, 'template', data);\r\n            $(node).replaceWith(node.childNodes);\r\n        }\r\n    });\r\n\r\n    _.each(preset.attributes, function (data, id) {\r\n        renderer.addAttribute(id, data);\r\n    });\r\n\r\n    _.each(preset.nodes, function (data, id) {\r\n        renderer.addNode(id, data);\r\n    });\r\n\r\n    return renderer;\r\n});\r\n","Magento_Ui/js/lib/logger/console-logger.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './logger',\r\n    './entry-factory',\r\n    './console-output-handler',\r\n    './formatter',\r\n    './message-pool',\r\n    './levels-pool',\r\n    'Magento_Ui/js/lib/core/storage/local',\r\n    'underscore',\r\n    './logger-utils'\r\n], function (Logger, entryFactory, ConsoleHandler, Formatter, messagePoll, levelsPoll, storage, _, LoggerUtils) {\r\n    'use strict';\r\n\r\n    var STORAGE_NAMESPACE = 'CONSOLE_LOGGER';\r\n\r\n    /**\r\n     * Singleton Logger's sub-class instance of which is configured to display its\r\n     * messages to the console. It also provides the support of predefined messages\r\n     * and persists its display level.\r\n     */\r\n    function ConsoleLogger() {\r\n        var formatter = new Formatter(),\r\n            consoleHandler = new ConsoleHandler(formatter),\r\n            savedLevel = storage.get(STORAGE_NAMESPACE),\r\n            utils = new LoggerUtils(this);\r\n\r\n        Logger.call(this, consoleHandler, entryFactory);\r\n\r\n        if (savedLevel) {\r\n            this.displayLevel_ = savedLevel;\r\n        }\r\n\r\n        this.utils = utils;\r\n        this.messages = messagePoll;\r\n        this.levels = levelsPoll.getLevels();\r\n    }\r\n\r\n    _.extend(ConsoleLogger, Logger);\r\n\r\n    ConsoleLogger.prototype = Object.create(Logger.prototype);\r\n    ConsoleLogger.prototype.constructor = ConsoleLogger;\r\n\r\n    /**\r\n     * Overrides parent method to save the provided display level.\r\n     *\r\n     * @override\r\n     */\r\n    ConsoleLogger.prototype.setDisplayLevel = function (level) {\r\n        Logger.prototype.setDisplayLevel.call(this, level);\r\n\r\n        storage.set(STORAGE_NAMESPACE, level);\r\n    };\r\n\r\n    /**\r\n     * Adds the support of predefined messages.\r\n     *\r\n     * @protected\r\n     * @override\r\n     */\r\n    ConsoleLogger.prototype.createEntry_ = function (message, level, data) {\r\n        var code;\r\n\r\n        if (messagePoll.hasMessage(message)) {\r\n            data = data || {};\r\n            code = message;\r\n            message = messagePoll.getMessage(code);\r\n\r\n            data.messageCode = code;\r\n        }\r\n\r\n        return Logger.prototype.createEntry_.call(this, message, level, data);\r\n    };\r\n\r\n    return new ConsoleLogger();\r\n});\r\n","Magento_Ui/js/lib/logger/console-output-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './levels-pool'\r\n], function (logLevels) {\r\n    'use strict';\r\n\r\n    var levels = logLevels.getLevels();\r\n\r\n    /**\r\n     * @param {LogFormatter} formatter\r\n     */\r\n    function ConsoleOutputHandler(formatter) {\r\n        /**\r\n         * @protected\r\n         * @type {LogFormatter}\r\n         */\r\n        this.formatter_ = formatter;\r\n    }\r\n\r\n    /**\r\n     * Display data of the provided entry to the console.\r\n     *\r\n     * @param {LogEntry} entry - Entry to be displayed.\r\n     */\r\n    ConsoleOutputHandler.prototype.show = function (entry) {\r\n        var displayString = this.formatter_.process(entry);\r\n\r\n        switch (entry.level) {\r\n            case levels.ERROR:\r\n                console.error(displayString);\r\n                break;\r\n\r\n            case levels.WARN:\r\n                console.warn(displayString);\r\n                break;\r\n\r\n            case levels.INFO:\r\n                console.info(displayString);\r\n                break;\r\n\r\n            case levels.DEBUG:\r\n                console.log(displayString);\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays the array of entries.\r\n     *\r\n     * @param {Array<LogEntry>} entries\r\n     */\r\n    ConsoleOutputHandler.prototype.dump = function (entries) {\r\n        entries.forEach(this.show, this);\r\n    };\r\n\r\n    return ConsoleOutputHandler;\r\n});\r\n","Magento_Ui/js/lib/logger/entry-factory.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './entry'\r\n], function (LogEntry) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @param {String} message\r\n         * @param {Number} level\r\n         * @param {Object} [messageData]\r\n         * @returns {LogEntry}\r\n         */\r\n        createEntry: function (message, level, messageData) {\r\n            return new LogEntry(message, level, messageData);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/logger/entry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './levels-pool'\r\n], function (logLevels) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Number} level\r\n     * @param {Object} [data]\r\n     */\r\n    function LogEntry(message, level, data) {\r\n        /**\r\n         * @readonly\r\n         * @type {Number}\r\n         */\r\n        this.timestamp = Date.now();\r\n\r\n        /**\r\n         * @readonly\r\n         * @type {Number}\r\n         */\r\n        this.level = level;\r\n\r\n        /**\r\n         * @readonly\r\n         * @type {String}\r\n         */\r\n        this.levelName = logLevels.getNameByCode(level);\r\n\r\n        /**\r\n         * @readonly\r\n         * @type {Object}\r\n         */\r\n        this.data = data;\r\n\r\n        /**\r\n         * @readonly\r\n         * @type {String}\r\n         */\r\n        this.message = message;\r\n    }\r\n\r\n    return LogEntry;\r\n});\r\n","Magento_Ui/js/lib/logger/formatter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'moment',\r\n    'mage/utils/template'\r\n], function (moment, mageTemplate) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {String} dateFormat\r\n     * @param {String} template\r\n     */\r\n    function LogFormatter(dateFormat, template) {\r\n        /**\r\n         * @protected\r\n         * @type {String}\r\n         */\r\n        this.dateFormat_ = 'YYYY-MM-DD hh:mm:ss';\r\n\r\n        /**\r\n         * @protected\r\n         * @type {String}\r\n         */\r\n        this.template_ = '[${ $.date }] [${ $.entry.levelName }] ${ $.message }';\r\n\r\n        if (dateFormat) {\r\n            this.dateFormat_ = dateFormat;\r\n        }\r\n\r\n        if (template) {\r\n            this.template_ = template;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {LogEntry} entry\r\n     * @returns {String}\r\n     */\r\n    LogFormatter.prototype.process = function (entry) {\r\n        var message = mageTemplate.template(entry.message, entry.data),\r\n            date = moment(entry.timestamp).format(this.dateFormat_);\r\n\r\n        return mageTemplate.template(this.template_, {\r\n            date: date,\r\n            entry: entry,\r\n            message: message\r\n        });\r\n    };\r\n\r\n    return LogFormatter;\r\n});\r\n","Magento_Ui/js/lib/logger/levels-pool.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    var LEVELS,\r\n        CODE_MAP;\r\n\r\n    LEVELS = {\r\n        NONE: 0,\r\n        ERROR: 1,\r\n        WARN: 2,\r\n        INFO: 3,\r\n        DEBUG: 4,\r\n        ALL: 5\r\n    };\r\n\r\n    CODE_MAP = _.invert(LEVELS);\r\n\r\n    return {\r\n        /**\r\n         * Returns the list of available log levels.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getLevels: function () {\r\n            return LEVELS;\r\n        },\r\n\r\n        /**\r\n         * Returns name of the log level that matches to the provided code.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getNameByCode: function (code) {\r\n            return CODE_MAP[code];\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/logger/logger-utils.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Utils methods for logger\r\n     * @param {Logger} logger\r\n     */\r\n    function LogUtils(logger) {\r\n        this.logger = logger;\r\n\r\n    }\r\n\r\n    /**\r\n     * Method for logging asynchronous operations\r\n     * @param {Promise} promise\r\n     * @param {Object} config\r\n     */\r\n    LogUtils.prototype.asyncLog = function (promise, config) {\r\n        var levels,\r\n            messages,\r\n            wait;\r\n\r\n        config = config || {};\r\n        levels = config.levels || this.createLevels();\r\n        messages = config.messages || this.createMessages();\r\n        wait = config.wait || 5000;\r\n\r\n        this.logger[levels.requested](messages.requested, config.data);\r\n        setTimeout(function () {\r\n            promise.state() === 'pending' ?\r\n                this.logger[levels.failed](messages.failed, config.data) :\r\n                this.logger[levels.loaded](messages.loaded, config.data);\r\n        }.bind(this), wait);\r\n    };\r\n\r\n    /**\r\n     * Method that creates object of messages\r\n     * @param {String} requested - log message that showing that request for class is started\r\n     * @param {String} loaded - log message that show when requested class is loaded\r\n     * @param {String} failed - log message that show when requested class is failed\r\n     * @returns {Object}\r\n     */\r\n    LogUtils.prototype.createMessages = function (requested, loaded, failed) {\r\n        return {\r\n            requested: requested || '',\r\n            loaded: loaded || '',\r\n            failed: failed || ''\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Method that creates object of log levels\r\n     * @param {String} requested - log message that showing that request for class is started\r\n     * @param {String} loaded - log message that show when requested class is loaded\r\n     * @param {String} failed - log message that show when requested class is failed\r\n     * @returns {Object}\r\n     */\r\n    LogUtils.prototype.createLevels = function (requested, loaded, failed) {\r\n        return {\r\n            requested: requested || 'info',\r\n            loaded: loaded || 'info',\r\n            failed: failed || 'warn'\r\n        };\r\n    };\r\n\r\n    return LogUtils;\r\n});\r\n","Magento_Ui/js/lib/logger/logger.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './levels-pool'\r\n], function (logLevels) {\r\n    'use strict';\r\n\r\n    var levels = logLevels.getLevels();\r\n\r\n    /**\r\n     * @param {LogOutputHandler} outputHandler\r\n     * @param {LogEntryFactory} entryFactory\r\n     */\r\n    function Logger(outputHandler, entryFactory) {\r\n        /**\r\n         * An array of log entries.\r\n         *\r\n         * @protected\r\n         * @type {Array<LogEntry>}\r\n         */\r\n        this.entries_ = [];\r\n\r\n        /**\r\n         * Current display level.\r\n         *\r\n         * @protected\r\n         * @type {Number}\r\n         */\r\n        this.displayLevel_ = levels.ERROR;\r\n\r\n        /**\r\n         * An array of display criteria.\r\n         *\r\n         * @protected\r\n         * @type {Array<LogCriteria>}\r\n         */\r\n        this.displayCriteria_ = [];\r\n\r\n        /**\r\n         * @protected\r\n         * @type {LogEntryFactory}\r\n         */\r\n        this.entryFactory_ = entryFactory;\r\n\r\n        /**\r\n         * @protected\r\n         * @type {Array<LogOutputHandler>}\r\n         */\r\n        this.outputHandlers_ = [outputHandler];\r\n\r\n        this.addDisplayCriteria(this.matchesLevel_);\r\n    }\r\n\r\n    /**\r\n     * Swaps current display level with the provided one.\r\n     *\r\n     * @param {Number} level - Level's code.\r\n     */\r\n    Logger.prototype.setDisplayLevel = function (level) {\r\n        var levelName = logLevels.getNameByCode(level);\r\n\r\n        if (!levelName) {\r\n            throw new TypeError('The provided level is not defined in the levels list.');\r\n        }\r\n\r\n        this.displayLevel_ = level;\r\n    };\r\n\r\n    /**\r\n     * Sets up the criteria by which log entries will be filtered out from the output.\r\n     *\r\n     * @param {LogCriteria} criteria\r\n     */\r\n    Logger.prototype.addDisplayCriteria = function (criteria) {\r\n        this.displayCriteria_.push(criteria);\r\n    };\r\n\r\n    /**\r\n     * Removes previously defined criteria.\r\n     *\r\n     * @param {LogCriteria} criteria\r\n     */\r\n    Logger.prototype.removeDisplayCriteria = function (criteria) {\r\n        var index = this.displayCriteria_.indexOf(criteria);\r\n\r\n        if (~index) {\r\n            this.displayCriteria_.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.error = function (message, messageData) {\r\n        return this.log_(message, levels.ERROR, messageData);\r\n    };\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.warn = function (message, messageData) {\r\n        return this.log_(message, levels.WARN, messageData);\r\n    };\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.info = function (message, messageData) {\r\n        return this.log_(message, levels.INFO, messageData);\r\n    };\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.debug = function (message, messageData) {\r\n        return this.log_(message, levels.DEBUG, messageData);\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @param {String} message\r\n     * @param {Number} level\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.log_ = function (message, level, messageData) {\r\n        var entry = this.createEntry_(message, level, messageData);\r\n\r\n        this.entries_.push(entry);\r\n\r\n        if (this.matchesCriteria_(entry)) {\r\n            this.processOutput_(entry);\r\n        }\r\n\r\n        return entry;\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @param {String} message\r\n     * @param {Number} level\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.createEntry_ = function (message, level, messageData) {\r\n        return this.entryFactory_.createEntry(message, level, messageData);\r\n    };\r\n\r\n    /**\r\n     * Returns an array of log entries that have been added to the logger.\r\n     *\r\n     * @param {LogCriteria} [criteria] - Optional filter criteria.\r\n     * @returns {Array<LogEntry>}\r\n     */\r\n    Logger.prototype.getEntries = function (criteria) {\r\n        if (criteria) {\r\n            return this.entries_.filter(criteria);\r\n        }\r\n\r\n        return this.entries_;\r\n    };\r\n\r\n    /**\r\n     * @param {LogCriteria} [criteria]\r\n     */\r\n    Logger.prototype.dump = function (criteria) {\r\n        var entries;\r\n\r\n        if (!criteria) {\r\n            criteria = this.matchesCriteria_;\r\n        }\r\n\r\n        entries = this.entries_.filter(criteria, this);\r\n\r\n        this.outputHandlers_.forEach(function (handler) {\r\n            handler.dump(entries);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @param {LogEntry} entry\r\n     */\r\n    Logger.prototype.processOutput_ = function (entry) {\r\n        this.outputHandlers_.forEach(function (handler) {\r\n            handler.show(entry);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @param {LogEntry} entry\r\n     * @returns {Boolean}\r\n     */\r\n    Logger.prototype.matchesCriteria_ = function (entry) {\r\n        return this.displayCriteria_.every(function (criteria) {\r\n            return criteria.call(this, entry);\r\n        }, this);\r\n    };\r\n\r\n    /**\r\n     * Checks that the level of provided entry passes the \"displayLevel_\" threshold.\r\n     *\r\n     * @protected\r\n     * @param {LogEntry} entry - Entry to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    Logger.prototype.matchesLevel_ = function (entry) {\r\n        return entry.level <= this.displayLevel_;\r\n    };\r\n\r\n    return Logger;\r\n});\r\n","Magento_Ui/js/lib/logger/message-pool.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var MESSAGES = {\r\n        templateStartLoading:\r\n            'The \"${ $.template }\" template requested by  the \"${$.component}\" component started loading.',\r\n        templateLoadedFromServer:\r\n            'The \"${ $.template }\" template requested by the \"${$.component}\" component  was loaded from server.\"',\r\n        templateLoadedFromCache:\r\n            'The \"${ $.template }\" template  requested by the \"${$.component}\" component was loaded from cache.\"',\r\n        templateLoadingFail: 'Failed to load the \"${ $.template }\" template requested by \"${$.component}\".',\r\n        componentStartInitialization:\r\n            'Component \"${$.component}\" start initialization with instance name \"${$.componentName}\".',\r\n        componentStartLoading: ' Started loading the \"${$.component}\" component.',\r\n        componentFinishLoading: 'The \"${$.component}\" component was loaded.',\r\n        componentLoadingFail: 'Failed to load the \"${$.component}\" component.',\r\n        depsLoadingFail: 'Could not get the declared \"${$.deps}\" dependency for the \"${$.component}\" instance.',\r\n        depsStartRequesting: 'Requesting the \"${$.deps}\" dependency for the \"${$.component}\" instance.',\r\n        depsFinishRequesting: 'The \"${$.deps}\" dependency for the \"${$.component}\" instance was received.',\r\n        requestingComponent: 'Requesting the \"${$.component}\" component.',\r\n        requestingComponentIsLoaded: 'The requested \"${$.component}\" component was received.',\r\n        requestingComponentIsFailed: 'Could not get the requested \"${$.component}\" component.'\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Returns message that matches the provided code.\r\n         *\r\n         * @param {String} code - Message's identifier\r\n         * @returns {String}\r\n         */\r\n        getMessage: function (code) {\r\n            return MESSAGES[code];\r\n        },\r\n\r\n        /**\r\n         * Adds a new message to the poll.\r\n         *\r\n         * @param {String} code - Message's identifier.\r\n         * @param {String} message - Text of the message\r\n         */\r\n        addMessage: function (code, message) {\r\n            MESSAGES[code] = message;\r\n        },\r\n\r\n        /**\r\n         * Tells whether message with provide code exists in the poll.\r\n         *\r\n         * @param {String} code - Message's identifier.\r\n         * @returns {Boolean}\r\n         */\r\n        hasMessage: function (code) {\r\n            return MESSAGES.hasOwnProperty(code);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/registry/registry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n/* global WeakMap */\r\ndefine([\r\n    'jquery',\r\n    'underscore'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var privateData = new WeakMap();\r\n\r\n    /**\r\n     * Extracts private item storage associated\r\n     * with a provided registry instance.\r\n     *\r\n     * @param {Object} container\r\n     * @returns {Object}\r\n     */\r\n    function getItems(container) {\r\n        return privateData.get(container).items;\r\n    }\r\n\r\n    /**\r\n     * Extracts private requests array associated\r\n     * with a provided registry instance.\r\n     *\r\n     * @param {Object} container\r\n     * @returns {Array}\r\n     */\r\n    function getRequests(container) {\r\n        return privateData.get(container).requests;\r\n    }\r\n\r\n    /**\r\n     * Wrapper function used for convenient access to the elements.\r\n     * See 'async' method for examples of usage and comparison\r\n     * with a regular 'get' method.\r\n     *\r\n     * @param {(String|Object|Function)} name - Key of the requested element.\r\n     * @param {Registry} registry - Instance of a registry\r\n     *      where to search for the element.\r\n     * @param {(Function|String)} [method] - Optional callback function\r\n     *      or a name of the elements' method which\r\n     *      will be invoked when element is available in registry.\r\n     * @returns {*}\r\n     */\r\n    function async(name, registry, method) {\r\n        var args = _.toArray(arguments).slice(3);\r\n\r\n        if (_.isString(method)) {\r\n            registry.get(name, function (component) {\r\n                component[method].apply(component, args);\r\n            });\r\n        } else if (_.isFunction(method)) {\r\n            registry.get(name, method);\r\n        } else if (!args.length) {\r\n            return registry.get(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks that every property of the query object\r\n     * is present and equal to the corresponding\r\n     * property in target object.\r\n     * Note that non-strict comparison is used.\r\n     *\r\n     * @param {Object} query - Query object.\r\n     * @param {Object} target - Target object.\r\n     * @returns {Boolean}\r\n     */\r\n    function compare(query, target) {\r\n        var matches = true,\r\n            index,\r\n            keys,\r\n            key;\r\n\r\n        if (!_.isObject(query) || !_.isObject(target)) {\r\n            return false;\r\n        }\r\n\r\n        keys = Object.getOwnPropertyNames(query);\r\n        index = keys.length;\r\n\r\n        while (matches && index--) {\r\n            key = keys[index];\r\n\r\n            /* eslint-disable eqeqeq */\r\n            if (target[key] != query[key]) {\r\n                matches = false;\r\n            }\r\n\r\n            /* eslint-enable eqeqeq */\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    /**\r\n     * Explodes incoming string into object if\r\n     * string is defined as a set of key = value pairs.\r\n     *\r\n     * @param {(String|*)} query - String to be processed.\r\n     * @returns {Object|*} Either created object or an unmodified incoming\r\n     *      value if conversion was not possible.\r\n     * @example Sample conversions.\r\n     *      'key = value, key2 = value2'\r\n     *      => {key: 'value', key2: 'value2'}\r\n     */\r\n    function explode(query) {\r\n        var result = {},\r\n            index,\r\n            data;\r\n\r\n        if (typeof query !== 'string' || !~query.indexOf('=')) {\r\n            return query;\r\n        }\r\n\r\n        query = query.split(',');\r\n        index = query.length;\r\n\r\n        while (index--) {\r\n            data = query[index].split('=');\r\n\r\n            result[data[0].trim()] = data[1].trim();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Extracts items from the provided data object\r\n     * which matches specified search criteria.\r\n     *\r\n     * @param {Object} data - Data object where to perform a lookup.\r\n     * @param {(String|Object|Function)} query - Search criteria.\r\n     * @param {Boolean} findAll - Flag that defines whether to\r\n     *      search for all applicable items or to stop on a first found entry.\r\n     * @returns {Array|Object|*}\r\n     */\r\n    function find(data, query, findAll) {\r\n        var iterator,\r\n            item;\r\n\r\n        query = explode(query);\r\n\r\n        if (typeof query === 'string') {\r\n            item = data[query];\r\n\r\n            if (findAll) {\r\n                return item ? [item] : [];\r\n            }\r\n\r\n            return item;\r\n        }\r\n\r\n        iterator = !_.isFunction(query) ?\r\n            compare.bind(null, query) :\r\n            query;\r\n\r\n        return findAll ?\r\n            _.filter(data, iterator) :\r\n            _.find(data, iterator);\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Registry() {\r\n        var data = {\r\n            items: {},\r\n            requests: []\r\n        };\r\n\r\n        this._updateRequests = _.debounce(this._updateRequests.bind(this), 10);\r\n        privateData.set(this, data);\r\n    }\r\n\r\n    Registry.prototype = {\r\n        constructor: Registry,\r\n\r\n        /**\r\n         * Retrieves item from registry which matches specified search criteria.\r\n         *\r\n         * @param {(Object|String|Function|Array)} query - Search condition (see examples).\r\n         * @param {Function} [callback] - Callback that will be invoked when\r\n         *      all of the requested items are available.\r\n         * @returns {*}\r\n         *\r\n         * @example Requesting item by it's name.\r\n         *      var obj = {index: 'test', sample: true};\r\n         *\r\n         *      registry.set('first', obj);\r\n         *      registry.get('first') === obj;\r\n         *      => true\r\n         *\r\n         * @example Requesting item with a specific properties.\r\n         *      registry.get('sample = 1, index = test') === obj;\r\n         *      => true\r\n         *      registry.get('sample = 0, index = foo') === obj;\r\n         *      => false\r\n         *\r\n         * @example Declaring search criteria as an object.\r\n         *      registry.get({sample: true}) === obj;\r\n         *      => true;\r\n         *\r\n         * @example Providing custom search handler.\r\n         *      registry.get(function (item) { return item.sample === true; }) === obj;\r\n         *      => true\r\n         *\r\n         * @example Sample asynchronous request declaration.\r\n         *      registry.get('index = test', function (item) {});\r\n         *\r\n         * @example Requesting multiple elements.\r\n         *      registry.set('second', {index: 'test2'});\r\n         *      registry.get(['first', 'second'], function (first, second) {});\r\n         */\r\n        get: function (query, callback) {\r\n            if (typeof callback !== 'function') {\r\n                return find(getItems(this), query);\r\n            }\r\n\r\n            this._addRequest(query, callback);\r\n        },\r\n\r\n        /**\r\n         * Sets provided item to the registry.\r\n         *\r\n         * @param {String} id - Item's identifier.\r\n         * @param {*} item - Item's data.\r\n         * returns {Registry} Chainable.\r\n         */\r\n        set: function (id, item) {\r\n            getItems(this)[id] = item;\r\n\r\n            this._updateRequests();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified item from registry.\r\n         * Note that search query is not applicable.\r\n         *\r\n         * @param {String} id - Item's identifier.\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        remove: function (id) {\r\n            delete getItems(this)[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Retrieves a collection of elements that match\r\n         * provided search criteria.\r\n         *\r\n         * @param {(Object|String|Function)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Array} Found elements.\r\n         */\r\n        filter: function (query) {\r\n            return find(getItems(this), query, true);\r\n        },\r\n\r\n        /**\r\n         * Checks that at least one element in collection\r\n         * matches provided search criteria.\r\n         *\r\n         * @param {(Object|String|Function)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Boolean}\r\n         */\r\n        has: function (query) {\r\n            return !!this.get(query);\r\n        },\r\n\r\n        /**\r\n         * Checks that registry contains a provided item.\r\n         *\r\n         * @param {*} item - Item to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        contains: function (item) {\r\n            return _.contains(getItems(this), item);\r\n        },\r\n\r\n        /**\r\n         * Extracts identifier of an item if it's present in registry.\r\n         *\r\n         * @param {*} item - Item whose identifier will be extracted.\r\n         * @returns {String|Undefined}\r\n         */\r\n        indexOf: function (item) {\r\n            return _.findKey(getItems(this), function (elem) {\r\n                return item === elem;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Same as a 'get' method except that it returns\r\n         * a promise object instead of invoking provided callback.\r\n         *\r\n         * @param {(String|Function|Object|Array)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        promise: function (query) {\r\n            var defer    = $.Deferred(),\r\n                callback = defer.resolve.bind(defer);\r\n\r\n            this.get(query, callback);\r\n\r\n            return defer.promise();\r\n        },\r\n\r\n        /**\r\n         * Creates a wrapper function over the provided search query\r\n         * in order to provide somehow more convenient access to the\r\n         * registry's items.\r\n         *\r\n         * @param {(String|Object|Function)} query - Search criteria.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Function}\r\n         *\r\n         * @example Comparison with a 'get' method on retrieving items.\r\n         *      var module = registry.async('name');\r\n         *\r\n         *      module();\r\n         *      => registry.get('name');\r\n         *\r\n         * @example Asynchronous request.\r\n         *      module(function (component) {});\r\n         *      => registry.get('name', function (component) {});\r\n         *\r\n         * @example Requesting item and invoking it's method with specified parameters.\r\n         *      module('trigger', true);\r\n         *      => registry.get('name', function (component) {\r\n         *          component.trigger(true);\r\n         *      });\r\n         */\r\n        async: function (query) {\r\n            return async.bind(null, query, this);\r\n        },\r\n\r\n        /**\r\n         * Creates new instance of a Registry.\r\n         *\r\n         * @returns {Registry} New instance.\r\n         */\r\n        create: function () {\r\n            return new Registry;\r\n        },\r\n\r\n        /**\r\n         * Adds new request to the queue or resolves it immediately\r\n         * if all of the required items are available.\r\n         *\r\n         * @private\r\n         * @param {(Object|String|Function|Array)} queries - Search criteria.\r\n         *      See 'get' method for the syntax examples.\r\n         * @param {Function} callback - Callback that will be invoked when\r\n         *      all of the requested items are available.\r\n         * @returns {Registry}\r\n         */\r\n        _addRequest: function (queries, callback) {\r\n            var request;\r\n\r\n            if (!Array.isArray(queries)) {\r\n                queries = queries ? [queries] : [];\r\n            }\r\n\r\n            request = {\r\n                queries: queries.map(explode),\r\n                callback: callback\r\n            };\r\n\r\n            this._canResolve(request) ?\r\n                this._resolveRequest(request) :\r\n                getRequests(this).push(request);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates requests list resolving applicable items.\r\n         *\r\n         * @private\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        _updateRequests: function () {\r\n            getRequests(this)\r\n                .filter(this._canResolve, this)\r\n                .forEach(this._resolveRequest, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resolves provided request invoking it's callback\r\n         * with items specified in query parameters.\r\n         *\r\n         * @private\r\n         * @param {Object} request - Request object.\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        _resolveRequest: function (request) {\r\n            var requests = getRequests(this),\r\n                items    = request.queries.map(this.get, this),\r\n                index    = requests.indexOf(request);\r\n\r\n            request.callback.apply(null, items);\r\n\r\n            if (~index) {\r\n                requests.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided request can be resolved.\r\n         *\r\n         * @private\r\n         * @param {Object} request - Request object.\r\n         * @returns {Boolean}\r\n         */\r\n        _canResolve: function (request) {\r\n            var queries = request.queries;\r\n\r\n            return queries.every(this.has, this);\r\n        }\r\n    };\r\n\r\n    return new Registry;\r\n});\r\n","Magento_Ui/js/lib/validation/rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    './utils',\r\n    'moment',\r\n    'tinycolor',\r\n    'jquery/validate',\r\n    'mage/translate'\r\n], function ($, _, utils, moment, tinycolor) {\r\n    'use strict';\r\n\r\n    /**\r\n     * validate credit card number using mod10\r\n     * @param {String} s\r\n     * @return {Boolean}\r\n     */\r\n    function validateCreditCard(s) {\r\n        // remove non-numerics\r\n        var v = '0123456789',\r\n            w = '',\r\n            i, j, k, m, c, a, x;\r\n\r\n        for (i = 0; i < s.length; i++) {\r\n            x = s.charAt(i);\r\n\r\n            if (v.indexOf(x, 0) !== -1) {\r\n                w += x;\r\n            }\r\n        }\r\n        // validate number\r\n        j = w.length / 2;\r\n        k = Math.floor(j);\r\n        m = Math.ceil(j) - k;\r\n        c = 0;\r\n\r\n        for (i = 0; i < k; i++) {\r\n            a = w.charAt(i * 2 + m) * 2;\r\n            c += a > 9 ? Math.floor(a / 10 + a % 10) : a;\r\n        }\r\n\r\n        for (i = 0; i < k + m; i++) {\r\n            c += w.charAt(i * 2 + 1 - m) * 1;\r\n        }\r\n\r\n        return c % 10 === 0;\r\n    }\r\n\r\n    /**\r\n     * Collection of validation rules including rules from additional-methods.js\r\n     * @type {Object}\r\n     */\r\n    return _.mapObject({\r\n        'min_text_length': [\r\n            function (value, params) {\r\n                return _.isUndefined(value) || value.length === 0 || value.length >= +params;\r\n            },\r\n            $.mage.__('Please enter more or equal than {0} symbols.')\r\n        ],\r\n        'max_text_length': [\r\n            function (value, params) {\r\n                return !_.isUndefined(value) && value.length <= +params;\r\n            },\r\n            $.mage.__('Please enter less or equal than {0} symbols.')\r\n        ],\r\n        'max-words': [\r\n            function (value, params) {\r\n                return utils.isEmpty(value) || utils.stripHtml(value).match(/\\b\\w+\\b/g).length < params;\r\n            },\r\n            $.mage.__('Please enter {0} words or less.')\r\n        ],\r\n        'min-words': [\r\n            function (value, params) {\r\n                return utils.isEmpty(value) || utils.stripHtml(value).match(/\\b\\w+\\b/g).length >= params;\r\n            },\r\n            $.mage.__('Please enter at least {0} words.')\r\n        ],\r\n        'range-words': [\r\n            function (value, params) {\r\n                var match = utils.stripHtml(value).match(/\\b\\w+\\b/g) || [];\r\n\r\n                return utils.isEmpty(value) || match.length >= params[0] &&\r\n                    match.length <= params[1];\r\n            },\r\n            $.mage.__('Please enter between {0} and {1} words.')\r\n        ],\r\n        'letters-with-basic-punc': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^[a-z\\-.,()\\u0027\\u0022\\s]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters or punctuation only please')\r\n        ],\r\n        'alphanumeric': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^\\w+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters, numbers, spaces or underscores only please')\r\n        ],\r\n        'letters-only': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^[a-z]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters only please')\r\n        ],\r\n        'no-whitespace': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^\\S+$/i.test(value);\r\n            },\r\n            $.mage.__('No white space please')\r\n        ],\r\n        'no-marginal-whitespace': [\r\n            function (value) {\r\n                return !/^\\s+|\\s+$/i.test(value);\r\n            },\r\n            $.mage.__('No marginal white space please')\r\n        ],\r\n        'zip-range': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^90[2-5]-\\d{2}-\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx')\r\n        ],\r\n        'integer': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^-?\\d+$/.test(value);\r\n            },\r\n            $.mage.__('A positive or negative non-decimal number please')\r\n        ],\r\n        'vinUS': [\r\n            function (value) {\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (value.length !== 17) {\r\n                    return false;\r\n                }\r\n                var i, n, d, f, cd, cdv,//eslint-disable-line vars-on-top\r\n                    LL = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],//eslint-disable-line max-len\r\n                    VL = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9],\r\n                    FL = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],\r\n                    rs = 0;\r\n\r\n                for (i = 0; i < 17; i++) {\r\n                    f = FL[i];\r\n                    d = value.slice(i, i + 1);\r\n\r\n                    if (i === 8) {\r\n                        cdv = d;\r\n                    }\r\n\r\n                    if (!isNaN(d)) {\r\n                        d *= f;\r\n                    } else {\r\n                        for (n = 0; n < LL.length; n++) {//eslint-disable-line max-depth\r\n                            if (d.toUpperCase() === LL[n]) {//eslint-disable-line max-depth\r\n                                d = VL[n];\r\n                                d *= f;\r\n\r\n                                if (isNaN(cdv) && n === 8) {//eslint-disable-line max-depth\r\n                                    cdv = LL[n];\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    rs += d;\r\n                }\r\n                cd = rs % 11;\r\n\r\n                if (cd === 10) {\r\n                    cd = 'X';\r\n                }\r\n\r\n                if (cd === cdv) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('The specified vehicle identification number (VIN) is invalid.')\r\n        ],\r\n        'dateITA': [\r\n            function (value) {\r\n                var check = false,\r\n                    re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/,\r\n                    adata, gg, mm, aaaa, xdata;\r\n\r\n                if (re.test(value)) {\r\n                    adata = value.split('/');\r\n                    gg = parseInt(adata[0], 10);\r\n                    mm = parseInt(adata[1], 10);\r\n                    aaaa = parseInt(adata[2], 10);\r\n                    xdata = new Date(aaaa, mm - 1, gg);\r\n\r\n                    if (xdata.getFullYear() === aaaa &&\r\n                        xdata.getMonth() === mm - 1 &&\r\n                        xdata.getDate() === gg\r\n                    ) {\r\n                        check = true;\r\n                    } else {\r\n                        check = false;\r\n                    }\r\n                } else {\r\n                    check = false;\r\n                }\r\n\r\n                return check;\r\n            },\r\n            $.mage.__('Please enter a correct date')\r\n        ],\r\n        'dateNL': [\r\n            function (value) {\r\n                return /^\\d\\d?[\\.\\/-]\\d\\d?[\\.\\/-]\\d\\d\\d?\\d?$/.test(value);\r\n            },\r\n            $.mage.__('Vul hier een geldige datum in.')\r\n        ],\r\n        'time': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^([01]\\d|2[0-3])(:[0-5]\\d){0,2}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 and 23:59')\r\n        ],\r\n        'time12h': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\s[AP]M))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 am and 12:00 pm')\r\n        ],\r\n        'phoneUS': [\r\n            function (value) {\r\n                value = value.replace(/\\s+/g, '');\r\n\r\n                return utils.isEmpty(value) || value.length > 9 &&\r\n                    value.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'phoneUK': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || value.length > 9 &&\r\n                    value.match(/^(\\(?(0|\\+44)[1-9]{1}\\d{1,4}?\\)?\\s?\\d{3,4}\\s?\\d{3,4})$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'mobileUK': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || value.length > 9 && value.match(/^((0|\\+44)7\\d{3}\\s?\\d{6})$/);\r\n            },\r\n            $.mage.__('Please specify a valid mobile number')\r\n        ],\r\n        'stripped-min-length': [\r\n            function (value, param) {\r\n                return _.isUndefined(value) || value.length === 0 || utils.stripHtml(value).length >= param;\r\n            },\r\n            $.mage.__('Please enter at least {0} characters')\r\n        ],\r\n        'email2': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\u0022)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\u0022)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.validator.messages.email\r\n        ],\r\n        'url2': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.validator.messages.url\r\n        ],\r\n        'credit-card-types': [\r\n            function (value, param) {\r\n                var validTypes;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (/[^0-9-]+/.test(value)) {\r\n                    return false;\r\n                }\r\n                value = value.replace(/\\D/g, '');\r\n                validTypes = 0x0000;\r\n\r\n                if (param.mastercard) {\r\n                    validTypes |= 0x0001;\r\n                }\r\n\r\n                if (param.visa) {\r\n                    validTypes |= 0x0002;\r\n                }\r\n\r\n                if (param.amex) {\r\n                    validTypes |= 0x0004;\r\n                }\r\n\r\n                if (param.dinersclub) {\r\n                    validTypes |= 0x0008;\r\n                }\r\n\r\n                if (param.enroute) {\r\n                    validTypes |= 0x0010;\r\n                }\r\n\r\n                if (param.discover) {\r\n                    validTypes |= 0x0020;\r\n                }\r\n\r\n                if (param.jcb) {\r\n                    validTypes |= 0x0040;\r\n                }\r\n\r\n                if (param.unknown) {\r\n                    validTypes |= 0x0080;\r\n                }\r\n\r\n                if (param.all) {\r\n                    validTypes = 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080;\r\n                }\r\n\r\n                if (validTypes & 0x0001 && /^(51|52|53|54|55)/.test(value)) { //mastercard\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0002 && /^(4)/.test(value)) { //visa\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0004 && /^(34|37)/.test(value)) { //amex\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0008 && /^(300|301|302|303|304|305|36|38)/.test(value)) { //dinersclub\r\n                    return value.length === 14;\r\n                }\r\n\r\n                if (validTypes & 0x0010 && /^(2014|2149)/.test(value)) { //enroute\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0020 && /^(6011)/.test(value)) { //discover\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(3)/.test(value)) { //jcb\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(2131|1800)/.test(value)) { //jcb\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0080) { //unknown\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'ipv4': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid IP v4 address.')\r\n        ],\r\n        'ipv6': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid IP v6 address.')\r\n        ],\r\n        'pattern': [\r\n            function (value, param) {\r\n                return utils.isEmpty(value) || new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('Invalid format.')\r\n        ],\r\n        'validate-no-html-tags': [\r\n            function (value) {\r\n                return !/<(\\/)?\\w+/.test(value);\r\n            },\r\n            $.mage.__('HTML tags are not allowed.')\r\n        ],\r\n        'validate-select': [\r\n            function (value) {\r\n                return value !== 'none' && value != null && value.length !== 0;\r\n            },\r\n            $.mage.__('Please select an option.')\r\n        ],\r\n        'validate-no-empty': [\r\n            function (value) {\r\n                return !utils.isEmpty(value);\r\n            },\r\n            $.mage.__('Empty Value.')\r\n        ],\r\n        'validate-alphanum-with-spaces': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9 ]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.')\r\n        ],\r\n        'validate-data': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[A-Za-z]+[A-Za-z0-9_]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-street': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    /^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), spaces and \"#\" in this field.')\r\n        ],\r\n        'validate-phoneStrict': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-phoneLax': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    /^((\\d[\\-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[\\-. ]?\\d{3}[\\-. ]?\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-fax': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid fax number (Ex: 123-456-7890).')\r\n        ],\r\n        'validate-email': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-emailSender': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[\\S ]+$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-password': [\r\n            function (value) {\r\n                var pass;\r\n\r\n                if (value == null) {\r\n                    return false;\r\n                }\r\n\r\n                pass = $.trim(value);\r\n\r\n                if (!pass.length) {\r\n                    return true;\r\n                }\r\n\r\n                return !(pass.length > 0 && pass.length < 6);\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-admin-password': [\r\n            function (value) {\r\n                var pass;\r\n\r\n                if (value == null) {\r\n                    return false;\r\n                }\r\n\r\n                pass = $.trim(value);\r\n\r\n                if (pass.length === 0) {\r\n                    return true;\r\n                }\r\n\r\n                if (!/[a-z]/i.test(value) || !/[0-9]/.test(value)) {\r\n                    return false;\r\n                }\r\n\r\n                if (pass.length < 7) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 7 or more characters, using both numeric and alphabetic.')\r\n        ],\r\n        'validate-customer-password': [\r\n            function (v, elm) {\r\n                var validator = this,\r\n                    counter = 0,\r\n                    passwordMinLength = $(elm).data('password-min-length'),\r\n                    passwordMinCharacterSets = $(elm).data('password-min-character-sets'),\r\n                    pass = $.trim(v),\r\n                    result = pass.length >= passwordMinLength;\r\n\r\n                if (result === false) {\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum length of this field must be equal or greater than %1 symbols. Leading and trailing spaces will be ignored.').replace('%1', passwordMinLength);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                if (pass.match(/\\d+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[a-z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[A-Z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[^a-zA-Z0-9]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (counter < passwordMinCharacterSets) {\r\n                    result = false;\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum of different classes of characters in password is %1. Classes of characters: Lower Case, Upper Case, Digits, Special Characters.').replace('%1', passwordMinCharacterSets);//eslint-disable-line max-len\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.passwordErrorMessage;\r\n            }\r\n        ],\r\n        'validate-url': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = (value || '').replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n\r\n                return (/^(http|https|ftp):\\/\\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\\d+))?(\\/[A-Z0-9~](([A-Z0-9_~-]|\\.)*[A-Z0-9~]|))*\\/?(.*)?$/i).test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. Protocol is required (http://, https:// or ftp://).')\r\n        ],\r\n        'validate-clean-url': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(http|https|ftp):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(value) || /^(www)((\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. For example http://www.example.com or www.example.com.')\r\n        ],\r\n        'validate-xml-identifier': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[A-Z][A-Z0-9_\\/-]*$/i.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid XML-identifier (Ex: something_1, block5, id-4).')\r\n        ],\r\n        'validate-ssn': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^\\d{3}-?\\d{2}-?\\d{4}$/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid social security number (Ex: 123-45-6789).')\r\n        ],\r\n        'validate-zip-us': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid zip code (Ex: 90602 or 90602-1234).')\r\n        ],\r\n        'validate-date-au': [\r\n            function (value) {\r\n                var regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/,\r\n                    d;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (utils.isEmpty(value) || !regex.test(value)) {\r\n                    return false;\r\n                }\r\n                d = new Date(value.replace(regex, '$2/$1/$3'));\r\n\r\n                return parseInt(RegExp.$2, 10) === 1 + d.getMonth() &&\r\n                    parseInt(RegExp.$1, 10) === d.getDate() &&\r\n                    parseInt(RegExp.$3, 10) === d.getFullYear();\r\n\r\n            },\r\n            $.mage.__('Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.')\r\n        ],\r\n        'validate-currency-dollar': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}\\d*(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$/.test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid $ amount. For example $100.00.')\r\n        ],\r\n        'validate-not-negative-number': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n\r\n                return !isNaN(value) && value >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        // validate-not-negative-number should be replaced in all places with this one and then removed\r\n        'validate-zero-or-greater': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n\r\n                return !isNaN(value) && value >= 0;\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        'validate-greater-than-zero': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n\r\n                return !isNaN(value) && value > 0;\r\n            },\r\n            $.mage.__('Please enter a number greater than 0 in this field.')\r\n        ],\r\n        'validate-css-length': [\r\n            function (value) {\r\n                if (value !== '') {\r\n                    return (/^[0-9]*\\.*[0-9]+(px|pc|pt|ex|em|mm|cm|in|%)?$/).test(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please input a valid CSS-length (Ex: 100px, 77pt, 20em, .5ex or 50%).')\r\n        ],\r\n        'validate-number': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    !isNaN(utils.parseNumber(value)) &&\r\n                    /^\\s*-?\\d*(?:[.,|'|\\s]\\d+)*(?:[.,|'|\\s]\\d{2})?-?\\s*$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-integer': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !isNaN(utils.parseNumber(value)) && /^\\s*-?\\d*\\s*$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid integer in this field.')\r\n        ],\r\n        'validate-number-range': [\r\n            function (value, param) {\r\n                var numValue, dataAttrRange, result, range, m;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?[\\d.,]+)?-(-?[\\d.,]+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (range) {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-positive-percent-decimal': [\r\n            function (value) {\r\n                var numValue;\r\n\r\n                if (utils.isEmptyNoTrim(value) || !/^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(value)) {\r\n                    return false;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                return utils.isBetween(numValue, 0.01, 100);\r\n            },\r\n            $.mage.__('Please enter a valid percentage discount value greater than 0.')\r\n        ],\r\n        'validate-digits': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !/[^\\d]/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-digits-range': [\r\n            function (value, param) {\r\n                var numValue, dataAttrRange, result, range, m;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?\\d+)?-(-?\\d+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (range) {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-range': [\r\n            function (value) {\r\n                var minValue, maxValue, ranges;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                } else if ($.validator.methods['validate-digits'] && $.validator.methods['validate-digits'](value)) {\r\n                    minValue = maxValue = utils.parseNumber(value);\r\n                } else {\r\n                    ranges = /^(-?\\d+)?-(-?\\d+)?$/.exec(value);\r\n\r\n                    if (ranges) {\r\n                        minValue = utils.parseNumber(ranges[1]);\r\n                        maxValue = utils.parseNumber(ranges[2]);\r\n\r\n                        if (minValue > maxValue) {//eslint-disable-line max-depth\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-alpha': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use letters only (a-z or A-Z) in this field.')\r\n        ],\r\n        'validate-code': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-z]+[a-z0-9_]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only lowercase letters (a-z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-alphanum': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z) or numbers (0-9) in this field. No spaces or other characters are allowed.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-not-number-first': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[^0-9-\\.].*$/.test(value.trim());\r\n            },\r\n            $.mage.__('First character must be letter.')\r\n        ],\r\n        'validate-date': [\r\n            function (value, params, additionalParams) {\r\n                var test = moment(value, additionalParams.dateFormat);\r\n\r\n                return utils.isEmptyNoTrim(value) || test.isValid();\r\n            },\r\n            $.mage.__('Please enter a valid date.')\r\n        ],\r\n        'validate-date-range': [\r\n            function (value, params) {\r\n                var fromDate = $('input[name*=\"' + params + '\"]').val();\r\n\r\n                return moment.utc(value).unix() >= moment.utc(fromDate).unix() || isNaN(moment.utc(value).unix());\r\n            },\r\n            $.mage.__('Make sure the To Date is later than or the same as the From Date.')\r\n        ],\r\n        'validate-identifier': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-z0-9][a-z0-9_\\/-]+(\\.[a-z0-9_-]+)?$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid URL Key (Ex: \"example-page\", \"example-page.html\" or \"anotherlevel/example-page\").')//eslint-disable-line max-len\r\n        ],\r\n        'validate-zip-international': [\r\n\r\n            /*function(v) {\r\n            // @TODO: Cleanup\r\n            return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\\s]{0,1}|[\\-]{0,1})[A-z0-9]{2,10}$)/.test(v);\r\n            }*/\r\n            function () {\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid zip code.')\r\n        ],\r\n        'validate-state': [\r\n            function (value) {\r\n                return value !== 0;\r\n            },\r\n            $.mage.__('Please select State/Province.')\r\n        ],\r\n        'less-than-equals-to': [\r\n            function (value, params) {\r\n                if ($.isNumeric(params) && $.isNumeric(value)) {\r\n                    return parseFloat(value) <= parseFloat(params);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a value less than or equal to {0}.')\r\n        ],\r\n        'greater-than-equals-to': [\r\n            function (value, params) {\r\n                if ($.isNumeric(params) && $.isNumeric(value)) {\r\n                    return parseFloat(value) >= parseFloat(params);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a value greater than or equal to {0}.')\r\n        ],\r\n        'validate-emails': [\r\n            function (value) {\r\n                var validRegexp, emails, i;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n                validRegexp = /^[a-z0-9\\._-]{1,30}@([a-z0-9_-]{1,30}\\.){1,5}[a-z]{2,4}$/i;\r\n                emails = value.split(/[\\s\\n\\,]+/g);\r\n\r\n                for (i = 0; i < emails.length; i++) {\r\n                    if (!validRegexp.test(emails[i].strip())) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter valid email addresses, separated by commas. For example, johndoe@domain.com, johnsmith@domain.com.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-cc-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10.\r\n             *\r\n             * @param {String} value - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (value) {\r\n                if (value) {\r\n                    return validateCreditCard(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-cc-ukss': [\r\n\r\n            /**\r\n             * Validate Switch/Solo/Maestro issue number and start date is filled.\r\n             *\r\n             * @param {String} value - input field value\r\n             * @return {*}\r\n             */\r\n            function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('Please enter issue number or start date for switch/solo card type.')\r\n        ],\r\n        'required-entry': [\r\n            function (value) {\r\n                return !utils.isEmpty(value);\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'checked': [\r\n            function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'not-negative-amount': [\r\n            function (value) {\r\n                if (value.length) {\r\n                    return (/^\\s*\\d+([,.]\\d+)*\\s*%?\\s*$/).test(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter positive number in this field.')\r\n        ],\r\n        'validate-per-page-value-list': [\r\n            function (value) {\r\n                var isValid = true,\r\n                    values = value.split(','),\r\n                    i;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return isValid;\r\n                }\r\n\r\n                for (i = 0; i < values.length; i++) {\r\n                    if (!/^[0-9]+$/.test(values[i])) {\r\n                        isValid = false;\r\n                    }\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('Please enter a valid value, ex: 10,20,30')\r\n        ],\r\n        'validate-new-password': [\r\n            function (value) {\r\n                if ($.validator.methods['validate-password'] && !$.validator.methods['validate-password'](value)) {\r\n                    return false;\r\n                }\r\n\r\n                if (utils.isEmpty(value) && value !== '') {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-item-quantity': [\r\n            function (value, params) {\r\n                var validator = this,\r\n                    result = false,\r\n                    // obtain values for validation\r\n                    qty = utils.parseNumber(value),\r\n                    isMinAllowedValid = typeof params.minAllowed === 'undefined' ||\r\n                        qty >= utils.parseNumber(params.minAllowed),\r\n                    isMaxAllowedValid = typeof params.maxAllowed === 'undefined' ||\r\n                        qty <= utils.parseNumber(params.maxAllowed),\r\n                    isQtyIncrementsValid = typeof params.qtyIncrements === 'undefined' ||\r\n                        qty % utils.parseNumber(params.qtyIncrements) === 0;\r\n\r\n                result = qty > 0;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('Please enter a quantity greater than 0.');//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMinAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The fewest you may purchase is %1.').replace('%1', params.minAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMaxAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The maximum you may purchase is %1.').replace('%1', params.maxAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isQtyIncrementsValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('You can buy this product only in quantities of %1 at a time.').replace('%1', params.qtyIncrements);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.itemQtyErrorMessage;\r\n            }\r\n        ],\r\n        'equalTo': [\r\n            function (value, param) {\r\n                return value === $(param).val();\r\n            },\r\n            $.validator.messages.equalTo\r\n        ],\r\n        'validate-file-type': [\r\n            function (name, types) {\r\n                var extension = name.split('.').pop().toLowerCase();\r\n\r\n                if (types && typeof types === 'string') {\r\n                    types = types.split(' ');\r\n                }\r\n\r\n                return !types || !types.length || ~types.indexOf(extension);\r\n            },\r\n            $.mage.__('We don\\'t recognize or support this file extension type.')\r\n        ],\r\n        'validate-max-size': [\r\n            function (size, maxSize) {\r\n                return maxSize === false || size < maxSize;\r\n            },\r\n            $.mage.__('File you are trying to upload exceeds maximum file size limit.')\r\n        ],\r\n        'validate-if-tag-script-exist': [\r\n            function (value) {\r\n                return !value || (/<script\\b[^>]*>([\\s\\S]*?)<\\/script>$/ig).test(value);\r\n            },\r\n            $.mage.__('Please use tag SCRIPT with SRC attribute or with proper content to include JavaScript to the document.')//eslint-disable-line max-len\r\n        ],\r\n        'date_range_min': [\r\n            function (value, minValue, params) {\r\n                return moment.utc(value, params.dateFormat).unix() >= minValue;\r\n            },\r\n            $.mage.__('The date is not within the specified range.')\r\n        ],\r\n        'date_range_max': [\r\n            function (value, maxValue, params) {\r\n                return moment.utc(value, params.dateFormat).unix() <= maxValue;\r\n            },\r\n            $.mage.__('The date is not within the specified range.')\r\n        ],\r\n        'validate-color': [\r\n            function (value) {\r\n                if (value === '') {\r\n                    return true;\r\n                }\r\n\r\n                return tinycolor(value).isValid();\r\n            },\r\n            $.mage.__('Wrong color format. Please specify color in HEX, RGBa, HSVa, HSLa or use color name.')\r\n        ],\r\n        'blacklist-url': [\r\n            function (value, param) {\r\n                return new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('This link is not allowed.')\r\n        ],\r\n        'validate-dob': [\r\n            function (value, param, params) {\r\n                if (value === '') {\r\n                    return true;\r\n                }\r\n\r\n                return moment.utc(value, params.dateFormat).isSameOrBefore(moment.utc());\r\n            },\r\n            $.mage.__('The Date of Birth should not be greater than today.')\r\n        ]\r\n    }, function (data) {\r\n        return {\r\n            handler: data[0],\r\n            message: data[1]\r\n        };\r\n    });\r\n});\r\n","Magento_Ui/js/lib/validation/utils.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var utils = {\r\n        /**\r\n         * Check if string is empty with trim.\r\n         *\r\n         * @param {String} value\r\n         * @return {Boolean}\r\n         */\r\n        isEmpty: function (value) {\r\n            return value === '' || value == null || value.length === 0 || /^\\s+$/.test(value);\r\n        },\r\n\r\n        /**\r\n         * Check if string is empty no trim.\r\n         *\r\n         * @param {String} value\r\n         * @return {Boolean}\r\n         */\r\n        isEmptyNoTrim: function (value) {\r\n            return value === '' || value == null || value.length === 0;\r\n        },\r\n\r\n        /**\r\n         * Checks if {value} is between numbers {from} and {to}.\r\n         *\r\n         * @param {String} value\r\n         * @param {String} from\r\n         * @param {String} to\r\n         * @return {Boolean}\r\n         */\r\n        isBetween: function (value, from, to) {\r\n            return (from === null || from === '' || value >= utils.parseNumber(from)) &&\r\n                   (to === null || to === '' || value <= utils.parseNumber(to));\r\n        },\r\n\r\n        /**\r\n         * Parse price string.\r\n         *\r\n         * @param {String} value\r\n         * @return {Number}\r\n         */\r\n        parseNumber: function (value) {\r\n            var isDot, isComa;\r\n\r\n            if (typeof value !== 'string') {\r\n                return parseFloat(value);\r\n            }\r\n            isDot = value.indexOf('.');\r\n            isComa = value.indexOf(',');\r\n\r\n            if (isDot !== -1 && isComa !== -1) {\r\n                if (isComa > isDot) {\r\n                    value = value.replace('.', '').replace(',', '.');\r\n                } else {\r\n                    value = value.replace(',', '');\r\n                }\r\n            } else if (isComa !== -1) {\r\n                value = value.replace(',', '.');\r\n            }\r\n\r\n            return parseFloat(value);\r\n        },\r\n\r\n        /**\r\n         * Removes HTML tags and space characters, numbers and punctuation.\r\n         *\r\n         * @param {String} value -  Value being stripped.\r\n         * @return {String}\r\n         */\r\n        stripHtml: function (value) {\r\n            return value.replace(/<.[^<>]*?>/g, ' ').replace(/&nbsp;|&#160;/gi, ' ')\r\n                .replace(/[0-9.(),;:!?%#$'\"_+=\\/-]*/g, '');\r\n        }\r\n    };\r\n\r\n    return utils;\r\n});\r\n","Magento_Ui/js/lib/validation/validator.js":"/*\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    './rules'\r\n], function (_, rulesList) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Validates provided value be the specified rule.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @param {*} value - Value to be checked.\r\n     * @param {*} [params]\r\n     * @param {*} additionalParams - additional validation params set by method caller\r\n     * @returns {Object}\r\n     */\r\n    function validate(id, value, params, additionalParams) {\r\n        var rule,\r\n            message,\r\n            valid,\r\n            result = {\r\n                rule: id,\r\n                passed: true,\r\n                message: ''\r\n            };\r\n\r\n        if (_.isObject(params)) {\r\n            message = params.message || '';\r\n        }\r\n\r\n        if (!rulesList[id]) {\r\n            return result;\r\n        }\r\n\r\n        rule    = rulesList[id];\r\n        message = message || rule.message;\r\n        valid   = rule.handler(value, params, additionalParams);\r\n\r\n        if (!valid) {\r\n            params = Array.isArray(params) ?\r\n                params :\r\n                [params];\r\n\r\n            if (typeof message === 'function') {\r\n                message = message.call(rule);\r\n            }\r\n\r\n            message = params.reduce(function (msg, param, idx) {\r\n                return msg.replace(new RegExp('\\\\{' + idx + '\\\\}', 'g'), param);\r\n            }, message);\r\n\r\n            result.passed = false;\r\n            result.message = message;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Validates provided value by a specified set of rules.\r\n     *\r\n     * @param {(String|Object)} rules - One or many validation rules.\r\n     * @param {*} value - Value to be checked.\r\n     * @param {*} additionalParams - additional validation params set by method caller\r\n     * @returns {Object}\r\n     */\r\n    function validator(rules, value, additionalParams) {\r\n        var result;\r\n\r\n        if (typeof rules === 'object') {\r\n            result = {\r\n                passed: true\r\n            };\r\n\r\n            _.every(rules, function (ruleParams, id) {\r\n                if (ruleParams.validate || ruleParams !== false || additionalParams) {\r\n                    result = validate(id, value, ruleParams, additionalParams);\r\n\r\n                    return result.passed;\r\n                }\r\n\r\n                return true;\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        return validate.apply(null, arguments);\r\n    }\r\n\r\n    /**\r\n     * Adds new validation rule.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @param {Function} handler - Validation function.\r\n     * @param {String} message - Error message.\r\n     */\r\n    validator.addRule = function (id, handler, message) {\r\n        rulesList[id] = {\r\n            handler: handler,\r\n            message: message\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Returns rule object found by provided identifier.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @returns {Object}\r\n     */\r\n    validator.getRule = function (id) {\r\n        return rulesList[id];\r\n    };\r\n\r\n    return validator;\r\n});\r\n","Magento_Ui/js/lib/view/utils/async.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    'uiRegistry',\r\n    './dom-observer',\r\n    'Magento_Ui/js/lib/knockout/extender/bound-nodes',\r\n    './bindings'\r\n], function (ko, $, _, registry, domObserver, boundedNodes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided value is a dom element.\r\n     *\r\n     * @param {*} node - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDomElement(node) {\r\n        return typeof node === 'object' && node.tagName && node.nodeType;\r\n    }\r\n\r\n    /**\r\n     * Parses provided string and extracts\r\n     * component, context and selector data from it.\r\n     *\r\n     * @param {String} str - String to be processed.\r\n     * @returns {Object} Data retrieved from string.\r\n     *\r\n     * @example Sample format.\r\n     *      '{{component}}:{{ctx}} -> {{selector}}'\r\n     *\r\n     *      component - Name of component.\r\n     *      ctx - Selector of the root node upon which component is binded.\r\n     *      selector - Selector of DOM elements located\r\n     *          inside of a previously specified context.\r\n     */\r\n    function parseSelector(str) {\r\n        var data    = str.trim().split('->'),\r\n            result  = {},\r\n            componentData;\r\n\r\n        if (data.length === 1) {\r\n            if (!~data[0].indexOf(':')) {\r\n                result.selector = data[0];\r\n            } else {\r\n                componentData = data[0];\r\n            }\r\n        } else {\r\n            componentData   = data[0];\r\n            result.selector = data[1];\r\n        }\r\n\r\n        if (componentData) {\r\n            componentData = componentData.split(':');\r\n\r\n            result.component = componentData[0];\r\n            result.ctx = componentData[1];\r\n        }\r\n\r\n        _.each(result, function (value, key) {\r\n            result[key] = value.trim();\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Internal method used to normalize argumnets passed\r\n     * to 'async' module methods.\r\n     *\r\n     * @param {(String|Objetc)} selector\r\n     * @param {(HTMLElement|Object|String)} [ctx]\r\n     * @returns {Object}\r\n     */\r\n    function parseData(selector, ctx) {\r\n        var data = {};\r\n\r\n        if (arguments.length === 2) {\r\n            data.selector = selector;\r\n\r\n            if (isDomElement(ctx)) {\r\n                data.ctx = ctx;\r\n            } else {\r\n                data.component = ctx;\r\n                data.ctx = '*';\r\n            }\r\n        } else {\r\n            data = _.isString(selector) ?\r\n                parseSelector(selector) :\r\n                selector;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Creates promise that will be resolved\r\n     * when requested component is registred.\r\n     *\r\n     * @param {String} name - Name of component.\r\n     * @returns {jQueryPromise}\r\n     */\r\n    function waitComponent(name) {\r\n        var deffer = $.Deferred();\r\n\r\n        if (_.isString(name)) {\r\n            registry.get(name, function (component) {\r\n                deffer.resolve(component);\r\n            });\r\n        } else {\r\n            deffer.resolve(name);\r\n        }\r\n\r\n        return deffer.promise();\r\n    }\r\n\r\n    /**\r\n     * Creates listener for the nodes binded to provided component.\r\n     *\r\n     * @param {Object} data - Listener data.\r\n     * @param {Object} component - Associated with nodes component.\r\n     */\r\n    function setRootListener(data, component) {\r\n        boundedNodes.get(component, function (root) {\r\n            if (!$(root).is(data.ctx || '*')) {\r\n                return;\r\n            }\r\n\r\n            data.selector ?\r\n                domObserver.get(data.selector, data.fn, root) :\r\n                data.fn(root);\r\n        });\r\n    }\r\n\r\n    /*eslint-disable no-unused-vars*/\r\n    /**\r\n     * Sets listener for the appearance of elements which\r\n     * matches specified selector data.\r\n     *\r\n     * @param {(String|Object)} selector - Valid css selector or a string\r\n     *      in format acceptable by 'parseSelector' method or an object with\r\n     *      'component', 'selector' and 'ctx' properties.\r\n     * @param {(HTMLElement|Object|String)} [ctx] - Optional context parameter\r\n     *      which might be a DOM element, component instance or components' name.\r\n     * @param {Function} fn - Callback that will be invoked\r\n     *      when required DOM element appears.\r\n     *\r\n     * @example\r\n     *      Creating listener of the 'span' nodes appearance,\r\n     *      located inside of 'div' nodes, which are binded to 'cms_page_listing' component:\r\n     *\r\n     *      $.async('cms_page_listing:div -> span', function (node) {});\r\n     *\r\n     * @example Another syntaxes of the previous example.\r\n     *      $.async({\r\n     *          component: 'cms_page_listing',\r\n     *          ctx: 'div',\r\n     *          selector: 'span'\r\n     *       }, function (node) {});\r\n     *\r\n     * @example Listens for appearance of any child node inside of specified component.\r\n     *      $.async('> *', 'cms_page_lsiting', function (node) {});\r\n     *\r\n     * @example Listens for appearance of 'span' nodes inside of specific context.\r\n     *      $.async('span', document.getElementById('test'), function (node) {});\r\n     */\r\n    $.async = function (selector, ctx, fn) {\r\n        var args = _.toArray(arguments),\r\n            data = parseData.apply(null, _.initial(args));\r\n\r\n        data.fn = _.last(args);\r\n\r\n        if (data.component) {\r\n            waitComponent(data.component)\r\n                .then(setRootListener.bind(null, data));\r\n        } else {\r\n            domObserver.get(data.selector, data.fn, data.ctx);\r\n        }\r\n    };\r\n\r\n    /*eslint-enable no-unused-vars*/\r\n\r\n    _.extend($.async, {\r\n\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Returns collection of elements found by provided selector data.\r\n         *\r\n         * @param {(String|Object)} selector - See 'async' definition.\r\n         * @param {(HTMLElement|Object|String)} [ctx] - See 'async' definition.\r\n         * @returns {Array} An array of DOM elements.\r\n         */\r\n        get: function (selector, ctx) {\r\n            var data        = parseData.apply(null, arguments),\r\n                component   = data.component,\r\n                nodes;\r\n\r\n            if (!component) {\r\n                return $(data.selector, data.ctx).toArray();\r\n            } else if (_.isString(component)) {\r\n                component = registry.get(component);\r\n            }\r\n\r\n            if (!component) {\r\n                return [];\r\n            }\r\n\r\n            nodes = boundedNodes.get(component);\r\n            nodes = $(nodes).filter(data.ctx).toArray();\r\n\r\n            return data.selector ?\r\n                $(data.selector, nodes).toArray() :\r\n                nodes;\r\n        },\r\n\r\n        /*eslint-enable no-unused-vars*/\r\n\r\n        /**\r\n         * Sets removal listener of the specified nodes.\r\n         *\r\n         * @param {(HTMLElement|Array|ArrayLike)} nodes - Nodes whose removal to track.\r\n         * @param {Function} fn - Callback that will be invoked when node is removed.\r\n         */\r\n        remove: function (nodes, fn) {\r\n            domObserver.remove(nodes, fn);\r\n        },\r\n\r\n        parseSelector: parseSelector\r\n    });\r\n\r\n    return $;\r\n});\r\n","Magento_Ui/js/lib/view/utils/bindings.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore'\r\n], function (ko, $, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided  value is a dom element.\r\n     *\r\n     * @param {*} node - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDomElement(node) {\r\n        return typeof node === 'object' && node.tagName && node.nodeType;\r\n    }\r\n\r\n    /**\r\n     * Removes from the provided array all non-root nodes located inside\r\n     * of the comment element as long as the closing comment tags.\r\n     *\r\n     * @param {(Array|ArrayLike)} nodes - An array of nodes to be processed.\r\n     * @returns {Array}\r\n     */\r\n    function normalize(nodes) {\r\n        var result;\r\n\r\n        nodes   = _.toArray(nodes);\r\n        result  = nodes.slice();\r\n\r\n        nodes.forEach(function (node) {\r\n            if (node.nodeType === 8) {\r\n                result = !ko.virtualElements.hasBindingValue(node) ?\r\n                    _.without(result, node) :\r\n                    _.difference(result, ko.virtualElements.childNodes(node));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Extends binding context of each item in the collection.\r\n     *\r\n     * @param {...Object} extenders - Multiple extender objects to be applied to the context.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.extendCtx = function () {\r\n        var nodes       = normalize(this),\r\n            extenders   = _.toArray(arguments);\r\n\r\n        nodes.forEach(function (node) {\r\n            var ctx  = ko.contextFor(node),\r\n                data = [ctx].concat(extenders);\r\n\r\n            _.extend.apply(_, data);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Evaluates bindings specified in each DOM element of collection.\r\n     *\r\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\r\n     *      If not specified then current context of a collections' item will be used.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.applyBindings = function (ctx) {\r\n        var nodes = normalize(this),\r\n            nodeCtx;\r\n\r\n        if (isDomElement(ctx)) {\r\n            ctx = ko.contextFor(ctx);\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            nodeCtx = ctx || ko.contextFor(node);\r\n\r\n            ko.applyBindings(nodeCtx, node);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Adds specified bindings to each DOM element in\r\n     * collection and evaluates them with provided context.\r\n     *\r\n     * @param {(Object|Function)} data - Either bindings object or a function\r\n     *      which returns bindings data for each element in collection.\r\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\r\n     *      If not specified then current context of a collections' item will be used.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.bindings = function (data, ctx) {\r\n        var nodes    = normalize(this),\r\n            bindings = data,\r\n            nodeCtx;\r\n\r\n        if (isDomElement(ctx)) {\r\n            ctx = ko.contextFor(ctx);\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            nodeCtx = ctx || ko.contextFor(node);\r\n\r\n            if (_.isFunction(data)) {\r\n                bindings = data(nodeCtx, node);\r\n            }\r\n\r\n            ko.applyBindingsToNode(node, bindings, nodeCtx);\r\n        });\r\n\r\n        return this;\r\n    };\r\n});\r\n","Magento_Ui/js/lib/view/utils/dom-observer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'domReady!'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var counter = 1,\r\n        watchers,\r\n        globalObserver,\r\n        disabledNodes = [];\r\n\r\n    watchers = {\r\n        selectors: {},\r\n        nodes: {}\r\n    };\r\n\r\n    /**\r\n     * Checks if node represents an element node (nodeType === 1).\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Boolean}\r\n     */\r\n    function isElementNode(node) {\r\n        return node.nodeType === 1;\r\n    }\r\n\r\n    /**\r\n     * Extracts all child descendant\r\n     * elements of a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Array}\r\n     */\r\n    function extractChildren(node) {\r\n        var children = node.querySelectorAll('*');\r\n\r\n        return _.toArray(children);\r\n    }\r\n\r\n    /**\r\n     * Extracts node identifier. If ID is not specified,\r\n     * then it will be created for the provided node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Number}\r\n     */\r\n    function getNodeId(node) {\r\n        var id = node._observeId;\r\n\r\n        if (!id) {\r\n            id = node._observeId = counter++;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Invokes callback passing node to it.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {Object} data\r\n     */\r\n    function trigger(node, data) {\r\n        var id = getNodeId(node),\r\n            ids = data.invoked;\r\n\r\n        if (_.contains(ids, id)) {\r\n            return;\r\n        }\r\n\r\n        data.callback(node);\r\n        data.invoked.push(id);\r\n    }\r\n\r\n    /**\r\n     * Adds node to the observer list.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Object}\r\n     */\r\n    function createNodeData(node) {\r\n        var nodes   = watchers.nodes,\r\n            id      = getNodeId(node);\r\n\r\n        nodes[id] = nodes[id] || {};\r\n\r\n        return nodes[id];\r\n    }\r\n\r\n    /**\r\n     * Returns data associated with a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Object|Undefined}\r\n     */\r\n    function getNodeData(node) {\r\n        var nodeId = node._observeId;\r\n\r\n        return watchers.nodes[nodeId];\r\n    }\r\n\r\n    /**\r\n     * Removes data associated with a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     */\r\n    function removeNodeData(node) {\r\n        var nodeId = node._observeId;\r\n\r\n        delete watchers.nodes[nodeId];\r\n    }\r\n\r\n    /**\r\n     * Adds removal listener for a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {Object} data\r\n     */\r\n    function addRemovalListener(node, data) {\r\n        var nodeData = createNodeData(node);\r\n\r\n        (nodeData.remove = nodeData.remove || []).push(data);\r\n    }\r\n\r\n    /**\r\n     * Adds listener for the nodes which matches specified selector.\r\n     *\r\n     * @param {String} selector - CSS selector.\r\n     * @param {Object} data\r\n     */\r\n    function addSelectorListener(selector, data) {\r\n        var storage = watchers.selectors;\r\n\r\n        (storage[selector] = storage[selector] || []).push(data);\r\n    }\r\n\r\n    /**\r\n     * Calls handlers associated with an added node.\r\n     * Adds listeners for the node removal.\r\n     *\r\n     * @param {HTMLElement} node - Added node.\r\n     */\r\n    function processAdded(node) {\r\n        _.each(watchers.selectors, function (listeners, selector) {\r\n            listeners.forEach(function (data) {\r\n                if (!data.ctx.contains(node) || !$(node, data.ctx).is(selector)) {\r\n                    return;\r\n                }\r\n\r\n                if (data.type === 'add') {\r\n                    trigger(node, data);\r\n                } else if (data.type === 'remove') {\r\n                    addRemovalListener(node, data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calls handlers associated with a removed node.\r\n     *\r\n     * @param {HTMLElement} node - Removed node.\r\n     */\r\n    function processRemoved(node) {\r\n        var nodeData    = getNodeData(node),\r\n            listeners   = nodeData && nodeData.remove;\r\n\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n\r\n        listeners.forEach(function (data) {\r\n            trigger(node, data);\r\n        });\r\n\r\n        removeNodeData(node);\r\n    }\r\n\r\n    /**\r\n     * Removes all non-element nodes from provided array\r\n     * and appends to it descendant elements.\r\n     *\r\n     * @param {Array} nodes\r\n     * @returns {Array}\r\n     */\r\n    function formNodesList(nodes) {\r\n        var result = [],\r\n            children;\r\n\r\n        nodes = _.toArray(nodes).filter(isElementNode);\r\n\r\n        nodes.forEach(function (node) {\r\n            result.push(node);\r\n\r\n            children = extractChildren(node);\r\n            result   = result.concat(children);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Collects all removed and added nodes from\r\n     * mutation records into separate arrays\r\n     * while removing duplicates between both types of changes.\r\n     *\r\n     * @param {Array} mutations - An array of mutation records.\r\n     * @returns {Object} Object with 'removed' and 'added' nodes arrays.\r\n     */\r\n    function formChangesLists(mutations) {\r\n        var removed = [],\r\n            added = [];\r\n\r\n        mutations.forEach(function (record) {\r\n            removed = removed.concat(_.toArray(record.removedNodes));\r\n            added   = added.concat(_.toArray(record.addedNodes));\r\n        });\r\n\r\n        removed = removed.filter(function (node) {\r\n            var addIndex = added.indexOf(node),\r\n                wasAdded = !!~addIndex;\r\n\r\n            if (wasAdded) {\r\n                added.splice(addIndex, 1);\r\n            }\r\n\r\n            return !wasAdded;\r\n        });\r\n\r\n        return {\r\n            removed: formNodesList(removed),\r\n            added: formNodesList(added)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Verify if the DOM node is a child of a defined disabled node, if so we shouldn't observe provided mutation.\r\n     *\r\n     * @param {Object} mutation - a single mutation\r\n     * @returns {Boolean}\r\n     */\r\n    function shouldObserveMutation(mutation) {\r\n        var isDisabled;\r\n\r\n        if (disabledNodes.length > 0) {\r\n            // Iterate through the disabled nodes and determine if this mutation is occurring inside one of them\r\n            isDisabled = _.find(disabledNodes, function (node) {\r\n                return node === mutation.target || $.contains(node, mutation.target);\r\n            });\r\n\r\n            // If we find a matching node we should not observe the mutation\r\n            return !isDisabled;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should we observe these mutations? Check the first and last mutation to determine if this is a disabled mutation,\r\n     * we check both the first and last in case one has been removed from the DOM during the process of the mutation.\r\n     *\r\n     * @param {Array} mutations - An array of mutation records.\r\n     * @returns {Boolean}\r\n     */\r\n    function shouldObserveMutations(mutations) {\r\n        var firstMutation,\r\n            lastMutation;\r\n\r\n        if (mutations.length > 0) {\r\n            firstMutation = mutations[0];\r\n            lastMutation = mutations[mutations.length - 1];\r\n\r\n            return shouldObserveMutation(firstMutation) && shouldObserveMutation(lastMutation);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    globalObserver = new MutationObserver(function (mutations) {\r\n        var changes;\r\n\r\n        if (shouldObserveMutations(mutations)) {\r\n            changes = formChangesLists(mutations);\r\n\r\n            changes.removed.forEach(processRemoved);\r\n            changes.added.forEach(processAdded);\r\n        }\r\n    });\r\n\r\n    globalObserver.observe(document.body, {\r\n        subtree: true,\r\n        childList: true\r\n    });\r\n\r\n    return {\r\n        /**\r\n         * Disable a node from being observed by the mutations, you may want to disable specific aspects of the\r\n         * application which are heavy on DOM changes. The observer running on some actions could cause significant\r\n         * delays and degrade the performance of that specific part of the application exponentially.\r\n         *\r\n         * @param {HTMLElement} node - a HTML node within the document\r\n         */\r\n        disableNode: function (node) {\r\n            disabledNodes.push(node);\r\n        },\r\n\r\n        /**\r\n         * Adds listener for the appearance of nodes that matches provided\r\n         * selector and which are inside of the provided context. Callback will be\r\n         * also invoked on elements which a currently present.\r\n         *\r\n         * @param {String} selector - CSS selector.\r\n         * @param {Function} callback - Function that will invoked when node appears.\r\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\r\n         */\r\n        get: function (selector, callback, ctx) {\r\n            var data,\r\n                nodes;\r\n\r\n            data = {\r\n                ctx: ctx || document.body,\r\n                type: 'add',\r\n                callback: callback,\r\n                invoked: []\r\n            };\r\n\r\n            nodes = $(selector, data.ctx).toArray();\r\n\r\n            nodes.forEach(function (node) {\r\n                trigger(node, data);\r\n            });\r\n\r\n            addSelectorListener(selector, data);\r\n        },\r\n\r\n        /**\r\n         * Adds listener for the nodes removal.\r\n         *\r\n         * @param {(jQueryObject|HTMLElement|Array|String)} selector\r\n         * @param {Function} callback - Function that will invoked when node is removed.\r\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\r\n         */\r\n        remove: function (selector, callback, ctx) {\r\n            var nodes = [],\r\n                data;\r\n\r\n            data = {\r\n                ctx: ctx || document.body,\r\n                type: 'remove',\r\n                callback: callback,\r\n                invoked: []\r\n            };\r\n\r\n            if (typeof selector === 'object') {\r\n                nodes = !_.isUndefined(selector.length) ?\r\n                    _.toArray(selector) :\r\n                    [selector];\r\n            } else if (_.isString(selector)) {\r\n                nodes = $(selector, ctx).toArray();\r\n\r\n                addSelectorListener(selector, data);\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                addRemovalListener(node, data);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Removes listeners.\r\n         *\r\n         * @param {String} selector\r\n         * @param {Function} [fn]\r\n         */\r\n        off: function (selector, fn) {\r\n            var selectors = watchers.selectors,\r\n                listeners = selectors[selector];\r\n\r\n            if (selector && !fn) {\r\n                delete selectors[selector];\r\n            } else if (listeners && fn) {\r\n                selectors[selector] = listeners.filter(function (data) {\r\n                    return data.callback !== fn;\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/view/utils/raf.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global WeakMap */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    var processMap = new WeakMap(),\r\n        origRaf,\r\n        raf;\r\n\r\n    origRaf = window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.onRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame ||\r\n        function (callback) {\r\n            if (typeof callback != 'function') {\r\n                throw new Error('raf argument \"callback\" must be of type function');\r\n            }\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n\r\n    /**\r\n     * Creates new process object or extracts the\r\n     * the existing one.\r\n     *\r\n     * @param {*} id - Process identifier.\r\n     * @param {Number} fps - Required FPS count.\r\n     * @returns {Object}\r\n     */\r\n    function getProcess(id, fps) {\r\n        var process = processMap.get(id);\r\n\r\n        if (!process) {\r\n            process = {};\r\n            processMap.set(id, process);\r\n        }\r\n\r\n        if (process.fps !== fps) {\r\n            process.fps        = fps;\r\n            process.interval   = 1000 / fps;\r\n            process.update     = Date.now();\r\n        }\r\n\r\n        return process;\r\n    }\r\n\r\n    /**\r\n     * Proxy method which delegates call to the 'requestAnimationFrame'\r\n     * function and optionally can keep track of the FPS with which\r\n     * provided function is called.\r\n     *\r\n     * @param {Function} callback - Callback function to be passed to 'requestAnimationFrame'.\r\n     * @param {Number} [fps] - If specified, will update FPS counter for the provided function.\r\n     * @returns {Number|Boolean} ID of request or a flag which indicates\r\n     *      whether callback fits specified FPS.\r\n     */\r\n    raf = function (callback, fps) {\r\n        var rafId = origRaf(callback);\r\n\r\n        return fps ? raf.tick(callback, fps) : rafId;\r\n    };\r\n\r\n    /**\r\n     * Updates FPS counter for the specified process\r\n     * and returns a flag which indicates whether\r\n     * counter value is equal or greater than the required FPS.\r\n     *\r\n     * @param {*} id - Process identifier.\r\n     * @param {Number} fps - Required FPS count.\r\n     * @returns {Boolean}\r\n     */\r\n    raf.tick = function (id, fps) {\r\n        var process  = getProcess(id, fps),\r\n            now      = Date.now(),\r\n            delta    = now - process.update,\r\n            interval = process.interval;\r\n\r\n        if (fps >= 60 || delta >= interval) {\r\n            process.update = now - delta % interval;\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    return raf;\r\n});\r\n","Magento_Ui/js/modal/alert.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'mage/translate'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.alert', $.mage.confirm, {\r\n        options: {\r\n            modalClass: 'confirm',\r\n            title: $.mage.__('Attention'),\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal(true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Close modal window.\r\n         */\r\n        closeModal: function () {\r\n            this.options.actions.always();\r\n            this.element.bind('alertclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).alert(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/confirm.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/translate',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($, _, $t) {\r\n    'use strict';\r\n\r\n    $.widget('mage.confirm', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'confirm',\r\n            title: '',\r\n            focus: '.action-accept',\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {},\r\n\r\n                /**\r\n                 * Callback confirm.\r\n                 */\r\n                confirm: function () {},\r\n\r\n                /**\r\n                 * Callback cancel.\r\n                 */\r\n                cancel: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $t('Cancel'),\r\n                class: 'action-secondary action-dismiss',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event);\r\n                }\r\n            }, {\r\n                text: $t('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event, true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Create widget.\r\n         */\r\n        _create: function () {\r\n            this._super();\r\n            this.modal.find(this.options.modalCloseBtn).off().on('click', _.bind(this.closeModal, this));\r\n            this.openModal();\r\n        },\r\n\r\n        /**\r\n         * Remove modal window.\r\n         */\r\n        _remove: function () {\r\n            this.modal.remove();\r\n        },\r\n\r\n        /**\r\n         * Open modal window.\r\n         */\r\n        openModal: function () {\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Close modal window.\r\n         */\r\n        closeModal: function (event, result) {\r\n            result = result || false;\r\n\r\n            if (result) {\r\n                this.options.actions.confirm(event);\r\n            } else {\r\n                this.options.actions.cancel(event);\r\n            }\r\n            this.options.actions.always(event);\r\n            this.element.bind('confirmclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).confirm(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/modal-component.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiCollection',\r\n    'uiRegistry',\r\n    'underscore',\r\n    './modal'\r\n], function ($, Collection, registry, _) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/modal/modal-component',\r\n            title: '',\r\n            subTitle: '',\r\n            options: {\r\n                modalClass: '',\r\n                title: '',\r\n                subTitle: '',\r\n                buttons: [],\r\n                keyEventHandlers: {}\r\n            },\r\n            valid: true,\r\n            links: {\r\n                title: 'options.title',\r\n                subTitle: 'options.subTitle'\r\n            },\r\n            listens: {\r\n                state: 'onState',\r\n                title: 'setTitle',\r\n                'options.subTitle': 'setSubTitle'\r\n            },\r\n            modalClass: 'modal-component',\r\n            onCancel: 'closeModal'\r\n        },\r\n\r\n        /**\r\n         * Initializes component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            _.bindAll(this,\r\n                'initModal',\r\n                'openModal',\r\n                'closeModal',\r\n                'toggleModal',\r\n                'setPrevValues',\r\n                'validate');\r\n            this.initializeContent();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes modal configuration\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            return this._super()\r\n                .initSelector()\r\n                .initModalEvents();\r\n        },\r\n\r\n        /**\r\n         * Configure modal selector\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initSelector: function () {\r\n            var modalClass = this.name.replace(/\\./g, '_');\r\n\r\n            this.contentSelector = '.' + this.modalClass;\r\n            this.options.modalClass = this.options.modalClass + ' ' + modalClass;\r\n            this.rootSelector = '.' + modalClass;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Configure modal keyboard handlers\r\n         * and outer click\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initModalEvents: function () {\r\n            this.options.keyEventHandlers.escapeKey = this.options.outerClickHandler = this[this.onCancel].bind(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize modal's content components\r\n         */\r\n        initializeContent: function () {\r\n            $.async({\r\n                component: this.name\r\n            }, this.initModal);\r\n        },\r\n\r\n        /**\r\n         * Init toolbar section so other components will be able to place something in it\r\n         */\r\n        initToolbarSection: function () {\r\n            this.set('toolbarSection', this.modal.data('mage-modal').modal.find('header').get(0));\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.observe(['state', 'focused']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Wrap content in a modal of certain type\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initModal: function (element) {\r\n            if (!this.modal) {\r\n                this.overrideModalButtonCallback();\r\n                this.options.modalCloseBtnHandler = this[this.onCancel].bind(this);\r\n                this.modal = $(element).modal(this.options);\r\n                this.initToolbarSection();\r\n\r\n                if (this.waitCbk) {\r\n                    this.waitCbk();\r\n                    this.waitCbk = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Open modal\r\n         */\r\n        openModal: function () {\r\n            if (this.modal) {\r\n                this.state(true);\r\n            } else {\r\n                this.waitCbk = this.openModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal\r\n         */\r\n        closeModal: function () {\r\n            if (this.modal) {\r\n                this.state(false);\r\n            } else {\r\n                this.waitCbk = this.closeModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle modal\r\n         */\r\n        toggleModal: function () {\r\n            if (this.modal) {\r\n                this.state(!this.state());\r\n            } else {\r\n                this.waitCbk = this.toggleModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets title for modal\r\n         *\r\n         * @param {String} title\r\n         */\r\n        setTitle: function (title) {\r\n            if (this.title !== title) {\r\n                this.title = title;\r\n            }\r\n\r\n            if (this.modal) {\r\n                this.modal.modal('setTitle', title);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets subTitle for modal\r\n         *\r\n         * @param {String} subTitle\r\n         */\r\n        setSubTitle: function (subTitle) {\r\n            if (this.subTitle !== subTitle) {\r\n                this.subTitle = subTitle;\r\n            }\r\n\r\n            if (this.modal) {\r\n                this.modal.modal('setSubTitle', subTitle);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrap content in a modal of certain type\r\n         *\r\n         * @param {Boolean} state\r\n         */\r\n        onState: function (state) {\r\n            if (state) {\r\n                this.modal.modal('openModal');\r\n                this.applyData();\r\n            } else {\r\n                this.modal.modal('closeModal');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate everything validatable in modal\r\n         */\r\n        validate: function (elem) {\r\n            if (typeof elem === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            if (typeof elem.validate === 'function') {\r\n                this.valid = this.valid & elem.validate().valid;\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.validate, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset data from provider\r\n         */\r\n        resetData: function () {\r\n            this.elems().forEach(this.resetValue, this);\r\n        },\r\n\r\n        /**\r\n         * Update 'applied' property with data from modal content\r\n         */\r\n        applyData: function () {\r\n            var applied = {};\r\n\r\n            this.elems().forEach(this.gatherValues.bind(this, applied), this);\r\n            this.applied = applied;\r\n        },\r\n\r\n        /**\r\n         * Gather values from modal content\r\n         *\r\n         * @param {Array} applied\r\n         * @param {HTMLElement} elem\r\n         */\r\n        gatherValues: function (applied, elem) {\r\n            if (typeof elem.value === 'function') {\r\n                applied[elem.name] = elem.value();\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.gatherValues.bind(this, applied), this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set to previous values from modal content\r\n         *\r\n         * @param {HTMLElement} elem\r\n         */\r\n        setPrevValues: function (elem) {\r\n            if (typeof elem.value === 'function') {\r\n                this.modal.focus();\r\n                elem.value(this.applied[elem.name]);\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.setPrevValues, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Triggers some method in every modal child elem, if this method is defined\r\n         *\r\n         * @param {Object} action - action configuration,\r\n         * must contain actionName and targetName and\r\n         * can contain params\r\n         */\r\n        triggerAction: function (action) {\r\n            var targetName = action.targetName,\r\n                params = action.params || [],\r\n                actionName = action.actionName,\r\n                target;\r\n\r\n            target = registry.async(targetName);\r\n\r\n            if (target && typeof target === 'function' && actionName) {\r\n                params.unshift(actionName);\r\n                target.apply(target, params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Override modal buttons callback placeholders with real callbacks\r\n         */\r\n        overrideModalButtonCallback: function () {\r\n            var buttons = this.options.buttons;\r\n\r\n            if (buttons && buttons.length) {\r\n                buttons.forEach(function (button) {\r\n                    button.click = this.getButtonClickHandler(button.actions);\r\n                }, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generate button click handler based on button's 'actions' configuration\r\n         */\r\n        getButtonClickHandler: function (actionsConfig) {\r\n            var actions = actionsConfig.map(\r\n                function (actionConfig) {\r\n                    if (_.isObject(actionConfig)) {\r\n                        return this.triggerAction.bind(this, actionConfig);\r\n                    }\r\n\r\n                    return this[actionConfig] ? this[actionConfig].bind(this) : function () {};\r\n                }, this);\r\n\r\n            return function () {\r\n                actions.forEach(\r\n                    function (action) {\r\n                        action();\r\n                    }\r\n                );\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Cancels changes in modal:\r\n         * returning elems values to the previous state,\r\n         * and close modal\r\n         */\r\n        actionCancel: function () {\r\n            this.elems().forEach(this.setPrevValues, this);\r\n            this.closeModal();\r\n        },\r\n\r\n        /**\r\n         * Accept changes in modal by not preventing them.\r\n         * Can be extended by exporting 'gatherValues' result somewhere\r\n         */\r\n        actionDone: function () {\r\n            this.valid = true;\r\n            this.elems().forEach(this.validate, this);\r\n\r\n            if (this.valid) {\r\n                this.closeModal();\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/modal/modal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/modal/modal-popup.html',\r\n    'text!ui/template/modal/modal-slide.html',\r\n    'text!ui/template/modal/modal-custom.html',\r\n    'Magento_Ui/js/lib/key-codes',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/core',\r\n    'mage/translate'\r\n], function ($, _, template, popupTpl, slideTpl, customTpl, keyCodes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Detect browser transition end event.\r\n     * @return {String|undefined} - transition event.\r\n     */\r\n    var transitionEvent =  (function () {\r\n        var transition,\r\n            elementStyle = document.createElement('div').style,\r\n            transitions = {\r\n                'transition': 'transitionend',\r\n                'OTransition': 'oTransitionEnd',\r\n                'MozTransition': 'transitionend',\r\n                'WebkitTransition': 'webkitTransitionEnd'\r\n            };\r\n\r\n        for (transition in transitions) {\r\n            if (elementStyle[transition] !== undefined && transitions.hasOwnProperty(transition)) {\r\n                return transitions[transition];\r\n            }\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Modal Window Widget\r\n     */\r\n    $.widget('mage.modal', {\r\n        options: {\r\n            id: null,\r\n            type: 'popup',\r\n            title: '',\r\n            subTitle: '',\r\n            modalClass: '',\r\n            focus: '[data-role=\"closeBtn\"]',\r\n            autoOpen: false,\r\n            clickableOverlay: true,\r\n            popupTpl: popupTpl,\r\n            slideTpl: slideTpl,\r\n            customTpl: customTpl,\r\n            modalVisibleClass: '_show',\r\n            parentModalClass: '_has-modal',\r\n            innerScrollClass: '_inner-scroll',\r\n            responsive: false,\r\n            innerScroll: false,\r\n            modalTitle: '[data-role=\"title\"]',\r\n            modalSubTitle: '[data-role=\"subTitle\"]',\r\n            modalBlock: '[data-role=\"modal\"]',\r\n            modalCloseBtn: '[data-role=\"closeBtn\"]',\r\n            modalContent: '[data-role=\"content\"]',\r\n            modalAction: '[data-role=\"action\"]',\r\n            focusableScope: '[data-role=\"focusable-scope\"]',\r\n            focusableStart: '[data-role=\"focusable-start\"]',\r\n            focusableEnd: '[data-role=\"focusable-end\"]',\r\n            appendTo: 'body',\r\n            wrapperClass: 'modals-wrapper',\r\n            overlayClass: 'modals-overlay',\r\n            responsiveClass: 'modal-slide',\r\n            trigger: '',\r\n            modalLeftMargin: 45,\r\n            closeText: $.mage.__('Close'),\r\n            buttons: [{\r\n                text: $.mage.__('Ok'),\r\n                class: '',\r\n                attr: {},\r\n\r\n                /**\r\n                 * Default action on button click\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event);\r\n                }\r\n            }],\r\n            keyEventHandlers: {\r\n\r\n                /**\r\n                 * Tab key press handler,\r\n                 * set focus to elements\r\n                 */\r\n                tabKey: function () {\r\n                    if (document.activeElement === this.modal[0]) {\r\n                        this._setFocus('start');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Escape key press handler,\r\n                 * close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                escapeKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal(event);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates modal widget.\r\n         */\r\n        _create: function () {\r\n            _.bindAll(\r\n                this,\r\n                'keyEventSwitcher',\r\n                '_tabSwitcher',\r\n                'closeModal'\r\n            );\r\n\r\n            this.options.id = this.uuid;\r\n            this.options.transitionEvent = transitionEvent;\r\n            this._createWrapper();\r\n            this._renderModal();\r\n            this._createButtons();\r\n\r\n            if (this.options.trigger) {\r\n                $(document).on('click', this.options.trigger, _.bind(this.toggleModal, this));\r\n            }\r\n            this._on(this.modal.find(this.options.modalCloseBtn), {\r\n                'click': this.options.modalCloseBtnHandler ? this.options.modalCloseBtnHandler : this.closeModal\r\n            });\r\n            this._on(this.element, {\r\n                'openModal': this.openModal,\r\n                'closeModal': this.closeModal\r\n            });\r\n            this.options.autoOpen ? this.openModal() : false;\r\n        },\r\n\r\n        /**\r\n         * Returns element from modal node.\r\n         * @return {Object} - element.\r\n         */\r\n        _getElem: function (elem) {\r\n            return this.modal.find(elem);\r\n        },\r\n\r\n        /**\r\n         * Gets visible modal count.\r\n         * * @return {Number} - visible modal count.\r\n         */\r\n        _getVisibleCount: function () {\r\n            var modals = this.modalWrapper.find(this.options.modalBlock);\r\n\r\n            return modals.filter('.' + this.options.modalVisibleClass).length;\r\n        },\r\n\r\n        /**\r\n         * Gets count of visible modal by slide type.\r\n         * * @return {Number} - visible modal count.\r\n         */\r\n        _getVisibleSlideCount: function () {\r\n            var elems = this.modalWrapper.find('[data-type=\"slide\"]');\r\n\r\n            return elems.filter('.' + this.options.modalVisibleClass).length;\r\n        },\r\n\r\n        /**\r\n         * Listener key events.\r\n         * Call handler function if it exists\r\n         */\r\n        keyEventSwitcher: function (event) {\r\n            var key = keyCodes[event.keyCode];\r\n\r\n            if (this.options.keyEventHandlers.hasOwnProperty(key)) {\r\n                this.options.keyEventHandlers[key].apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set title for modal.\r\n         *\r\n         * @param {String} title\r\n         */\r\n        setTitle: function (title) {\r\n            var $title = this.modal.find(this.options.modalTitle),\r\n                $subTitle = this.modal.find(this.options.modalSubTitle);\r\n\r\n            $title.text(title);\r\n            $title.append($subTitle);\r\n        },\r\n\r\n        /**\r\n         * Set sub title for modal.\r\n         *\r\n         * @param {String} subTitle\r\n         */\r\n        setSubTitle: function (subTitle) {\r\n            this.options.subTitle = subTitle;\r\n            this.modal.find(this.options.modalSubTitle).html(subTitle);\r\n        },\r\n\r\n        /**\r\n         * Toggle modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        toggleModal: function () {\r\n            if (this.options.isOpen === true) {\r\n                this.closeModal();\r\n            } else {\r\n                this.openModal();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        openModal: function () {\r\n            this.options.isOpen = true;\r\n            this.focussedElement = document.activeElement;\r\n            this._createOverlay();\r\n            this._setActive();\r\n            this._setKeyListener();\r\n            this.modal.one(this.options.transitionEvent, _.bind(this._setFocus, this, 'end', 'opened'));\r\n            this.modal.one(this.options.transitionEvent, _.bind(this._trigger, this, 'opened'));\r\n            this.modal.addClass(this.options.modalVisibleClass);\r\n\r\n            if (!this.options.transitionEvent) {\r\n                this._trigger('opened');\r\n            }\r\n\r\n            return this.element;\r\n        },\r\n\r\n        /**\r\n         * Set focus to element.\r\n         * @param {String} position - can be \"start\" and \"end\"\r\n         *      positions.\r\n         *      If position is \"end\" - sets focus to first\r\n         *      focusable element in modal window scope.\r\n         *      If position is \"start\" - sets focus to last\r\n         *      focusable element in modal window scope\r\n         *\r\n         *  @param {String} type - can be \"opened\" or false\r\n         *      If type is \"opened\" - looks to \"this.options.focus\"\r\n         *      property and sets focus\r\n         */\r\n        _setFocus: function (position, type) {\r\n            var focusableElements,\r\n                infelicity;\r\n\r\n            if (type === 'opened' && this.options.focus) {\r\n                this.modal.find($(this.options.focus)).focus();\r\n            } else if (type === 'opened' && !this.options.focus) {\r\n                this.modal.find(this.options.focusableScope).focus();\r\n            } else if (position === 'end') {\r\n                this.modal.find(this.options.modalCloseBtn).focus();\r\n            } else if (position === 'start') {\r\n                infelicity = 2; //Constant for find last focusable element\r\n                focusableElements = this.modal.find(':focusable');\r\n                focusableElements.eq(focusableElements.length - infelicity).focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set events listener when modal is opened.\r\n         */\r\n        _setKeyListener: function () {\r\n            this.modal.find(this.options.focusableStart).bind('focusin', this._tabSwitcher);\r\n            this.modal.find(this.options.focusableEnd).bind('focusin', this._tabSwitcher);\r\n            this.modal.bind('keydown', this.keyEventSwitcher);\r\n        },\r\n\r\n        /**\r\n         * Remove events listener when modal is closed.\r\n         */\r\n        _removeKeyListener: function () {\r\n            this.modal.find(this.options.focusableStart).unbind('focusin', this._tabSwitcher);\r\n            this.modal.find(this.options.focusableEnd).unbind('focusin', this._tabSwitcher);\r\n            this.modal.unbind('keydown', this.keyEventSwitcher);\r\n        },\r\n\r\n        /**\r\n         * Switcher for focus event.\r\n         * @param {Object} e - event\r\n         */\r\n        _tabSwitcher: function (e) {\r\n            var target = $(e.target);\r\n\r\n            if (target.is(this.options.focusableStart)) {\r\n                this._setFocus('start');\r\n            } else if (target.is(this.options.focusableEnd)) {\r\n                this._setFocus('end');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        closeModal: function () {\r\n            var that = this;\r\n\r\n            this._removeKeyListener();\r\n            this.options.isOpen = false;\r\n            this.modal.one(this.options.transitionEvent, function () {\r\n                that._close();\r\n            });\r\n            this.modal.removeClass(this.options.modalVisibleClass);\r\n\r\n            if (!this.options.transitionEvent) {\r\n                that._close();\r\n            }\r\n\r\n            return this.element;\r\n        },\r\n\r\n        /**\r\n         * Helper for closeModal function.\r\n         */\r\n        _close: function () {\r\n            var trigger = _.bind(this._trigger, this, 'closed', this.modal);\r\n\r\n            $(this.focussedElement).focus();\r\n            this._destroyOverlay();\r\n            this._unsetActive();\r\n            _.defer(trigger, this);\r\n        },\r\n\r\n        /**\r\n         * Set z-index and margin for modal and overlay.\r\n         */\r\n        _setActive: function () {\r\n            var zIndex = this.modal.zIndex(),\r\n                baseIndex = zIndex + this._getVisibleCount();\r\n\r\n            if (this.modal.data('active')) {\r\n                return;\r\n            }\r\n\r\n            this.modal.data('active', true);\r\n\r\n            this.overlay.zIndex(++baseIndex);\r\n            this.prevOverlayIndex = this.overlay.zIndex();\r\n            this.modal.zIndex(this.overlay.zIndex() + 1);\r\n\r\n            if (this._getVisibleSlideCount()) {\r\n                this.modal.css('marginLeft', this.options.modalLeftMargin * this._getVisibleSlideCount());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Unset styles for modal and set z-index for previous modal.\r\n         */\r\n        _unsetActive: function () {\r\n            this.modal.removeAttr('style');\r\n            this.modal.data('active', false);\r\n\r\n            if (this.overlay) {\r\n                this.overlay.zIndex(this.prevOverlayIndex - 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates wrapper to hold all modals.\r\n         */\r\n        _createWrapper: function () {\r\n            this.modalWrapper = $(this.options.appendTo).find('.' + this.options.wrapperClass);\r\n\r\n            if (!this.modalWrapper.length) {\r\n                this.modalWrapper = $('<div></div>')\r\n                    .addClass(this.options.wrapperClass)\r\n                    .appendTo(this.options.appendTo);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Compile template and append to wrapper.\r\n         */\r\n        _renderModal: function () {\r\n            $(template(\r\n                this.options[this.options.type + 'Tpl'],\r\n                {\r\n                    data: this.options\r\n                })).appendTo(this.modalWrapper);\r\n            this.modal = this.modalWrapper.find(this.options.modalBlock).last();\r\n            this.element.appendTo(this._getElem(this.options.modalContent));\r\n\r\n            if (this.element.is(':hidden')) {\r\n                this.element.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates buttons pane.\r\n         */\r\n        _createButtons: function () {\r\n            this.buttons = this._getElem(this.options.modalAction);\r\n            _.each(this.options.buttons, function (btn, key) {\r\n                var button = this.buttons[key];\r\n\r\n                if (btn.attr) {\r\n                    $(button).attr(btn.attr);\r\n                }\r\n\r\n                if (btn.class) {\r\n                    $(button).addClass(btn.class);\r\n                }\r\n\r\n                if (!btn.click) {\r\n                    btn.click = this.closeModal;\r\n                }\r\n                $(button).on('click', _.bind(btn.click, this));\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Creates overlay, append it to wrapper, set previous click event on overlay.\r\n         */\r\n        _createOverlay: function () {\r\n            var events,\r\n                outerClickHandler = this.options.outerClickHandler || this.closeModal;\r\n\r\n            this.overlay = $('.' + this.options.overlayClass);\r\n\r\n            if (!this.overlay.length) {\r\n                $(this.options.appendTo).addClass(this.options.parentModalClass);\r\n                this.overlay = $('<div></div>')\r\n                    .addClass(this.options.overlayClass)\r\n                    .appendTo(this.modalWrapper);\r\n            }\r\n            events = $._data(this.overlay.get(0), 'events');\r\n            events ? this.prevOverlayHandler = events.click[0].handler : false;\r\n            this.options.clickableOverlay ? this.overlay.unbind().on('click', outerClickHandler) : false;\r\n        },\r\n\r\n        /**\r\n         * Destroy overlay.\r\n         */\r\n        _destroyOverlay: function () {\r\n            if (this._getVisibleCount()) {\r\n                this.overlay.unbind().on('click', this.prevOverlayHandler);\r\n            } else {\r\n                $(this.options.appendTo).removeClass(this.options.parentModalClass);\r\n                this.overlay.remove();\r\n                this.overlay = null;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.modal;\r\n});\r\n","Magento_Ui/js/modal/modalToggle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, el) {\r\n        var widget,\r\n            content;\r\n\r\n        if (config.contentSelector) {\r\n            content = $(config.contentSelector);\r\n        } else if (config.content) {\r\n            content = $('<div />').html(config.content);\r\n        } else {\r\n            content = $('<div />');\r\n        }\r\n\r\n        widget = content.modal(config);\r\n\r\n        $(el).on(config.toggleEvent, function () {\r\n            var state = widget.data('mage-modal').options.isOpen;\r\n\r\n            if (state) {\r\n                widget.modal('closeModal');\r\n            } else {\r\n                widget.modal('openModal');\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return widget;\r\n    };\r\n});\r\n","Magento_Ui/js/modal/prompt.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/modal/modal-prompt-content.html',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function ($, _, template, promptContentTmpl) {\r\n    'use strict';\r\n\r\n    $.widget('mage.prompt', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'prompt',\r\n            promptContentTmpl: promptContentTmpl,\r\n            promptField: '[data-role=\"promptField\"]',\r\n            attributesForm: {},\r\n            attributesField: {},\r\n            value: '',\r\n            validation: false,\r\n            validationRules: [],\r\n            keyEventHandlers: {\r\n\r\n                /**\r\n                 * Enter key press handler,\r\n                 * submit result and close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                enterKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal(true);\r\n                        event.preventDefault();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Tab key press handler,\r\n                 * set focus to elements\r\n                 */\r\n                tabKey: function () {\r\n                    if (document.activeElement === this.modal[0]) {\r\n                        this._setFocus('start');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Escape key press handler,\r\n                 * cancel and close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                escapeKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal();\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            },\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {},\r\n\r\n                /**\r\n                 * Callback confirm.\r\n                 */\r\n                confirm: function () {},\r\n\r\n                /**\r\n                 * Callback cancel.\r\n                 */\r\n                cancel: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('Cancel'),\r\n                class: 'action-secondary action-dismiss',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal();\r\n                }\r\n            }, {\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal(true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Create widget.\r\n         */\r\n        _create: function () {\r\n            this.options.focus = this.options.promptField;\r\n            this.options.validation = this.options.validation && this.options.validationRules.length;\r\n            this.options.outerClickHandler = this.options.outerClickHandler || _.bind(this.closeModal, this, false);\r\n            this._super();\r\n            this.modal.find(this.options.modalContent).append(this.getFormTemplate());\r\n            this.modal.find(this.options.modalCloseBtn).off().on('click',  _.bind(this.closeModal, this, false));\r\n\r\n            if (this.options.validation) {\r\n                this.setValidationClasses();\r\n            }\r\n\r\n            this.openModal();\r\n        },\r\n\r\n        /**\r\n         * Form template getter.\r\n         *\r\n         * @returns {Object} Form template.\r\n         */\r\n        getFormTemplate: function () {\r\n            var formTemplate,\r\n                formAttr = '',\r\n                inputAttr = '',\r\n                attributeName;\r\n\r\n            for (attributeName in this.options.attributesForm) {\r\n                if (this.options.attributesForm.hasOwnProperty(attributeName)) {\r\n                    formAttr = formAttr + ' ' + attributeName + '=\"' +\r\n                        this.options.attributesForm[attributeName] + '\"';\r\n                }\r\n            }\r\n\r\n            for (attributeName in this.options.attributesField) {\r\n                if (this.options.attributesField.hasOwnProperty(attributeName)) {\r\n                    inputAttr = inputAttr + ' ' + attributeName + '=\"' +\r\n                        this.options.attributesField[attributeName] + '\"';\r\n                }\r\n            }\r\n\r\n            formTemplate = $(template(this.options.promptContentTmpl, {\r\n                data: this.options,\r\n                formAttr: formAttr,\r\n                inputAttr: inputAttr\r\n            }));\r\n\r\n            return formTemplate;\r\n        },\r\n\r\n        /**\r\n         * Remove widget\r\n         */\r\n        _remove: function () {\r\n            this.modal.remove();\r\n        },\r\n\r\n        /**\r\n         * Validate prompt field\r\n         */\r\n        validate: function () {\r\n            return $.validator.validateSingleElement(this.options.promptField);\r\n        },\r\n\r\n        /**\r\n         * Add validation classes to prompt field\r\n         */\r\n        setValidationClasses: function () {\r\n            this.modal.find(this.options.promptField).attr('class', $.proxy(function (i, val) {\r\n                return val + ' ' + this.options.validationRules.join(' ');\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Open modal window\r\n         */\r\n        openModal: function () {\r\n            this._super();\r\n            this.modal.find(this.options.promptField).val(this.options.value);\r\n        },\r\n\r\n        /**\r\n         * Close modal window\r\n         */\r\n        closeModal: function (result) {\r\n            var value;\r\n\r\n            if (result) {\r\n                if (this.options.validation && !this.validate()) {\r\n                    return false;\r\n                }\r\n\r\n                value = this.modal.find(this.options.promptField).val();\r\n                this.options.actions.confirm.call(this, value);\r\n            } else {\r\n                this.options.actions.cancel.call(this, result);\r\n            }\r\n\r\n            this.options.actions.always();\r\n            this.element.bind('promptclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div class=\"prompt-message\"></div>').html(config.content).prompt(config);\r\n    };\r\n});\r\n","Magento_Ui/js/timeline/timeline-view.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'Magento_Ui/js/lib/view/utils/raf',\r\n    'uiRegistry',\r\n    'uiClass'\r\n], function (ko, $, _, raf, registry, Class) {\r\n    'use strict';\r\n\r\n    var hasClassList = (function () {\r\n        var list = document.createElement('_').classList;\r\n\r\n        return !!list && !list.toggle('_test', false);\r\n    })();\r\n\r\n    /**\r\n     * Polyfill of the 'classList.toggle' method.\r\n     *\r\n     * @param {HTMLElement} elem\r\n     */\r\n    function toggleClass(elem) {\r\n        var classList   = elem.classList,\r\n            args        = Array.prototype.slice.call(arguments, 1),\r\n            $elem;\r\n\r\n        if (hasClassList) {\r\n            classList.toggle.apply(classList, args);\r\n        } else {\r\n            $elem = $(elem);\r\n            $elem.toggleClass.apply($elem, args);\r\n        }\r\n    }\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            selectors: {\r\n                content: '.timeline-content',\r\n                timeUnit: '.timeline-unit',\r\n                item: '.timeline-item:not([data-role=no-data-msg])',\r\n                event: '.timeline-event'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes TimelineView component.\r\n         *\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(\r\n                this,\r\n                'refresh',\r\n                'initContent',\r\n                'initItem',\r\n                'initTimeUnit',\r\n                'getItemBindings',\r\n                'updateItemsPosition',\r\n                'onScaleChange',\r\n                'onEventElementRender',\r\n                'onWindowResize',\r\n                'onContentScroll',\r\n                'onDataReloaded',\r\n                'onToStartClick',\r\n                'onToEndClick'\r\n            );\r\n\r\n            this._super()\r\n                .initModel()\r\n                .waitContent();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies listeners for the model properties changes.\r\n         *\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initModel: function () {\r\n            var model = registry.get(this.model);\r\n\r\n            model.on('scale', this.onScaleChange);\r\n            model.source.on('reloaded', this.onDataReloaded);\r\n\r\n            this.model = model;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies DOM watcher for the\r\n         * content element rendering.\r\n         *\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        waitContent: function () {\r\n            $.async({\r\n                selector: this.selectors.content,\r\n                component: this.model\r\n            }, this.initContent);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes timelines' content element.\r\n         *\r\n         * @param {HTMLElement} content\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initContent: function (content) {\r\n            this.$content = content;\r\n\r\n            $(content).on('scroll', this.onContentScroll);\r\n            $(window).on('resize', this.onWindowResize);\r\n\r\n            $.async(this.selectors.item, content, this.initItem);\r\n            $.async(this.selectors.event, content, this.onEventElementRender);\r\n            $.async(this.selectors.timeUnit, content, this.initTimeUnit);\r\n\r\n            this.refresh();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes timeline item element,\r\n         * e.g. establishes event listeners and applies data bindings.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initItem: function (elem) {\r\n            $(elem)\r\n                .bindings(this.getItemBindings)\r\n                .on('click', '._toend', this.onToEndClick)\r\n                .on('click', '._tostart', this.onToStartClick);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes timeline unit element.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initTimeUnit: function (elem) {\r\n            $(elem).bindings(this.getTimeUnitBindings());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates items positions in a\r\n         * loop if state of a view has changed.\r\n         */\r\n        refresh: function () {\r\n            raf(this.refresh);\r\n\r\n            if (this._update) {\r\n                this._update = false;\r\n\r\n                this.updateItemsPosition();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns object width additional bindings\r\n         * for a timeline unit element.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getTimeUnitBindings: function () {\r\n            return {\r\n                style: {\r\n                    width: ko.computed(function () {\r\n                        return this.getTimeUnitWidth() + '%';\r\n                    }.bind(this))\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns object with additional\r\n         * bindings for a timeline item element.\r\n         *\r\n         * @param {Object} ctx\r\n         * @returns {Object}\r\n         */\r\n        getItemBindings: function (ctx) {\r\n            return {\r\n                style: {\r\n                    width: ko.computed(function () {\r\n                        return this.getItemWidth(ctx.$row()) + '%';\r\n                    }.bind(this)),\r\n\r\n                    'margin-left': ko.computed(function () {\r\n                        return this.getItemMargin(ctx.$row()) + '%';\r\n                    }.bind(this))\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Calculates width in percents of a timeline unit element.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getTimeUnitWidth: function () {\r\n            return 100 / this.model.scale;\r\n        },\r\n\r\n        /**\r\n         * Calculates width of a record in percents.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {String}\r\n         */\r\n        getItemWidth: function (record) {\r\n            var days = 0;\r\n\r\n            if (record) {\r\n                days = this.model.getDaysLength(record);\r\n            }\r\n\r\n            return this.getTimeUnitWidth()  * days;\r\n        },\r\n\r\n        /**\r\n         * Calculates left margin value for provided record.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {String}\r\n         */\r\n        getItemMargin: function (record) {\r\n            var offset = 0;\r\n\r\n            if (record) {\r\n                offset = this.model.getStartDelta(record);\r\n            }\r\n\r\n            return this.getTimeUnitWidth() * offset;\r\n        },\r\n\r\n        /**\r\n         * Returns collection of currently available\r\n         * timeline item elements.\r\n         *\r\n         * @returns {Array<HTMLElement>}\r\n         */\r\n        getItems: function () {\r\n            var items = this.$content.querySelectorAll(this.selectors.item);\r\n\r\n            return _.toArray(items);\r\n        },\r\n\r\n        /**\r\n         * Updates positions of timeline elements.\r\n         *\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        updateItemsPosition: function () {\r\n            this.getItems()\r\n                .forEach(this.updatePositionFor, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates position of provided timeline element.\r\n         *\r\n         * @param {HTMLElement} $elem\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        updatePositionFor: function ($elem) {\r\n            var $event      = $elem.querySelector(this.selectors.event),\r\n                leftEdge    = this.getLeftEdgeFor($elem),\r\n                rightEdge   = this.getRightEdgeFor($elem);\r\n\r\n            if ($event) {\r\n                $event.style.left = Math.max(-leftEdge, 0) + 'px';\r\n                $event.style.right = Math.max(rightEdge, 0) + 'px';\r\n            }\r\n\r\n            toggleClass($elem, '_scroll-start', leftEdge < 0);\r\n            toggleClass($elem, '_scroll-end', rightEdge > 0);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Scrolls content area to the start of provided element.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {TimelineView}\r\n         */\r\n        toStartOf: function (elem) {\r\n            var leftEdge = this.getLeftEdgeFor(elem);\r\n\r\n            this.$content.scrollLeft += leftEdge;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Scrolls content area to the end of provided element.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {TimelineView}\r\n         */\r\n        toEndOf: function (elem) {\r\n            var rightEdge = this.getRightEdgeFor(elem);\r\n\r\n            this.$content.scrollLeft += rightEdge + 1;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calculates location of the left edge of an element\r\n         * relative to the contents' left edge.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {Number}\r\n         */\r\n        getLeftEdgeFor: function (elem) {\r\n            var leftOffset = elem.getBoundingClientRect().left;\r\n\r\n            return leftOffset - this.$content.getBoundingClientRect().left;\r\n        },\r\n\r\n        /**\r\n         * Calculates location of the right edge of an element\r\n         * relative to the contents' right edge.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {Number}\r\n         */\r\n        getRightEdgeFor: function (elem) {\r\n            var elemWidth   = elem.offsetWidth,\r\n                leftEdge    = this.getLeftEdgeFor(elem);\r\n\r\n            return leftEdge + elemWidth - this.$content.offsetWidth;\r\n        },\r\n\r\n        /**\r\n         * 'To Start' button 'click' event handler.\r\n         *\r\n         * @param {jQueryEvent} event\r\n         */\r\n        onToStartClick: function (event) {\r\n            var elem = event.originalEvent.currentTarget;\r\n\r\n            event.stopPropagation();\r\n\r\n            this.toStartOf(elem);\r\n        },\r\n\r\n        /**\r\n         * 'To End' button 'click' event handler.\r\n         *\r\n         * @param {jQueryEvent} event\r\n         */\r\n        onToEndClick: function (event) {\r\n            var elem = event.originalEvent.currentTarget;\r\n\r\n            event.stopPropagation();\r\n\r\n            this.toEndOf(elem);\r\n        },\r\n\r\n        /**\r\n         * Handler of the scale value 'change' event.\r\n         */\r\n        onScaleChange: function () {\r\n            this._update = true;\r\n        },\r\n\r\n        /**\r\n         * Callback function which is invoked\r\n         * when event element was rendered.\r\n         */\r\n        onEventElementRender: function () {\r\n            this._update = true;\r\n        },\r\n\r\n        /**\r\n         * Window 'resize' event handler.\r\n         */\r\n        onWindowResize: function () {\r\n            this._update = true;\r\n        },\r\n\r\n        /**\r\n         * Content container 'scroll' event handler.\r\n         */\r\n        onContentScroll: function () {\r\n            this._update = true;\r\n        },\r\n\r\n        /**\r\n         * Data 'reload' event handler.\r\n         */\r\n        onDataReloaded: function () {\r\n            this._update = true;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/timeline/timeline.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'moment',\r\n    'uiLayout',\r\n    'Magento_Ui/js/grid/listing'\r\n], function (_, moment, layout, Listing) {\r\n    'use strict';\r\n\r\n    var ONE_DAY = 86400000;\r\n\r\n    return Listing.extend({\r\n        defaults: {\r\n            recordTmpl: 'ui/timeline/record',\r\n            dateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            headerFormat: 'ddd MM/DD',\r\n            detailsFormat: 'DD/MM/YYYY HH:mm:ss',\r\n            scale: 7,\r\n            scaleStep: 1,\r\n            minScale: 7,\r\n            maxScale: 28,\r\n            minDays: 28,\r\n            displayMode: 'timeline',\r\n            displayModes: {\r\n                timeline: {\r\n                    label: 'Timeline',\r\n                    value: 'timeline',\r\n                    template: 'ui/timeline/timeline'\r\n                }\r\n            },\r\n            viewConfig: {\r\n                component: 'Magento_Ui/js/timeline/timeline-view',\r\n                name: '${ $.name }_view',\r\n                model: '${ $.name }'\r\n            },\r\n            tracks: {\r\n                scale: true\r\n            },\r\n            statefull: {\r\n                scale: true\r\n            },\r\n            range: {}\r\n        },\r\n\r\n        /**\r\n         * Initializes Timeline component.\r\n         *\r\n         * @returns {Timeline} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initView()\r\n                .updateRange();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes components configuration.\r\n         *\r\n         * @returns {Timeline} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.maxScale = Math.min(this.minDays, this.maxScale);\r\n            this.minScale = Math.min(this.maxScale, this.minScale);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Timeline} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe.call(this.range, true, 'hasToday');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes TimelineView component.\r\n         *\r\n         * @returns {Timeline} Chainable.\r\n         */\r\n        initView: function () {\r\n            layout([this.viewConfig]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided event record is active,\r\n         * i.e. it has already started.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Boolean}\r\n         */\r\n        isActive: function (record) {\r\n            return Number(record.status) === 1;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided event record is upcoming,\r\n         * i.e. it will start later on.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Boolean}\r\n         */\r\n        isUpcoming: function (record) {\r\n            return Number(record.status) === 2;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided event record is permanent,\r\n         * i.e. it has no ending time.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Boolean}\r\n         */\r\n        isPermanent: function (record) {\r\n            return !this.getEndDate(record);\r\n        },\r\n\r\n        /**\r\n         * Checks if provided date indicates current day.\r\n         *\r\n         * @param {(Number|Moment)} date\r\n         * @returns {Boolenan}\r\n         */\r\n        isToday: function (date) {\r\n            return moment().isSame(date, 'day');\r\n        },\r\n\r\n        /**\r\n         * Checks if range object contains todays date.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasToday: function () {\r\n            return this.range.hasToday;\r\n        },\r\n\r\n        /**\r\n         * Returns start date of provided record.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {String}\r\n         */\r\n        getStartDate: function (record) {\r\n            return record['start_time'];\r\n        },\r\n\r\n        /**\r\n         * Returns end date of provided record.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {String}\r\n         */\r\n        getEndDate: function (record) {\r\n            return record['end_time'];\r\n        },\r\n\r\n        /**\r\n         * Returns difference in days between records' start date\r\n         * and a first day of a range.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Number}\r\n         */\r\n        getStartDelta: function (record) {\r\n            var start    = this.createDate(this.getStartDate(record)),\r\n                firstDay = this.range.firstDay;\r\n\r\n            return start.diff(firstDay, 'days', true);\r\n        },\r\n\r\n        /**\r\n         * Calculates the amount of days that provided event lasts.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Number}\r\n         */\r\n        getDaysLength: function (record) {\r\n            var start   = this.createDate(this.getStartDate(record)),\r\n                end     = this.createDate(this.getEndDate(record));\r\n\r\n            if (!end.isValid()) {\r\n                end = this.range.lastDay.endOf('day');\r\n            }\r\n\r\n            return end.diff(start, 'days', true);\r\n        },\r\n\r\n        /**\r\n         * Creates new date object based on provided date string value.\r\n         *\r\n         * @param {String} dateStr\r\n         * @returns {Moment}\r\n         */\r\n        createDate: function (dateStr) {\r\n            return moment(dateStr, this.dateFormat);\r\n        },\r\n\r\n        /**\r\n         * Converts days to weeks.\r\n         *\r\n         * @param {Number} days\r\n         * @returns {Number}\r\n         */\r\n        daysToWeeks: function (days) {\r\n            var weeks = days / 7;\r\n\r\n            if (weeks % 1) {\r\n                weeks = weeks.toFixed(1);\r\n            }\r\n\r\n            return weeks;\r\n        },\r\n\r\n        /**\r\n         * Updates data of a range object,\r\n         * e.g. total days, first day and last day, etc.\r\n         *\r\n         * @returns {Object} Range instance.\r\n         */\r\n        updateRange: function () {\r\n            var firstDay    = this._getFirstDay(),\r\n                lastDay     = this._getLastDay(),\r\n                totalDays   = lastDay.diff(firstDay, 'days'),\r\n                days        = [],\r\n                i           = -1;\r\n\r\n            if (totalDays < this.minDays) {\r\n                totalDays += this.minDays - totalDays - 1;\r\n            }\r\n\r\n            while (++i <= totalDays) {\r\n                days.push(+firstDay + ONE_DAY * i);\r\n            }\r\n\r\n            return _.extend(this.range, {\r\n                days:       days,\r\n                totalDays:  totalDays,\r\n                firstDay:   firstDay,\r\n                lastDay:    moment(_.last(days)),\r\n                hasToday:   this.isToday(firstDay)\r\n            });\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         * @param {String} key\r\n         * @returns {Array<Moment>}\r\n         */\r\n        _getDates: function (key) {\r\n            var dates = [];\r\n\r\n            this.rows.forEach(function (record) {\r\n                if (record[key]) {\r\n                    dates.push(this.createDate(record[key]));\r\n                }\r\n            }, this);\r\n\r\n            return dates;\r\n        },\r\n\r\n        /**\r\n         * Returns date which is closest to the current day.\r\n         *\r\n         * @private\r\n         * @returns {Moment}\r\n         */\r\n        _getFirstDay: function () {\r\n            var dates = this._getDates('start_time'),\r\n                first = moment.min(dates).subtract(1, 'day'),\r\n                today = moment();\r\n\r\n            if (!first.isValid() || first < today) {\r\n                first = today;\r\n            }\r\n\r\n            return first.startOf('day');\r\n        },\r\n\r\n        /**\r\n         * Returns the most distant date\r\n         * specified in available records.\r\n         *\r\n         * @private\r\n         * @returns {Moment}\r\n         */\r\n        _getLastDay: function () {\r\n            var startDates  = this._getDates('start_time'),\r\n                endDates    = this._getDates('end_time'),\r\n                last        = moment.max(startDates.concat(endDates));\r\n\r\n            return last.add(1, 'day').startOf('day');\r\n        },\r\n\r\n        /**\r\n         * TODO: remove after integration with date binding.\r\n         *\r\n         * @param {Number} timestamp\r\n         * @returns {String}\r\n         */\r\n        formatHeader: function (timestamp) {\r\n            return moment(timestamp).format(this.headerFormat);\r\n        },\r\n\r\n        /**\r\n         * TODO: remove after integration with date binding.\r\n         *\r\n         * @param {String} date\r\n         * @returns {String}\r\n         */\r\n        formatDetails: function (date) {\r\n            return moment(date).format(this.detailsFormat);\r\n        }\r\n    });\r\n});\r\n","Magento_UrlRewrite/js/url-rewrite-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/backend/form',\r\n    'mage/backend/validation'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (data, element) {\r\n\r\n        $(element).form().validation({\r\n            validationUrl: data.url\r\n        });\r\n    };\r\n});\r\n","Magento_User/app-config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\nrequire.config({\r\n    'waitSeconds': 0,\r\n    'shim': {\r\n        'jquery/jstree/jquery.hotkeys': ['jquery'],\r\n        'jquery/hover-intent': ['jquery'],\r\n        'mage/adminhtml/backup': ['prototype'],\r\n        'mage/captcha': ['prototype'],\r\n        'mage/common': ['jquery'],\r\n        'mage/webapi': ['jquery'],\r\n        'ko': {\r\n            exports: 'ko'\r\n        },\r\n        'moment': {\r\n            exports: 'moment'\r\n        }\r\n    },\r\n    'paths': {\r\n        'jquery/ui': 'jquery/jquery-ui-1.9.2',\r\n        'jquery/validate': 'jquery/jquery.validate',\r\n        'jquery/hover-intent': 'jquery/jquery.hoverIntent',\r\n        'jquery/file-uploader': 'jquery/fileUploader/jquery.fileuploader',\r\n        'prototype': 'prototype/prototype-amd',\r\n        'text': 'requirejs/text',\r\n        'domReady': 'requirejs/domReady',\r\n        'ko': 'ko/ko'\r\n    }\r\n});\r\n\r\nrequire(['jquery'], function (jQuery) {\r\n    'use strict';\r\n\r\n    jQuery.noConflict();\r\n});\r\n","Magento_User/js/delete-user-account.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var postData;\r\n\r\n    return function (params, elem) {\r\n\r\n        elem.on('click', function () {\r\n\r\n            postData = {\r\n                'data': {\r\n                    'user_id': params.objId,\r\n                    'current_password': $('[name=\"current_password\"]').val()\r\n                }\r\n            };\r\n\r\n            if ($.validator.validateElement($('[name=\"current_password\"]'))) {\r\n                window.deleteConfirm(params.message, params.url, postData);\r\n            }\r\n        });\r\n    };\r\n});\r\n","Magento_User/js/roles-tree.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery/ui',\r\n    'jquery/jstree/jquery.jstree'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.rolesTree', {\r\n        options: {\r\n            treeInitData: {},\r\n            treeInitSelectedData: {}\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this.element.jstree({\r\n                plugins: ['themes', 'json_data', 'ui', 'crrm', 'types', 'vcheckbox', 'hotkeys'],\r\n                vcheckbox: {\r\n                    'two_state': true,\r\n                    'real_checkboxes': true,\r\n\r\n                    /**\r\n                     * @param {*} n\r\n                     * @return {Array}\r\n                     */\r\n                    'real_checkboxes_names': function (n) {\r\n                        return ['resource[]', $(n).data('id')];\r\n                    }\r\n                },\r\n                'json_data': {\r\n                    data: this.options.treeInitData\r\n                },\r\n                ui: {\r\n                    'select_limit': 0\r\n                },\r\n                hotkeys: {\r\n                    space: this._changeState,\r\n                    'return': this._changeState\r\n                },\r\n                types: {\r\n                    'types': {\r\n                        'disabled': {\r\n                            'check_node': false,\r\n                            'uncheck_node': false\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroy: function () {\r\n            this.element.jstree('destroy');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this.element.on('loaded.jstree', $.proxy(this._checkNodes, this));\r\n            this.element.on('click.jstree', 'a', $.proxy(this._checkNode, this));\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _checkNode: function (event) {\r\n            event.stopPropagation();\r\n            this.element.jstree(\r\n                'change_state',\r\n                event.currentTarget,\r\n                this.element.jstree('is_checked', event.currentTarget)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _checkNodes: function () {\r\n            var $items = $('[data-id=\"' + this.options.treeInitSelectedData.join('\"],[data-id=\"') + '\"]');\r\n\r\n            $items.removeClass('jstree-unchecked').addClass('jstree-checked');\r\n            $items.children(':checkbox').prop('checked', true);\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _changeState: function () {\r\n            var element;\r\n\r\n            if (this.data.ui.hovered) {\r\n                element = this.data.ui.hovered;\r\n                this['change_state'](element, this['is_checked'](element));\r\n            }\r\n\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return $.mage.rolesTree;\r\n});\r\n","Magento_Variable/variables.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global Variables, updateElementAtCursor, MagentovariablePlugin, Base64 */\r\ndefine([\r\n    'jquery',\r\n    'mage/backend/notification',\r\n    'mage/translate',\r\n    'wysiwygAdapter',\r\n    'uiRegistry',\r\n    'mage/apply/main',\r\n    'mageUtils',\r\n    'Magento_Variable/js/config-directive-generator',\r\n    'Magento_Variable/js/custom-directive-generator',\r\n    'Magento_Ui/js/lib/spinner',\r\n    'jquery/ui',\r\n    'prototype',\r\n    'mage/adminhtml/tools'\r\n], function (jQuery, notification, $t, wysiwyg, registry, mageApply, utils, configGenerator, customGenerator, loader) {\r\n    'use strict';\r\n\r\n    window.Variables = {\r\n        textareaElementId: null,\r\n        variablesContent: null,\r\n        dialogWindow: null,\r\n        dialogWindowId: 'variables-chooser',\r\n        overlayShowEffectOptions: null,\r\n        overlayHideEffectOptions: null,\r\n        insertFunction: 'Variables.insertVariable',\r\n        selectedPlaceholder: null,\r\n        isEditMode: null,\r\n        editor: null,\r\n\r\n        /**\r\n         * Initialize Variables handler.\r\n         *\r\n         * @param {*} textareaElementId\r\n         * @param {Function} insertFunction\r\n         * @param {Object} editor\r\n         * @param {Object} selectedPlaceholder\r\n         */\r\n        init: function (textareaElementId, insertFunction, editor, selectedPlaceholder) {\r\n            if ($(textareaElementId)) {\r\n                this.textareaElementId = textareaElementId;\r\n            }\r\n\r\n            if (insertFunction) {\r\n                this.insertFunction = insertFunction;\r\n            }\r\n\r\n            if (selectedPlaceholder) {\r\n                this.selectedPlaceholder = selectedPlaceholder;\r\n            }\r\n\r\n            if (editor) {\r\n                this.editor = editor;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset data.\r\n         */\r\n        resetData: function () {\r\n            this.variablesContent = null;\r\n            this.dialogWindow = null;\r\n        },\r\n\r\n        /**\r\n         * Open variables chooser slideout.\r\n         *\r\n         * @param {Object} variables\r\n         */\r\n        openVariableChooser: function (variables) {\r\n            if (variables) {\r\n                this.openDialogWindow(variables);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close variables chooser slideout dialog window.\r\n         */\r\n        closeDialogWindow: function () {\r\n            jQuery('#' + this.dialogWindowId).modal('closeModal');\r\n        },\r\n\r\n        /**\r\n         * Init ui component grid on the form\r\n         *\r\n         * @return void\r\n         */\r\n        initUiGrid: function () {\r\n            mageApply.apply(document.getElementById(this.dialogWindow));\r\n            jQuery('#' + this.dialogWindowId).applyBindings();\r\n            loader.get('variables_modal.variables_modal.variables').hide();\r\n        },\r\n\r\n        /**\r\n         * Open slideout dialog window.\r\n         *\r\n         * @param {*} variablesContent\r\n         * @param {Object} selectedElement\r\n         */\r\n        openDialogWindow: function (variablesContent, selectedElement) {\r\n\r\n            var html = utils.copy(variablesContent),\r\n                self = this;\r\n\r\n            jQuery('<div id=\"' + this.dialogWindowId + '\">' + html + '</div>').modal({\r\n                title: self.isEditMode ? $t('Edit Variable') : $t('Insert Variable'),\r\n                type: 'slide',\r\n                buttons: self.getButtonsConfig(self.isEditMode),\r\n\r\n                /**\r\n                 * @param {jQuery.Event} e\r\n                 * @param {Object} modal\r\n                 */\r\n                closed: function (e, modal) {\r\n                    modal.modal.remove();\r\n                    registry.get(\r\n                        'variables_modal.variables_modal.variables.variable_selector',\r\n                        function (radioSelect) {\r\n                            radioSelect.selectedVariableCode('');\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n\r\n            this.selectedPlaceholder = selectedElement;\r\n\r\n            this.addNotAvailableMessage(selectedElement);\r\n\r\n            jQuery('#' + this.dialogWindowId).modal('openModal');\r\n\r\n            if (typeof selectedElement !== 'undefined') {\r\n                registry.get(\r\n                    'variables_modal.variables_modal.variables.variable_selector',\r\n                    function (radioSelect) {\r\n                        radioSelect.selectedVariableCode(MagentovariablePlugin.getElementVariablePath(selectedElement));\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add message to slide out that variable is no longer available\r\n         *\r\n         * @param {Object} selectedElement\r\n         */\r\n        addNotAvailableMessage: function (selectedElement) {\r\n            var name,\r\n                msg,\r\n                variablePath,\r\n                $wrapper,\r\n                lostVariableClass = 'magento-placeholder-error';\r\n\r\n            if (\r\n                this.isEditMode &&\r\n                typeof selectedElement !== 'undefined' &&\r\n                jQuery(selectedElement).hasClass(lostVariableClass)\r\n            ) {\r\n\r\n                variablePath = MagentovariablePlugin.getElementVariablePath(selectedElement);\r\n                name = variablePath.split(':');\r\n                msg = $t('The variable %1 is no longer available. Select a different variable.')\r\n                    .replace('%1', name[1]);\r\n\r\n                jQuery('body').notification('clear')\r\n                    .notification('add', {\r\n                        error: true,\r\n                        message: msg,\r\n\r\n                        /**\r\n                         * @param {String} message\r\n                         */\r\n                        insertMethod: function (message) {\r\n                            $wrapper = jQuery('<div/>').html(message);\r\n\r\n                            jQuery('.modal-header .page-main-actions').after($wrapper);\r\n                        }\r\n                    });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get selected variable directive.\r\n         *\r\n         * @returns {*}\r\n         */\r\n        getVariableCode: function () {\r\n            var code = registry.get('variables_modal.variables_modal.variables.variable_selector')\r\n                    .selectedVariableCode(),\r\n                directive = code;\r\n\r\n            // processing switch here as content must contain only path/code without type\r\n            if (typeof code !== 'undefined') {\r\n                if (code.match('^default:')) {\r\n                    directive = configGenerator.processConfig(code.replace('default:', ''));\r\n                } else if (code.match('^custom:')) {\r\n                    directive = customGenerator.processConfig(code.replace('custom:', ''));\r\n                }\r\n\r\n                return directive;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get buttons configuration for slideout dialog.\r\n         *\r\n         * @param {Boolean} isEditMode\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getButtonsConfig: function (isEditMode) {\r\n\r\n            var self = this,\r\n                buttonsData;\r\n\r\n            buttonsData = [\r\n                {\r\n\r\n                    text: $t('Cancel'),\r\n                    'class': 'action-scalable cancel',\r\n\r\n                    /**\r\n                     * @param {jQuery.Event} event\r\n                     */\r\n                    click: function (event) {\r\n                        this.closeModal(event);\r\n                    }\r\n                },\r\n                {\r\n\r\n                    text: isEditMode ? $t('Save') : $t('Insert Variable'),\r\n                    class: 'action-primary ' + (isEditMode ? '' : 'disabled'),\r\n                    attr: {\r\n                        'id': 'insert_variable'\r\n                    },\r\n\r\n                    /**\r\n                     * Insert Variable\r\n                     */\r\n                    click: function () {\r\n                        self.insertVariable(self.getVariableCode());\r\n                    }\r\n                }\r\n            ];\r\n\r\n            return buttonsData;\r\n        },\r\n\r\n        /**\r\n         * Prepare variables row.\r\n         *\r\n         * @param {String} varValue\r\n         * @param {*} varLabel\r\n         * @return {String}\r\n         * @deprecated This method isn't relevant after ui changes\r\n         */\r\n        prepareVariableRow: function (varValue, varLabel) {\r\n            var value = varValue.replace(/\"/g, '&quot;').replace(/'/g, '\\\\&#39;');\r\n\r\n            return '<a href=\"#\" onclick=\"' +\r\n                this.insertFunction +\r\n                '(\\'' +\r\n                value +\r\n                '\\');return false;\">' +\r\n                varLabel +\r\n                '</a>';\r\n        },\r\n\r\n        /**\r\n         * Insert variable into WYSIWYG editor.\r\n         *\r\n         * @param {*} value\r\n         * @return {Object}\r\n         */\r\n        insertVariable: function (value) {\r\n            var windowId = this.dialogWindowId,\r\n                textareaElm, scrollPos, wysiwygEditorFocused;\r\n\r\n            jQuery('#' + windowId).modal('closeModal');\r\n            textareaElm = $(this.textareaElementId);\r\n\r\n            //to support switching between wysiwyg editors\r\n            wysiwygEditorFocused = wysiwyg && wysiwyg.activeEditor();\r\n\r\n            if (wysiwygEditorFocused && wysiwyg.get(this.textareaElementId)) {\r\n                if (jQuery(this.selectedPlaceholder).hasClass('magento-placeholder')) {\r\n                    wysiwyg.setCaretOnElement(this.selectedPlaceholder, 1);\r\n                }\r\n                wysiwyg.insertContent(value, false);\r\n\r\n                if (this.selectedPlaceholder && jQuery(this.selectedPlaceholder).hasClass('magento-placeholder')) {\r\n                    this.selectedPlaceholder.remove();\r\n                }\r\n\r\n            } else if (textareaElm) {\r\n                scrollPos = textareaElm.scrollTop;\r\n                updateElementAtCursor(textareaElm, value);\r\n                textareaElm.focus();\r\n                textareaElm.scrollTop = scrollPos;\r\n                jQuery(textareaElm).change();\r\n                textareaElm = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n    };\r\n\r\n    window.MagentovariablePlugin = {\r\n        editor: null,\r\n        variables: null,\r\n        textareaId: null,\r\n\r\n        /**\r\n         * Bind editor.\r\n         *\r\n         * @param {*} editor\r\n         */\r\n        setEditor: function (editor) {\r\n            this.editor = editor;\r\n        },\r\n\r\n        /**\r\n         * Load variables chooser.\r\n         *\r\n         * @param {String} url\r\n         * @param {*} textareaId\r\n         * @param {Object} selectedElement\r\n         *\r\n         * @return {Object}\r\n         */\r\n        loadChooser: function (url, textareaId, selectedElement) {\r\n            this.textareaId = textareaId;\r\n\r\n            new Ajax.Request(url, {\r\n                parameters: {},\r\n                onComplete: function (transport) {\r\n                    Variables.init(this.textareaId, 'MagentovariablePlugin.insertVariable', this.editor);\r\n                    Variables.isEditMode = !!this.getElementVariablePath(selectedElement);\r\n                    this.variablesContent = transport.responseText;\r\n                    Variables.openDialogWindow(this.variablesContent, selectedElement);\r\n                    Variables.initUiGrid();\r\n                }.bind(this)\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Open variables chooser window.\r\n         *\r\n         * @param {*} variables\r\n         * @deprecated This method isn't relevant after ui changes\r\n         */\r\n        openChooser: function (variables) {\r\n            Variables.openVariableChooser(variables);\r\n        },\r\n\r\n        /**\r\n         * Insert variable.\r\n         *\r\n         * @param {*} value\r\n         *\r\n         * @return {Object}\r\n         */\r\n        insertVariable: function (value) {\r\n            if (this.textareaId) {\r\n                Variables.init(this.textareaId);\r\n                Variables.insertVariable(value);\r\n            } else {\r\n                Variables.closeDialogWindow();\r\n                Variables.insertVariable(value);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Get element variable path.\r\n         *\r\n         * @param {Object} element\r\n         * @returns {String}\r\n         */\r\n        getElementVariablePath: function (element) {\r\n            var type, code;\r\n\r\n            if (!element || !jQuery(element).hasClass('magento-variable')) {\r\n                return '';\r\n            }\r\n            type = jQuery(element).hasClass('magento-custom-var') ? 'custom' : 'default';\r\n            code = Base64.idDecode(element.getAttribute('id'));\r\n\r\n            return type + ':' + code;\r\n        }\r\n    };\r\n});\r\n","Magento_Variable/js/config-directive-generator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return _.extend({\r\n        directiveTemplate: '{{config path=\"%s\"}}',\r\n\r\n        /**\r\n         * @param {String} path\r\n         * @return {String}\r\n         */\r\n        processConfig: function (path) {\r\n            return this.directiveTemplate.replace('%s', path);\r\n\r\n        }\r\n\r\n    });\r\n\r\n});\r\n","Magento_Variable/js/custom-directive-generator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return _.extend({\r\n        directiveTemplate: '{{customVar code=%s}}',\r\n\r\n        /**\r\n         * @param {String} path\r\n         * @return {String}\r\n         */\r\n        processConfig: function (path) {\r\n            return this.directiveTemplate.replace('%s', path);\r\n        }\r\n\r\n    });\r\n\r\n});\r\n","Magento_Variable/js/grid/columns/radioselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mage/translate',\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'jquery'\r\n], function (_, $t, Column, jQuery) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Variable/grid/cells/radioselect',\r\n            draggable: false,\r\n            sortable: false,\r\n            selectedVariableCode: null,\r\n            selectedVariableType: null\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super().observe(['selectedVariableCode']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove disable class from Insert Variable button after Variable has been chosen.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        selectVariable: function () {\r\n            if (jQuery('#insert_variable').hasClass('disabled')) {\r\n                jQuery('#insert_variable').removeClass('disabled');\r\n            }\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Vault/js/vault.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'uiComponent'\r\n], function ($, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            $selector: null,\r\n            selector: 'edit_form',\r\n            fieldset: '',\r\n            active: false,\r\n            imports: {\r\n                onActiveChange: 'active'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set list of observable attributes\r\n         * @returns {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            var self = this,\r\n                paymentSelector = '[name=\"payment[method]\"][value=\"' + this.getCode() + '\"]:checked';\r\n\r\n            self.$selector = $('#' + self.selector);\r\n            this._super()\r\n                .observe(['active']);\r\n\r\n            if (self.$selector.find(paymentSelector).length !== 0) {\r\n                this.active(true);\r\n            }\r\n\r\n            $('#' + self.fieldset).find('[name=\"payment[token_switcher]\"]')\r\n                .on('click', this.rememberTokenSwitcher.bind(this));\r\n\r\n            // re-init payment method events\r\n            self.$selector.off('changePaymentMethod.' + this.getCode())\r\n                .on('changePaymentMethod.' + this.getCode(), this.changePaymentMethod.bind(this));\r\n\r\n            if (this.active()) {\r\n                this.chooseTokenSwitcher();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enable/disable current payment method\r\n         * @param {Object} event\r\n         * @param {String} method\r\n         * @returns {exports.changePaymentMethod}\r\n         */\r\n        changePaymentMethod: function (event, method) {\r\n            this.active(method === this.getCode());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Save last chosen token switcher\r\n         * @param {Object} event\r\n         * @returns {exports.rememberTokenSwitcher}\r\n         */\r\n        rememberTokenSwitcher: function (event) {\r\n            $('#' + this.selector).data('lastTokenSwitcherId', event.target.id);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Select token switcher\r\n         * @returns {exports.chooseTokenSwitcher}\r\n         */\r\n        chooseTokenSwitcher: function () {\r\n            var lastTokenSwitcherId = $('#' + this.selector).data('lastTokenSwitcherId');\r\n\r\n            if (lastTokenSwitcherId) {\r\n                $('#' + lastTokenSwitcherId).trigger('click');\r\n            } else {\r\n                $('#' + this.fieldset + ' input:radio:first').trigger('click');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggered when payment changed\r\n         * @param {Boolean} isActive\r\n         */\r\n        onActiveChange: function (isActive) {\r\n            if (!isActive) {\r\n                this.$selector.trigger('setVaultNotActive.' + this.getCode());\r\n\r\n                return;\r\n            }\r\n            this.chooseTokenSwitcher();\r\n            window.order.addExcludedPaymentMethod(this.getCode());\r\n        },\r\n\r\n        /**\r\n         * Get payment method code\r\n         * @returns {String}\r\n         */\r\n        getCode: function () {\r\n            return this.code;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/fpt-attribute.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global RegionUpdater */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery/ui',\r\n    'mage/adminhtml/form'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.fptAttribute', {\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var widget = this;\r\n\r\n            this.rowTmpl = mageTemplate(this.element.find('[data-role=\"row-template\"]').html());\r\n\r\n            this._initOptionItem();\r\n\r\n            if ($(this.options.bundlePriceType).val() === '0') {\r\n                this.element.hide();\r\n            }\r\n\r\n            $.each(this.options.itemsData, function () {\r\n                widget.addItem(this);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _initOptionItem: function () {\r\n            var widget = this,\r\n                isOriginalRequired = $(widget.element).hasClass('required');\r\n\r\n            this._on({\r\n                /**\r\n                 * Add new tax item.\r\n                 *\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click [data-action=add-fpt-item]': function (event) {\r\n                    this.addItem(event);\r\n                },\r\n\r\n                /**\r\n                 * Delete tax item.\r\n                 *\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click [data-action=delete-fpt-item]': function (event) {\r\n                    var parent = $(event.target).closest('[data-role=\"fpt-item-row\"]');\r\n\r\n                    parent.find('[data-role=\"delete-fpt-item\"]').val(1);\r\n                    parent.addClass('ignore-validate').hide();\r\n                },\r\n\r\n                /**\r\n                 * Change tax item country/state.\r\n                 *\r\n                 * @param {jQuery.Event} event\r\n                 * @param {Object} data\r\n                 */\r\n                'change [data-role=\"select-country\"]': function (event, data) {\r\n                    var currentElement = event.target || event.srcElement || event.currentTarget,\r\n                        parentElement = $(currentElement).closest('[data-role=\"fpt-item-row\"]'),\r\n                        updater;\r\n\r\n                    data = data || {};\r\n                    updater = new RegionUpdater(\r\n                        parentElement.find('[data-role=\"select-country\"]').attr('id'), null,\r\n                        parentElement.find('[data-role=\"select-state\"]').attr('id'),\r\n                        widget.options.region, 'disable', true\r\n                    );\r\n                    updater.update();\r\n                    //set selected state value if set\r\n                    if (data.state) {\r\n                        parentElement.find('[data-role=\"select-state\"]').val(data.state);\r\n                    }\r\n\r\n                    if (!isOriginalRequired && $(widget.element).hasClass('required')) {\r\n                        $(widget.element).removeClass('required');\r\n                    }\r\n                }\r\n            });\r\n\r\n            $(this.options.bundlePriceType).on('change', function (event) {\r\n                var attributeItems = widget.element.find('[data-role=\"delete-fpt-item\"]');\r\n\r\n                if ($(event.target).val() === '0') {\r\n                    widget.element.hide();\r\n                    attributeItems.each(function () {\r\n                        $(this).val(1);\r\n                    });\r\n                } else {\r\n                    widget.element.show();\r\n                    attributeItems.each(function () {\r\n                        if ($(this).closest('[data-role=\"fpt-item-row\"]').is(':visible')) {\r\n                            $(this).val(0);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Add custom option.\r\n         *\r\n         * @param {jQuery.Event} event\r\n         */\r\n        addItem: function (event) {\r\n            var data = {},\r\n                currentElement = event.target || event.srcElement || event.currentTarget,\r\n                tmpl;\r\n\r\n            if (typeof currentElement !== 'undefined') {\r\n                data['website_id'] = 0;\r\n            } else {\r\n                data = event;\r\n            }\r\n\r\n            data.index = this.element.find('[data-role=\"fpt-item-row\"]').length;\r\n\r\n            tmpl = this.rowTmpl({\r\n                data: data\r\n            });\r\n\r\n            $(tmpl).appendTo(this.element.find('[data-role=\"fpt-item-container\"]'));\r\n\r\n            //set selected website_id value if set\r\n            if (data['website_id']) {\r\n                this.element.find('[data-role=\"select-website\"][id$=\"_' + data.index + '_website\"]')\r\n                    .val(data['website_id']);\r\n            }\r\n\r\n            //set selected country value if set\r\n            if (data.country) {\r\n                this.element.find('[data-role=\"select-country\"][id$=\"_' + data.index + '_country\"]')\r\n                    .val(data.country).trigger('change', data);\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.fptAttribute;\r\n});\r\n","Magento_Weee/js/fpt-group.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/components/group',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/lib/validation/validator',\r\n    'mage/translate',\r\n    'underscore'\r\n], function (Group, uiRegistry, validation, $t, _) {\r\n    'use strict';\r\n\r\n    return Group.extend({\r\n        defaults: {\r\n            visible: true,\r\n            label: '',\r\n            showLabel: true,\r\n            required: false,\r\n            template: 'ui/group/group',\r\n            fieldTemplate: 'ui/form/field',\r\n            breakLine: true,\r\n            validateWholeGroup: false,\r\n            additionalClasses: {}\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            validation.addRule('validate-fpt-group', function (value) {\r\n                if (value.indexOf('?') !== -1) {\r\n\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            }, $t(\r\n                'Set unique country-state combinations within the same fixed product tax. ' +\r\n                'Verify the combinations and try again.'\r\n            ));\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         */\r\n        _handleOptionsAvailability: function () {\r\n            var parent,\r\n                dup;\r\n\r\n            dup = {};\r\n            parent = uiRegistry.get(uiRegistry.get(this.parentName).parentName);\r\n            _.each(parent.elems(), function (elem) {\r\n                var country,\r\n                    state,\r\n                    val,\r\n                    key;\r\n\r\n                country = uiRegistry.get(elem.name + '.countryState.country');\r\n                state = uiRegistry.get(elem.name + '.countryState.state');\r\n                val = uiRegistry.get(elem.name + '.countryState.val');\r\n\r\n                key = country.value() + (state.value() > 0 ? state.value() : 0);\r\n                dup[key]++;\r\n\r\n                if (!dup[key]) {\r\n                    dup[key] = 1;\r\n                    val.value('');\r\n                } else {\r\n                    dup[key]++;\r\n                    val.value(country.value() + '?' + country.name);\r\n                }\r\n            });\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initElement: function (elem) {\r\n            var obj;\r\n\r\n            obj = this;\r\n            this._super();\r\n            elem.on('value', function () {\r\n                obj._handleOptionsAvailability();\r\n            });\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/regions-tax-select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/select'\r\n], function (Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            filterBy: {\r\n                field: 'country',\r\n                target: '${ $.parentName }.country:value'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        filter: function () {\r\n            this._super();\r\n            this.disableSelect();\r\n        },\r\n\r\n        /**\r\n         * Disables select if there's no regions/states\r\n         *\r\n         * @returns {*} instance - Chainable\r\n         */\r\n        disableSelect: function () {\r\n            var empty = !this.options().length;\r\n\r\n            this.disabled(empty);\r\n\r\n            if (empty) {\r\n                this.error('');\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/price/adjustment.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Weee/price/adjustment',\r\n            dataSource: '${ $.parentName }.provider',\r\n            //Weee configuration constants can be configured from backend\r\n            inclFptWithDesc: 1,//show FPT and description\r\n            inclFpt: 0, //show FPT attribute\r\n            exclFpt: 2, //do not show FPT\r\n            bothFptPrices: 3 //show price without FPT and with FPT and with description\r\n        },\r\n\r\n        /**\r\n         * Get Weee attributes.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeAttributes: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_attributes'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee without Tax attributes.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithoutTax: function (taxAmount) {\r\n            return taxAmount['amount_excl_tax'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee with Tax attributes.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithTax: function (taxAmount) {\r\n            return taxAmount['tax_amount_incl_tax'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee Tax name.\r\n         *\r\n         * @param {String} taxAmount\r\n         * @return {String} Weee name\r\n         */\r\n        getWeeTaxAttributeName: function (taxAmount) {\r\n            return taxAmount['attribute_code'];\r\n        },\r\n\r\n        /**\r\n         * Set price type.\r\n         *\r\n         * @param {String} priceType\r\n         * @return {Object}\r\n         */\r\n        setPriceType: function (priceType) {\r\n            this.taxPriceType = priceType;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check if Weee Tax must be shown.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        isShown: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_attributes'].length;\r\n        },\r\n\r\n        /**\r\n         * Get Weee final price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee final price html\r\n         */\r\n        getWeeeAdjustment: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_adjustment'];\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including FPT only.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclFpt: function () {\r\n            return +this.source.data.displayWeee === this.inclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * price including FPT and FPT description.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclFptDescr: function () {\r\n            return +this.source.data.displayWeee === this.inclFptWithDesc;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price\r\n         * excluding FPT but including FPT description and final price.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclFptDescr: function () {\r\n            return +this.source.data.displayWeee === this.exclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding FPT.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclFpt: function () {\r\n            return +this.source.data.displayWeee === this.bothFptPrices;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclTax: function () {\r\n            return +this.source.data.displayTaxes === this.inclFptWithDesc;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclTax: function () {\r\n            return +this.source.data.displayTaxes === this.exclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * both price including tax and price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayBothPricesTax: function () {\r\n            return +this.source.data.displayTaxes === this.bothFptPrices;\r\n        }\r\n    });\r\n});\r\n","modernizr/modernizr.2.0.6.js":"/* Modernizr 2.0.6 (Custom Build) | MIT & BSD\r\n * Build: http://www.modernizr.com/download/#-csstransforms-csstransforms3d-cssclasses-prefixed-teststyles-testprop-testallprops-prefixes-domprefixes\r\n */\r\n;window.Modernizr=function(a,b,c){function C(a,b){var c=a.charAt(0).toUpperCase()+a.substr(1),d=(a+\" \"+o.join(c+\" \")+c).split(\" \");return B(d,b)}function B(a,b){for(var d in a)if(k[a[d]]!==c)return b==\"pfx\"?a[d]:!0;return!1}function A(a,b){return!!~(\"\"+a).indexOf(b)}function z(a,b){return typeof a===b}function y(a,b){return x(n.join(a+\";\")+(b||\"\"))}function x(a){k.cssText=a}var d=\"2.0.6\",e={},f=!0,g=b.documentElement,h=b.head||b.getElementsByTagName(\"head\")[0],i=\"modernizr\",j=b.createElement(i),k=j.style,l,m=Object.prototype.toString,n=\" -webkit- -moz- -o- -ms- -khtml- \".split(\" \"),o=\"Webkit Moz O ms Khtml\".split(\" \"),p={},q={},r={},s=[],t=function(a,c,d,e){var f,h,j,k=b.createElement(\"div\");if(parseInt(d,10))while(d--)j=b.createElement(\"div\"),j.id=e?e[d]:i+(d+1),k.appendChild(j);f=[\"&shy;\",\"<style>\",a,\"</style>\"].join(\"\"),k.id=i,k.innerHTML+=f,g.appendChild(k),h=c(k,a),k.parentNode.removeChild(k);return!!h},u,v={}.hasOwnProperty,w;!z(v,c)&&!z(v.call,c)?w=function(a,b){return v.call(a,b)}:w=function(a,b){return b in a&&z(a.constructor.prototype[b],c)};var D=function(a,c){var d=a.join(\"\"),f=c.length;t(d,function(a,c){var d=b.styleSheets[b.styleSheets.length-1],g=d.cssRules&&d.cssRules[0]?d.cssRules[0].cssText:d.cssText||\"\",h=a.childNodes,i={};while(f--)i[h[f].id]=h[f];e.csstransforms3d=i.csstransforms3d.offsetLeft===9},f,c)}([,[\"@media (\",n.join(\"transform-3d),(\"),i,\")\",\"{#csstransforms3d{left:9px;position:absolute}}\"].join(\"\")],[,\"csstransforms3d\"]);p.csstransforms=function(){return!!B([\"transformProperty\",\"WebkitTransform\",\"MozTransform\",\"OTransform\",\"msTransform\"])},p.csstransforms3d=function(){var a=!!B([\"perspectiveProperty\",\"WebkitPerspective\",\"MozPerspective\",\"OPerspective\",\"msPerspective\"]);a&&\"webkitPerspective\"in g.style&&(a=e.csstransforms3d);return a};for(var E in p)w(p,E)&&(u=E.toLowerCase(),e[u]=p[E](),s.push((e[u]?\"\":\"no-\")+u));x(\"\"),j=l=null,e._version=d,e._prefixes=n,e._domPrefixes=o,e.testProp=function(a){return B([a])},e.testAllProps=C,e.testStyles=t,e.prefixed=function(a){return C(a,\"pfx\")},g.className=g.className.replace(/\\bno-js\\b/,\"\")+(f?\" js \"+s.join(\" \"):\"\");return e}(this,this.document);","modernizr/modernizr.details.js":"// By @mathias, based on http://mths.be/axh\r\ndefine([\r\n    'modernizr/modernizr'\r\n], function(){\r\n\r\n    Modernizr.addTest('details', function() {\r\n        var doc = document,\r\n            el = doc.createElement('details'),\r\n            fake,\r\n            root,\r\n            diff;\r\n        if (!('open' in el)) { // return early if possible; thanks @aFarkas!\r\n            return false;\r\n        }\r\n        root = doc.body || (function() {\r\n            var de = doc.documentElement;\r\n            fake = true;\r\n            return de.insertBefore(doc.createElement('body'), de.firstElementChild || de.firstChild);\r\n        }());\r\n        el.innerHTML = '<summary>a</summary>b';\r\n        el.style.display = 'block';\r\n        root.appendChild(el);\r\n        diff = el.offsetHeight;\r\n        el.open = true;\r\n        diff = diff != el.offsetHeight;\r\n        root.removeChild(el);\r\n        fake && root.parentNode.removeChild(root);\r\n        return diff;\r\n    });\r\n\r\n});","modernizr/modernizr.js":"/*!\r\n * Modernizr v2.6.1\r\n * www.modernizr.com\r\n *\r\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\r\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\r\n */\r\n\r\n/*\r\n * Modernizr tests which native CSS3 and HTML5 features are available in\r\n * the current UA and makes the results available to you in two ways:\r\n * as properties on a global Modernizr object, and as classes on the\r\n * <html> element. This information allows you to progressively enhance\r\n * your pages with a granular level of control over the experience.\r\n *\r\n * Modernizr has an optional (not included) conditional resource loader\r\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\r\n * To get a build that includes Modernizr.load(), as well as choosing\r\n * which tests to include, go to www.modernizr.com/download/\r\n *\r\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\r\n * Contributors   Ryan Seddon, Ben Alman\r\n */\r\n\r\nwindow.Modernizr = (function( window, document, undefined ) {\r\n\r\n    var version = '2.6.1',\r\n\r\n        Modernizr = {},\r\n\r\n    /*>>cssclasses*/\r\n    // option for enabling the HTML classes to be added\r\n        enableClasses = true,\r\n    /*>>cssclasses*/\r\n\r\n        docElement = document.documentElement,\r\n\r\n        /**\r\n         * Create our \"modernizr\" element that we do most feature tests on.\r\n         */\r\n            mod = 'modernizr',\r\n        modElem = document.createElement(mod),\r\n        mStyle = modElem.style,\r\n\r\n        /**\r\n         * Create the input element for various Web Forms feature tests.\r\n         */\r\n            inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\r\n\r\n    /*>>smile*/\r\n        smile = ':)',\r\n    /*>>smile*/\r\n\r\n        toString = {}.toString,\r\n\r\n    // TODO :: make the prefixes more granular\r\n    /*>>prefixes*/\r\n    // List of property values to set for css tests. See ticket #21\r\n        prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\r\n    /*>>prefixes*/\r\n\r\n    /*>>domprefixes*/\r\n    // Following spec is to expose vendor-specific style properties as:\r\n    //   elem.style.WebkitBorderRadius\r\n    // and the following would be incorrect:\r\n    //   elem.style.webkitBorderRadius\r\n\r\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\r\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\r\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\r\n\r\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\r\n        omPrefixes = 'Webkit Moz O ms',\r\n\r\n        cssomPrefixes = omPrefixes.split(' '),\r\n\r\n        domPrefixes = omPrefixes.toLowerCase().split(' '),\r\n    /*>>domprefixes*/\r\n\r\n    /*>>ns*/\r\n        ns = {'svg': 'http://www.w3.org/2000/svg'},\r\n    /*>>ns*/\r\n\r\n        tests = {},\r\n        inputs = {},\r\n        attrs = {},\r\n\r\n        classes = [],\r\n\r\n        slice = classes.slice,\r\n\r\n        featureName, // used in testing loop\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Inject element with style element and some CSS rules\r\n        injectElementWithStyles = function( rule, callback, nodes, testnames ) {\r\n\r\n            var style, ret, node,\r\n                div = document.createElement('div'),\r\n            // After page load injecting a fake body doesn't work so check if body exists\r\n                body = document.body,\r\n            // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\r\n                fakeBody = body ? body : document.createElement('body');\r\n\r\n            if ( parseInt(nodes, 10) ) {\r\n                // In order not to give false positives we create a node for each test\r\n                // This also allows the method to scale for unspecified uses\r\n                while ( nodes-- ) {\r\n                    node = document.createElement('div');\r\n                    node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\r\n                    div.appendChild(node);\r\n                }\r\n            }\r\n\r\n            // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\r\n            // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\r\n            // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\r\n            // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\r\n            // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\r\n            style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\r\n            div.id = mod;\r\n            // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\r\n            // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\r\n            (body ? div : fakeBody).innerHTML += style;\r\n            fakeBody.appendChild(div);\r\n            if ( !body ) {\r\n                //avoid crashing IE8, if background image is used\r\n                fakeBody.style.background = \"\";\r\n                docElement.appendChild(fakeBody);\r\n            }\r\n\r\n            ret = callback(div, rule);\r\n            // If this is done after page load we don't want to remove the body so check if body exists\r\n            !body ? fakeBody.parentNode.removeChild(fakeBody) : div.parentNode.removeChild(div);\r\n\r\n            return !!ret;\r\n\r\n        },\r\n    /*>>teststyles*/\r\n\r\n    /*>>mq*/\r\n    // adapted from matchMedia polyfill\r\n    // by Scott Jehl and Paul Irish\r\n    // gist.github.com/786768\r\n        testMediaQuery = function( mq ) {\r\n\r\n            var matchMedia = window.matchMedia || window.msMatchMedia;\r\n            if ( matchMedia ) {\r\n                return matchMedia(mq).matches;\r\n            }\r\n\r\n            var bool;\r\n\r\n            injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\r\n                bool = (window.getComputedStyle ?\r\n                    getComputedStyle(node, null) :\r\n                    node.currentStyle)['position'] == 'absolute';\r\n            });\r\n\r\n            return bool;\r\n\r\n        },\r\n    /*>>mq*/\r\n\r\n\r\n    /*>>hasevent*/\r\n    //\r\n    // isEventSupported determines if a given element supports the given event\r\n    // kangax.github.com/iseventsupported/\r\n    //\r\n    // The following results are known incorrect:\r\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\r\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\r\n    //   ...\r\n        isEventSupported = (function() {\r\n\r\n            var TAGNAMES = {\r\n                'select': 'input', 'change': 'input',\r\n                'submit': 'form', 'reset': 'form',\r\n                'error': 'img', 'load': 'img', 'abort': 'img'\r\n            };\r\n\r\n            function isEventSupported( eventName, element ) {\r\n\r\n                element = element || document.createElement(TAGNAMES[eventName] || 'div');\r\n                eventName = 'on' + eventName;\r\n\r\n                // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\r\n                var isSupported = eventName in element;\r\n\r\n                if ( !isSupported ) {\r\n                    // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\r\n                    if ( !element.setAttribute ) {\r\n                        element = document.createElement('div');\r\n                    }\r\n                    if ( element.setAttribute && element.removeAttribute ) {\r\n                        element.setAttribute(eventName, '');\r\n                        isSupported = is(element[eventName], 'function');\r\n\r\n                        // If property was created, \"remove it\" (by setting value to `undefined`)\r\n                        if ( !is(element[eventName], 'undefined') ) {\r\n                            element[eventName] = undefined;\r\n                        }\r\n                        element.removeAttribute(eventName);\r\n                    }\r\n                }\r\n\r\n                element = null;\r\n                return isSupported;\r\n            }\r\n            return isEventSupported;\r\n        })(),\r\n    /*>>hasevent*/\r\n\r\n    // TODO :: Add flag for hasownprop ? didn't last time\r\n\r\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\r\n        _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\r\n\r\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\r\n        hasOwnProp = function (object, property) {\r\n            return _hasOwnProperty.call(object, property);\r\n        };\r\n    }\r\n    else {\r\n        hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\r\n            return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\r\n        };\r\n    }\r\n\r\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\r\n    // es5.github.com/#x15.3.4.5\r\n\r\n    if (!Function.prototype.bind) {\r\n        Function.prototype.bind = function bind(that) {\r\n\r\n            var target = this;\r\n\r\n            if (typeof target != \"function\") {\r\n                throw new TypeError();\r\n            }\r\n\r\n            var args = slice.call(arguments, 1),\r\n                bound = function () {\r\n\r\n                    if (this instanceof bound) {\r\n\r\n                        var F = function(){};\r\n                        F.prototype = target.prototype;\r\n                        var self = new F();\r\n\r\n                        var result = target.apply(\r\n                            self,\r\n                            args.concat(slice.call(arguments))\r\n                        );\r\n                        if (Object(result) === result) {\r\n                            return result;\r\n                        }\r\n                        return self;\r\n\r\n                    } else {\r\n\r\n                        return target.apply(\r\n                            that,\r\n                            args.concat(slice.call(arguments))\r\n                        );\r\n\r\n                    }\r\n\r\n                };\r\n\r\n            return bound;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * setCss applies given styles to the Modernizr DOM node.\r\n     */\r\n    function setCss( str ) {\r\n        mStyle.cssText = str;\r\n    }\r\n\r\n    /**\r\n     * setCssAll extrapolates all vendor-specific css strings.\r\n     */\r\n    function setCssAll( str1, str2 ) {\r\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\r\n    }\r\n\r\n    /**\r\n     * is returns a boolean for if typeof obj is exactly type.\r\n     */\r\n    function is( obj, type ) {\r\n        return typeof obj === type;\r\n    }\r\n\r\n    /**\r\n     * contains returns a boolean for if substr is found within str.\r\n     */\r\n    function contains( str, substr ) {\r\n        return !!~('' + str).indexOf(substr);\r\n    }\r\n\r\n    /*>>testprop*/\r\n\r\n    // testProps is a generic CSS / DOM property test.\r\n\r\n    // In testing support for a given CSS property, it's legit to test:\r\n    //    `elem.style[styleName] !== undefined`\r\n    // If the property is supported it will return an empty string,\r\n    // if unsupported it will return undefined.\r\n\r\n    // We'll take advantage of this quick test and skip setting a style\r\n    // on our modernizr element, but instead just testing undefined vs\r\n    // empty string.\r\n\r\n    // Because the testing of the CSS property names (with \"-\", as\r\n    // opposed to the camelCase DOM properties) is non-portable and\r\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\r\n    // we explicitly reject properties with dashes so that authors\r\n    // developing in WebKit or IE first don't end up with\r\n    // browser-specific content by accident.\r\n\r\n    function testProps( props, prefixed ) {\r\n        for ( var i in props ) {\r\n            var prop = props[i];\r\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\r\n                return prefixed == 'pfx' ? prop : true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /*>>testprop*/\r\n\r\n    // TODO :: add testDOMProps\r\n    /**\r\n     * testDOMProps is a generic DOM property test; if a browser supports\r\n     *   a certain property, it won't return undefined for it.\r\n     */\r\n    function testDOMProps( props, obj, elem ) {\r\n        for ( var i in props ) {\r\n            var item = obj[props[i]];\r\n            if ( item !== undefined) {\r\n\r\n                // return the property name as a string\r\n                if (elem === false) return props[i];\r\n\r\n                // let's bind a function\r\n                if (is(item, 'function')){\r\n                    // default to autobind unless override\r\n                    return item.bind(elem || obj);\r\n                }\r\n\r\n                // return the unbound function or obj or value\r\n                return item;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /*>>testallprops*/\r\n    /**\r\n     * testPropsAll tests a list of DOM properties we want to check against.\r\n     *   We specify literally ALL possible (known and/or likely) properties on\r\n     *   the element including the non-vendor prefixed one, for forward-\r\n     *   compatibility.\r\n     */\r\n    function testPropsAll( prop, prefixed, elem ) {\r\n\r\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\r\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\r\n\r\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\r\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\r\n            return testProps(props, prefixed);\r\n\r\n            // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\r\n        } else {\r\n            props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\r\n            return testDOMProps(props, prefixed, elem);\r\n        }\r\n    }\r\n    /*>>testallprops*/\r\n\r\n\r\n    /**\r\n     * Tests\r\n     * -----\r\n     */\r\n\r\n        // The *new* flexbox\r\n        // dev.w3.org/csswg/css3-flexbox\r\n\r\n    tests['flexbox'] = function() {\r\n        return testPropsAll('flexWrap');\r\n    };\r\n\r\n    // The *old* flexbox\r\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\r\n\r\n    tests['flexboxlegacy'] = function() {\r\n        return testPropsAll('boxDirection');\r\n    };\r\n\r\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\r\n    // so we actually have to call getContext() to verify\r\n    // github.com/Modernizr/Modernizr/issues/issue/97/\r\n\r\n    tests['canvas'] = function() {\r\n        var elem = document.createElement('canvas');\r\n        return !!(elem.getContext && elem.getContext('2d'));\r\n    };\r\n\r\n    tests['canvastext'] = function() {\r\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\r\n    };\r\n\r\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\r\n\r\n    // We do a soft detect which may false positive in order to avoid\r\n    // an expensive context creation: bugzil.la/732441\r\n\r\n    tests['webgl'] = function() {\r\n        return !!window.WebGLRenderingContext;\r\n    };\r\n\r\n    /*\r\n     * The Modernizr.touch test only indicates if the browser supports\r\n     *    touch events, which does not necessarily reflect a touchscreen\r\n     *    device, as evidenced by tablets running Windows 7 or, alas,\r\n     *    the Palm Pre / WebOS (touch) phones.\r\n     *\r\n     * Additionally, Chrome (desktop) used to lie about its support on this,\r\n     *    but that has since been rectified: crbug.com/36415\r\n     *\r\n     * We also test for Firefox 4 Multitouch Support.\r\n     *\r\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\r\n     */\r\n\r\n    tests['touch'] = function() {\r\n        var bool;\r\n\r\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\r\n            bool = true;\r\n        } else {\r\n            injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\r\n                bool = node.offsetTop === 9;\r\n            });\r\n        }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // geolocation is often considered a trivial feature detect...\r\n    // Turns out, it's quite tricky to get right:\r\n    //\r\n    // Using !!navigator.geolocation does two things we don't want. It:\r\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\r\n    //   2. Disables page caching in WebKit: webk.it/43956\r\n    //\r\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\r\n    // a false positive that would throw an exception: bugzil.la/688158\r\n\r\n    tests['geolocation'] = function() {\r\n        return 'geolocation' in navigator;\r\n    };\r\n\r\n\r\n    tests['postmessage'] = function() {\r\n        return !!window.postMessage;\r\n    };\r\n\r\n\r\n    // Chrome incognito mode used to throw an exception when using openDatabase\r\n    // It doesn't anymore.\r\n    tests['websqldatabase'] = function() {\r\n        return !!window.openDatabase;\r\n    };\r\n\r\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\r\n    // - Webkit's implementation is accessible through webkitIndexedDB\r\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\r\n    // For speed, we don't test the legacy (and beta-only) indexedDB\r\n    tests['indexedDB'] = function() {\r\n        return !!testPropsAll(\"indexedDB\", window);\r\n    };\r\n\r\n    // documentMode logic from YUI to filter out IE8 Compat Mode\r\n    //   which false positives.\r\n    tests['hashchange'] = function() {\r\n        return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\r\n    };\r\n\r\n    // Per 1.6:\r\n    // This used to be Modernizr.historymanagement but the longer\r\n    // name has been deprecated in favor of a shorter and property-matching one.\r\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\r\n    // and in the first release thereafter disappear entirely.\r\n    tests['history'] = function() {\r\n        return !!(window.history && history.pushState);\r\n    };\r\n\r\n    tests['draganddrop'] = function() {\r\n        var div = document.createElement('div');\r\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\r\n    };\r\n\r\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\r\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\r\n    // FF10 still uses prefixes, so check for it until then.\r\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\r\n    tests['websockets'] = function() {\r\n        return 'WebSocket' in window || 'MozWebSocket' in window;\r\n    };\r\n\r\n\r\n    // css-tricks.com/rgba-browser-support/\r\n    tests['rgba'] = function() {\r\n        // Set an rgba() color and check the returned value\r\n\r\n        setCss('background-color:rgba(150,255,150,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba');\r\n    };\r\n\r\n    tests['hsla'] = function() {\r\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\r\n        //   except IE9 who retains it as hsla\r\n\r\n        setCss('background-color:hsla(120,40%,100%,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\r\n    };\r\n\r\n    tests['multiplebgs'] = function() {\r\n        // Setting multiple images AND a color on the background shorthand property\r\n        //  and then querying the style.background property value for the number of\r\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\r\n\r\n        setCss('background:url(https://),url(https://),red url(https://)');\r\n\r\n        // If the UA supports multiple backgrounds, there should be three occurrences\r\n        //   of the string \"url(\" in the return value for elemStyle.background\r\n\r\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\r\n    };\r\n\r\n\r\n\r\n    // this will false positive in Opera Mini\r\n    //   github.com/Modernizr/Modernizr/issues/396\r\n\r\n    tests['backgroundsize'] = function() {\r\n        return testPropsAll('backgroundSize');\r\n    };\r\n\r\n    tests['borderimage'] = function() {\r\n        return testPropsAll('borderImage');\r\n    };\r\n\r\n\r\n    // Super comprehensive table about all the unique implementations of\r\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\r\n\r\n    tests['borderradius'] = function() {\r\n        return testPropsAll('borderRadius');\r\n    };\r\n\r\n    // WebOS unfortunately false positives on this test.\r\n    tests['boxshadow'] = function() {\r\n        return testPropsAll('boxShadow');\r\n    };\r\n\r\n    // FF3.0 will false positive on this test\r\n    tests['textshadow'] = function() {\r\n        return document.createElement('div').style.textShadow === '';\r\n    };\r\n\r\n\r\n    tests['opacity'] = function() {\r\n        // Browsers that actually have CSS Opacity implemented have done so\r\n        //  according to spec, which means their return values are within the\r\n        //  range of [0.0,1.0] - including the leading zero.\r\n\r\n        setCssAll('opacity:.55');\r\n\r\n        // The non-literal . in this regex is intentional:\r\n        //   German Chrome returns this value as 0,55\r\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\r\n        return (/^0.55$/).test(mStyle.opacity);\r\n    };\r\n\r\n\r\n    // Note, Android < 4 will pass this test, but can only animate\r\n    //   a single property at a time\r\n    //   daneden.me/2011/12/putting-up-with-androids-bullshit/\r\n    tests['cssanimations'] = function() {\r\n        return testPropsAll('animationName');\r\n    };\r\n\r\n\r\n    tests['csscolumns'] = function() {\r\n        return testPropsAll('columnCount');\r\n    };\r\n\r\n\r\n    tests['cssgradients'] = function() {\r\n        /**\r\n         * For CSS Gradients syntax, please see:\r\n         * webkit.org/blog/175/introducing-css-gradients/\r\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\r\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\r\n         * dev.w3.org/csswg/css3-images/#gradients-\r\n         */\r\n\r\n        var str1 = 'background-image:',\r\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\r\n            str3 = 'linear-gradient(left top,#9f9, white);';\r\n\r\n        setCss(\r\n            // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\r\n            (str1 + '-webkit- '.split(' ').join(str2 + str1) +\r\n                // standard syntax             // trailing 'background-image:'\r\n                prefixes.join(str3 + str1)).slice(0, -str1.length)\r\n        );\r\n\r\n        return contains(mStyle.backgroundImage, 'gradient');\r\n    };\r\n\r\n\r\n    tests['cssreflections'] = function() {\r\n        return testPropsAll('boxReflect');\r\n    };\r\n\r\n\r\n    tests['csstransforms'] = function() {\r\n        return !!testPropsAll('transform');\r\n    };\r\n\r\n\r\n    tests['csstransforms3d'] = function() {\r\n\r\n        var ret = !!testPropsAll('perspective');\r\n\r\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\r\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\r\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\r\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\r\n        if ( ret && 'webkitPerspective' in docElement.style ) {\r\n\r\n            // Webkit allows this media query to succeed only if the feature is enabled.\r\n            // `@media (transform-3d),(-webkit-transform-3d){ ... }`\r\n            injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\r\n                ret = node.offsetLeft === 9 && node.offsetHeight === 3;\r\n            });\r\n        }\r\n        return ret;\r\n    };\r\n\r\n\r\n    tests['csstransitions'] = function() {\r\n        return testPropsAll('transition');\r\n    };\r\n\r\n\r\n    /*>>fontface*/\r\n    // @font-face detection routine by Diego Perini\r\n    // javascript.nwbox.com/CSSSupport/\r\n\r\n    // false positives:\r\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\r\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\r\n    tests['fontface'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\r\n            var style = document.getElementById('smodernizr'),\r\n                sheet = style.sheet || style.styleSheet,\r\n                cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\r\n\r\n            bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n    /*>>fontface*/\r\n\r\n    // CSS generated content detection\r\n    tests['generatedcontent'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles(['#modernizr:after{content:\"',smile,'\";visibility:hidden}'].join(''), function( node ) {\r\n            bool = node.offsetHeight >= 1;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n\r\n    // These tests evaluate support of the video/audio elements, as well as\r\n    // testing what types of content they support.\r\n    //\r\n    // We're using the Boolean constructor here, so that we can extend the value\r\n    // e.g.  Modernizr.video     // true\r\n    //       Modernizr.video.ogg // 'probably'\r\n    //\r\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\r\n    //                     thx to NielsLeenheer and zcorpan\r\n\r\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\r\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\r\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\r\n\r\n    tests['video'] = function() {\r\n        var elem = document.createElement('video'),\r\n            bool = false;\r\n\r\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\r\n\r\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\r\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\r\n\r\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\r\n            }\r\n\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n    tests['audio'] = function() {\r\n        var elem = document.createElement('audio'),\r\n            bool = false;\r\n\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\r\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\r\n\r\n                // Mimetypes accepted:\r\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\r\n                //   bit.ly/iphoneoscodecs\r\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\r\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\r\n                    elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\r\n            }\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // In FF4, if disabled, window.localStorage should === null.\r\n\r\n    // Normally, we could not test that directly and need to do a\r\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\r\n    //   throw bugzil.la/365772 if cookies are disabled\r\n\r\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\r\n    // will throw the exception:\r\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\r\n    // Peculiarly, getItem and removeItem calls do not throw.\r\n\r\n    // Because we are forced to try/catch this, we'll go aggressive.\r\n\r\n    // Just FWIW: IE8 Compat mode supports these features completely:\r\n    //   www.quirksmode.org/dom/html5.html\r\n    // But IE8 doesn't support either with local files\r\n\r\n    tests['localstorage'] = function() {\r\n        try {\r\n            localStorage.setItem(mod, mod);\r\n            localStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    tests['sessionstorage'] = function() {\r\n        try {\r\n            sessionStorage.setItem(mod, mod);\r\n            sessionStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    tests['webworkers'] = function() {\r\n        return !!window.Worker;\r\n    };\r\n\r\n\r\n    tests['applicationcache'] = function() {\r\n        return !!window.applicationCache;\r\n    };\r\n\r\n\r\n    // Thanks to Erik Dahlstrom\r\n    tests['svg'] = function() {\r\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\r\n    };\r\n\r\n    // specifically for SVG inline in HTML, not within XHTML\r\n    // test page: paulirish.com/demo/inline-svg\r\n    tests['inlinesvg'] = function() {\r\n        var div = document.createElement('div');\r\n        div.innerHTML = '<svg/>';\r\n        return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\r\n    };\r\n\r\n    // SVG SMIL animation\r\n    tests['smil'] = function() {\r\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\r\n    };\r\n\r\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\r\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\r\n\r\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\r\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\r\n    tests['svgclippaths'] = function() {\r\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\r\n    };\r\n\r\n    /*>>webforms*/\r\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\r\n    // Hold this guy to execute in a moment.\r\n    function webforms() {\r\n        /*>>input*/\r\n        // Run through HTML5's new input attributes to see if the UA understands any.\r\n        // We're using f which is the <input> element created early on\r\n        // Mike Taylr has created a comprehensive resource for testing these attributes\r\n        //   when applied to all input types:\r\n        //   miketaylr.com/code/input-type-attr.html\r\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\r\n\r\n        // Only input placeholder is tested while textarea's placeholder is not.\r\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\r\n        // Both tests are available in feature-detects/forms-placeholder.js\r\n        Modernizr['input'] = (function( props ) {\r\n            for ( var i = 0, len = props.length; i < len; i++ ) {\r\n                attrs[ props[i] ] = !!(props[i] in inputElem);\r\n            }\r\n            if (attrs.list){\r\n                // safari false positive's on datalist: webk.it/74252\r\n                // see also github.com/Modernizr/Modernizr/issues/146\r\n                attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\r\n            }\r\n            return attrs;\r\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\r\n        /*>>input*/\r\n\r\n        /*>>inputtypes*/\r\n        // Run through HTML5's new input types to see if the UA understands any.\r\n        //   This is put behind the tests runloop because it doesn't return a\r\n        //   true/false like all the other tests; instead, it returns an object\r\n        //   containing each input type with its corresponding true/false value\r\n\r\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\r\n        Modernizr['inputtypes'] = (function(props) {\r\n\r\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\r\n\r\n                inputElem.setAttribute('type', inputElemType = props[i]);\r\n                bool = inputElem.type !== 'text';\r\n\r\n                // We first check to see if the type we give it sticks..\r\n                // If the type does, we feed it a textual value, which shouldn't be valid.\r\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\r\n                if ( bool ) {\r\n\r\n                    inputElem.value         = smile;\r\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\r\n\r\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\r\n\r\n                        docElement.appendChild(inputElem);\r\n                        defaultView = document.defaultView;\r\n\r\n                        // Safari 2-4 allows the smiley as a value, despite making a slider\r\n                        bool =  defaultView.getComputedStyle &&\r\n                            defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\r\n                            // Mobile android web browser has false positive, so must\r\n                            // check the height to see if the widget is actually there.\r\n                            (inputElem.offsetHeight !== 0);\r\n\r\n                        docElement.removeChild(inputElem);\r\n\r\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\r\n                        // Spec doesn't define any special parsing or detectable UI\r\n                        //   behaviors so we pass these through as true\r\n\r\n                        // Interestingly, opera fails the earlier test, so it doesn't\r\n                        //  even make it here.\r\n\r\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\r\n                        // Real url and email support comes with prebaked validation.\r\n                        bool = inputElem.checkValidity && inputElem.checkValidity() === false;\r\n\r\n                    } else {\r\n                        // If the upgraded input component rejects the :) text, we got a winner\r\n                        bool = inputElem.value != smile;\r\n                    }\r\n                }\r\n\r\n                inputs[ props[i] ] = !!bool;\r\n            }\r\n            return inputs;\r\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\r\n        /*>>inputtypes*/\r\n    }\r\n    /*>>webforms*/\r\n\r\n\r\n    // End of test definitions\r\n    // -----------------------\r\n\r\n\r\n\r\n    // Run through all tests and detect their support in the current UA.\r\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\r\n    for ( var feature in tests ) {\r\n        if ( hasOwnProp(tests, feature) ) {\r\n            // run the test, throw the return value into the Modernizr,\r\n            //   then based on that boolean, define an appropriate className\r\n            //   and push it into an array of classes we'll join later.\r\n            featureName  = feature.toLowerCase();\r\n            Modernizr[featureName] = tests[feature]();\r\n\r\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\r\n        }\r\n    }\r\n\r\n    /*>>webforms*/\r\n    // input tests need to run.\r\n    Modernizr.input || webforms();\r\n    /*>>webforms*/\r\n\r\n\r\n    /**\r\n     * addTest allows the user to define their own feature tests\r\n     * the result will be added onto the Modernizr object,\r\n     * as well as an appropriate className set on the html element\r\n     *\r\n     * @param feature - String naming the feature\r\n     * @param test - Function returning true if feature is supported, false if not\r\n     */\r\n    Modernizr.addTest = function ( feature, test ) {\r\n        if ( typeof feature == 'object' ) {\r\n            for ( var key in feature ) {\r\n                if ( hasOwnProp( feature, key ) ) {\r\n                    Modernizr.addTest( key, feature[ key ] );\r\n                }\r\n            }\r\n        } else {\r\n\r\n            feature = feature.toLowerCase();\r\n\r\n            if ( Modernizr[feature] !== undefined ) {\r\n                // we're going to quit if you're trying to overwrite an existing test\r\n                // if we were to allow it, we'd do this:\r\n                //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\r\n                //   docElement.className = docElement.className.replace( re, '' );\r\n                // but, no rly, stuff 'em.\r\n                return Modernizr;\r\n            }\r\n\r\n            test = typeof test == 'function' ? test() : test;\r\n\r\n            if (enableClasses) {\r\n                docElement.className += ' ' + (test ? '' : 'no-') + feature;\r\n            }\r\n            Modernizr[feature] = test;\r\n\r\n        }\r\n\r\n        return Modernizr; // allow chaining.\r\n    };\r\n\r\n\r\n    // Reset modElem.cssText to nothing to reduce memory footprint.\r\n    setCss('');\r\n    modElem = inputElem = null;\r\n\r\n    /*>>shiv*/\r\n    /*! HTML5 Shiv v3.6 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed */\r\n    ;(function(window, document) {\r\n        /*jshint evil:true */\r\n        /** Preset options */\r\n        var options = window.html5 || {};\r\n\r\n        /** Used to skip problem elements */\r\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\r\n\r\n        /** Not all elements can be cloned in IE (this list can be shortend) **/\r\n        var saveClones = /^<|^(?:a|b|button|code|div|fieldset|form|h1|h2|h3|h4|h5|h6|i|iframe|img|input|label|li|link|ol|option|p|param|q|script|select|span|strong|style|table|tbody|td|textarea|tfoot|th|thead|tr|ul)$/i;\r\n\r\n        /** Detect whether the browser supports default html5 styles */\r\n        var supportsHtml5Styles;\r\n\r\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\r\n        var expando = '_html5shiv';\r\n\r\n        /** The id for the documents expando */\r\n        var expanID = 0;\r\n\r\n        /** Cached data for each document */\r\n        var expandoData = {};\r\n\r\n        /** Detect whether the browser supports unknown elements */\r\n        var supportsUnknownElements;\r\n\r\n        (function() {\r\n            try {\r\n                var a = document.createElement('a');\r\n                a.innerHTML = '<xyz></xyz>';\r\n                //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\r\n                supportsHtml5Styles = ('hidden' in a);\r\n\r\n                supportsUnknownElements = a.childNodes.length == 1 || (function() {\r\n                    // assign a false positive if unable to shiv\r\n                    (document.createElement)('a');\r\n                    var frag = document.createDocumentFragment();\r\n                    return (\r\n                        typeof frag.cloneNode == 'undefined' ||\r\n                            typeof frag.createDocumentFragment == 'undefined' ||\r\n                            typeof frag.createElement == 'undefined'\r\n                        );\r\n                }());\r\n            } catch(e) {\r\n                supportsHtml5Styles = true;\r\n                supportsUnknownElements = true;\r\n            }\r\n\r\n        }());\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * Creates a style sheet with the given CSS text and adds it to the document.\r\n         * @private\r\n         * @param {Document} ownerDocument The document.\r\n         * @param {String} cssText The CSS text.\r\n         * @returns {StyleSheet} The style element.\r\n         */\r\n        function addStyleSheet(ownerDocument, cssText) {\r\n            var p = ownerDocument.createElement('p'),\r\n                parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\r\n\r\n            p.innerHTML = 'x<style>' + cssText + '</style>';\r\n            return parent.insertBefore(p.lastChild, parent.firstChild);\r\n        }\r\n\r\n        /**\r\n         * Returns the value of `html5.elements` as an array.\r\n         * @private\r\n         * @returns {Array} An array of shived element node names.\r\n         */\r\n        function getElements() {\r\n            var elements = html5.elements;\r\n            return typeof elements == 'string' ? elements.split(' ') : elements;\r\n        }\r\n\r\n        /**\r\n         * Returns the data associated to the given document\r\n         * @private\r\n         * @param {Document} ownerDocument The document.\r\n         * @returns {Object} An object of data.\r\n         */\r\n        function getExpandoData(ownerDocument) {\r\n            var data = expandoData[ownerDocument[expando]];\r\n            if (!data) {\r\n                data = {};\r\n                expanID++;\r\n                ownerDocument[expando] = expanID;\r\n                expandoData[expanID] = data;\r\n            }\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * returns a shived element for the given nodeName and document\r\n         * @memberOf html5\r\n         * @param {String} nodeName name of the element\r\n         * @param {Document} ownerDocument The context document.\r\n         * @returns {Object} The shived element.\r\n         */\r\n        function createElement(nodeName, ownerDocument, data){\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            if(supportsUnknownElements){\r\n                return ownerDocument.createElement(nodeName);\r\n            }\r\n            if (!data) {\r\n                data = getExpandoData(ownerDocument);\r\n            }\r\n            var node;\r\n\r\n            if (data.cache[nodeName]) {\r\n                node = data.cache[nodeName].cloneNode();\r\n            } else if (saveClones.test(nodeName)) {\r\n                node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\r\n            } else {\r\n                node = data.createElem(nodeName);\r\n            }\r\n\r\n            // Avoid adding some elements to fragments in IE < 9 because\r\n            // * Attributes like `name` or `type` cannot be set/changed once an element\r\n            //   is inserted into a document/fragment\r\n            // * Link elements with `src` attributes that are inaccessible, as with\r\n            //   a 403 response, will cause the tab/window to crash\r\n            // * Script elements appended to fragments will execute when their `src`\r\n            //   or `text` property is set\r\n            return node.canHaveChildren && !reSkip.test(nodeName) ? data.frag.appendChild(node) : node;\r\n        }\r\n\r\n        /**\r\n         * returns a shived DocumentFragment for the given document\r\n         * @memberOf html5\r\n         * @param {Document} ownerDocument The context document.\r\n         * @returns {Object} The shived DocumentFragment.\r\n         */\r\n        function createDocumentFragment(ownerDocument, data){\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            if(supportsUnknownElements){\r\n                return ownerDocument.createDocumentFragment();\r\n            }\r\n            data = data || getExpandoData(ownerDocument);\r\n            var clone = data.frag.cloneNode(),\r\n                i = 0,\r\n                elems = getElements(),\r\n                l = elems.length;\r\n            for(;i<l;i++){\r\n                clone.createElement(elems[i]);\r\n            }\r\n            return clone;\r\n        }\r\n\r\n        /**\r\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\r\n         * @private\r\n         * @param {Document|DocumentFragment} ownerDocument The document.\r\n         * @param {Object} data of the document.\r\n         */\r\n        function shivMethods(ownerDocument, data) {\r\n            if (!data.cache) {\r\n                data.cache = {};\r\n                data.createElem = ownerDocument.createElement;\r\n                data.createFrag = ownerDocument.createDocumentFragment;\r\n                data.frag = data.createFrag();\r\n            }\r\n\r\n\r\n            ownerDocument.createElement = function(nodeName) {\r\n                //abort shiv\r\n                if (!html5.shivMethods) {\r\n                    return data.createElem(nodeName);\r\n                }\r\n                return createElement(nodeName, ownerDocument, data);\r\n            };\r\n\r\n            ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\r\n                'var n=f.cloneNode(),c=n.createElement;' +\r\n                'h.shivMethods&&(' +\r\n                // unroll the `createElement` calls\r\n                getElements().join().replace(/\\w+/g, function(nodeName) {\r\n                    data.createElem(nodeName);\r\n                    data.frag.createElement(nodeName);\r\n                    return 'c(\"' + nodeName + '\")';\r\n                }) +\r\n                ');return n}'\r\n            )(html5, data.frag);\r\n        }\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * Shivs the given document.\r\n         * @memberOf html5\r\n         * @param {Document} ownerDocument The document to shiv.\r\n         * @returns {Document} The shived document.\r\n         */\r\n        function shivDocument(ownerDocument) {\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            var data = getExpandoData(ownerDocument);\r\n\r\n            if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\r\n                data.hasCSS = !!addStyleSheet(ownerDocument,\r\n                    // corrects block display not defined in IE6/7/8/9\r\n                    'article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}' +\r\n                        // adds styling not present in IE6/7/8/9\r\n                        'mark{background:#FF0;color:#000}'\r\n                );\r\n            }\r\n            if (!supportsUnknownElements) {\r\n                shivMethods(ownerDocument, data);\r\n            }\r\n            return ownerDocument;\r\n        }\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * The `html5` object is exposed so that more elements can be shived and\r\n         * existing shiving can be detected on iframes.\r\n         * @type Object\r\n         * @example\r\n         *\r\n         * // options can be changed before the script is included\r\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\r\n         */\r\n        var html5 = {\r\n\r\n            /**\r\n             * An array or space separated string of node names of the elements to shiv.\r\n             * @memberOf html5\r\n             * @type Array|String\r\n             */\r\n            'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video',\r\n\r\n            /**\r\n             * A flag to indicate that the HTML5 style sheet should be inserted.\r\n             * @memberOf html5\r\n             * @type Boolean\r\n             */\r\n            'shivCSS': (options.shivCSS !== false),\r\n\r\n            /**\r\n             * Is equal to true if a browser supports creating unknown/HTML5 elements\r\n             * @memberOf html5\r\n             * @type boolean\r\n             */\r\n            'supportsUnknownElements': supportsUnknownElements,\r\n\r\n            /**\r\n             * A flag to indicate that the document's `createElement` and `createDocumentFragment`\r\n             * methods should be overwritten.\r\n             * @memberOf html5\r\n             * @type Boolean\r\n             */\r\n            'shivMethods': (options.shivMethods !== false),\r\n\r\n            /**\r\n             * A string to describe the type of `html5` object (\"default\" or \"default print\").\r\n             * @memberOf html5\r\n             * @type String\r\n             */\r\n            'type': 'default',\r\n\r\n            // shivs the document according to the specified `html5` object options\r\n            'shivDocument': shivDocument,\r\n\r\n            //creates a shived element\r\n            createElement: createElement,\r\n\r\n            //creates a shived documentFragment\r\n            createDocumentFragment: createDocumentFragment\r\n        };\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        // expose html5\r\n        window.html5 = html5;\r\n\r\n        // shiv the document\r\n        shivDocument(document);\r\n\r\n    }(this, document));\r\n    /*>>shiv*/\r\n\r\n    // Assign private properties to the return object with prefix\r\n    Modernizr._version      = version;\r\n\r\n    // expose these for the plugin API. Look in the source for how to join() them against your input\r\n    /*>>prefixes*/\r\n    Modernizr._prefixes     = prefixes;\r\n    /*>>prefixes*/\r\n    /*>>domprefixes*/\r\n    Modernizr._domPrefixes  = domPrefixes;\r\n    Modernizr._cssomPrefixes  = cssomPrefixes;\r\n    /*>>domprefixes*/\r\n\r\n    /*>>mq*/\r\n    // Modernizr.mq tests a given media query, live against the current state of the window\r\n    // A few important notes:\r\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\r\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\r\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\r\n    //       Modernizr.mq('(min-width:0)')\r\n    // usage:\r\n    // Modernizr.mq('only screen and (max-width:768)')\r\n    Modernizr.mq            = testMediaQuery;\r\n    /*>>mq*/\r\n\r\n    /*>>hasevent*/\r\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\r\n    // Modernizr.hasEvent('gesturestart', elem)\r\n    Modernizr.hasEvent      = isEventSupported;\r\n    /*>>hasevent*/\r\n\r\n    /*>>testprop*/\r\n    // Modernizr.testProp() investigates whether a given style property is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testProp('pointerEvents')\r\n    Modernizr.testProp      = function(prop){\r\n        return testProps([prop]);\r\n    };\r\n    /*>>testprop*/\r\n\r\n    /*>>testallprops*/\r\n    // Modernizr.testAllProps() investigates whether a given style property,\r\n    //   or any of its vendor-prefixed variants, is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testAllProps('boxSizing')\r\n    Modernizr.testAllProps  = testPropsAll;\r\n    /*>>testallprops*/\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\r\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\r\n    Modernizr.testStyles    = injectElementWithStyles;\r\n    /*>>teststyles*/\r\n\r\n\r\n    /*>>prefixed*/\r\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\r\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\r\n\r\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\r\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\r\n    //\r\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\r\n\r\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\r\n    //\r\n    //     var transEndEventNames = {\r\n    //       'WebkitTransition' : 'webkitTransitionEnd',\r\n    //       'MozTransition'    : 'transitionend',\r\n    //       'OTransition'      : 'oTransitionEnd',\r\n    //       'msTransition'     : 'MSTransitionEnd',\r\n    //       'transition'       : 'transitionend'\r\n    //     },\r\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\r\n\r\n    Modernizr.prefixed      = function(prop, obj, elem){\r\n        if(!obj) {\r\n            return testPropsAll(prop, 'pfx');\r\n        } else {\r\n            // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\r\n            return testPropsAll(prop, obj, elem);\r\n        }\r\n    };\r\n    /*>>prefixed*/\r\n\r\n\r\n    /*>>cssclasses*/\r\n    // Remove \"no-js\" class from <html> element, if it exists:\r\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\r\n\r\n        // Add the new classes to the <html> element.\r\n        (enableClasses ? ' js ' + classes.join(' ') : '');\r\n    /*>>cssclasses*/\r\n\r\n    return Modernizr;\r\n\r\n})(this, this.document);","PayPal_Braintree/js/braintree.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/lib/view/utils/dom-observer',\r\n    'mage/translate',\r\n    'PayPal_Braintree/js/validator',\r\n    'braintree',\r\n    'braintreeHostedFields'\r\n], function ($, Class, alert, domObserver, $t, validator, client, hostedFields) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        defaults: {\r\n            $selector: null,\r\n            selector: 'edit_form',\r\n            container: 'payment_form_braintree',\r\n            active: false,\r\n            scriptLoaded: false,\r\n            braintree: null,\r\n            selectedCardType: null,\r\n            imports: {\r\n                onActiveChange: 'active'\r\n            },\r\n            hostedFieldsInstance: null\r\n        },\r\n\r\n        /**\r\n         * Set list of observable attributes\r\n         * @returns {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            var self = this;\r\n\r\n            validator.setConfig(this);\r\n\r\n            self.$selector = $('#' + self.selector);\r\n            this._super()\r\n                .observe([\r\n                    'active',\r\n                    'scriptLoaded',\r\n                    'selectedCardType'\r\n                ]);\r\n\r\n            // re-init payment method events\r\n            self.$selector.off('changePaymentMethod.' + this.code)\r\n                .on('changePaymentMethod.' + this.code, this.changePaymentMethod.bind(this));\r\n\r\n            // listen block changes\r\n            domObserver.get('#' + self.container, function () {\r\n                if (self.scriptLoaded()) {\r\n                    self.$selector.off('submit');\r\n                    self.initBraintree();\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enable/disable current payment method\r\n         * @param {Object} event\r\n         * @param {String} method\r\n         * @returns {exports.changePaymentMethod}\r\n         */\r\n        changePaymentMethod: function (event, method) {\r\n            this.active(method === this.code);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggered when payment changed\r\n         * @param {Boolean} isActive\r\n         */\r\n        onActiveChange: function (isActive) {\r\n            if (!isActive) {\r\n                this.$selector.off('submitOrder.braintree');\r\n\r\n                return;\r\n            }\r\n            this.disableEventListeners();\r\n\r\n            if (typeof window.order !== 'undefined') {\r\n                window.order.addExcludedPaymentMethod(this.code);\r\n            }\r\n\r\n            if (!this.clientToken) {\r\n                this.error($.mage.__('This payment is not available'));\r\n\r\n                return;\r\n            }\r\n\r\n            this.enableEventListeners();\r\n\r\n            if (!this.scriptLoaded()) {\r\n                this.initBraintree();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup Braintree SDK\r\n         */\r\n        initBraintree: function () {\r\n            var self = this;\r\n            this.scriptLoaded(true);\r\n\r\n            self.disableEventListeners();\r\n\r\n            try {\r\n                $('body').trigger('processStart');\r\n\r\n                client.create({\r\n                    authorization: self.clientToken\r\n                }, function (clientErr, clientInstance) {\r\n                    if (clientErr) {\r\n                        console.error('Error!', clientErr);\r\n                        return self.error(response.clientErr);\r\n                    }\r\n\r\n                    hostedFields.create({\r\n                        client: clientInstance,\r\n                        fields: self.getHostedFields()\r\n                    }, function (createErr, hostedFieldsInstance) {\r\n                        if (createErr) {\r\n                            self.error($t(createErr));\r\n                            console.error('Error!', createErr);\r\n                            return;\r\n                        }\r\n\r\n                        self.hostedFieldsInstance = hostedFieldsInstance;\r\n                        self.enableEventListeners();\r\n\r\n                        $('body').trigger('processStop');\r\n                    }.bind(this));\r\n                }.bind(this));\r\n            } catch (e) {\r\n                $('body').trigger('processStop');\r\n                self.error(e.message);\r\n                console.log(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get hosted fields configuration\r\n         * @returns {Object}\r\n         */\r\n        getHostedFields: function () {\r\n            var self = this,\r\n                fields = {\r\n                    number: {\r\n                        selector: self.getSelector('cc_number'),\r\n                        placeholder: $t('4111 1111 1111 1111')\r\n                    },\r\n                    expirationMonth: {\r\n                        selector: self.getSelector('cc_exp_month'),\r\n                        placeholder: $t('MM')\r\n                    },\r\n                    expirationYear: {\r\n                        selector: self.getSelector('cc_exp_year'),\r\n                        placeholder: $t('YY')\r\n                    }\r\n                };\r\n\r\n            if (self.useCvv) {\r\n                fields.cvv = {\r\n                    selector: self.getSelector('cc_cid'),\r\n                    placeholder: $t('123')\r\n                };\r\n            }\r\n\r\n            return fields;\r\n        },\r\n\r\n        /**\r\n         * Show alert message\r\n         * @param {String} message\r\n         */\r\n        error: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Enable form event listeners\r\n         */\r\n        enableEventListeners: function () {\r\n            this.$selector.on('submitOrder.braintree', this.submitOrder.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Disable form event listeners\r\n         */\r\n        disableEventListeners: function () {\r\n            this.$selector.off('submitOrder');\r\n            this.$selector.off('submit');\r\n        },\r\n\r\n        /**\r\n         * Store payment details\r\n         * @param {String} nonce\r\n         */\r\n        setPaymentDetails: function (nonce) {\r\n            var $container = $('#' + this.container);\r\n\r\n            $container.find('[name=\"payment[payment_method_nonce]\"]').val(nonce);\r\n        },\r\n\r\n        /**\r\n         * Trigger order submit\r\n         */\r\n        submitOrder: function () {\r\n            this.$selector.validate().form();\r\n            this.$selector.trigger('afterValidate.beforeSubmit');\r\n            $('body').trigger('processStop');\r\n\r\n            // validate parent form\r\n            if (this.$selector.validate().errorList.length) {\r\n                return false;\r\n            }\r\n\r\n            $('body').trigger('processStart');\r\n            this.tokenizeHostedFields();\r\n        },\r\n\r\n        /**\r\n         * Place order\r\n         */\r\n        placeOrder: function () {\r\n            $('#' + this.selector).trigger('realOrder');\r\n        },\r\n\r\n        /**\r\n         * Get list of currently available card types\r\n         * @returns {Array}\r\n         */\r\n        getCcAvailableTypes: function () {\r\n            var types = [],\r\n                $options = $(this.getSelector('cc_type')).find('option');\r\n\r\n            $.map($options, function (option) {\r\n                types.push($(option).val());\r\n            });\r\n\r\n            return types;\r\n        },\r\n\r\n        /**\r\n         * Get jQuery selector\r\n         * @param {String} field\r\n         * @returns {String}\r\n         */\r\n        getSelector: function (field) {\r\n            return '#' + this.code + '_' + field;\r\n        },\r\n\r\n        tokenizeHostedFields: function () {\r\n            this.hostedFieldsInstance.tokenize({\r\n                vault: false // vault or no?\r\n            }, function (tokenizeErr, payload) {\r\n                if (tokenizeErr) {\r\n                    $('body').trigger('processStop');\r\n                    switch (tokenizeErr.code) {\r\n                        case 'HOSTED_FIELDS_FIELDS_EMPTY':\r\n                            // occurs when none of the fields are filled in\r\n                            this.error($t('Please enter a card number, expiration date and CVV'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_FIELDS_INVALID':\r\n                            // occurs when certain fields do not pass client side validation\r\n                            this.error($t('Please correct the problems with the Credit Card fields.'));\r\n                            console.error('Some fields are invalid:', tokenizeErr.details.invalidFieldKeys);\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':\r\n                            // occurs when:\r\n                            //   * the client token used for client authorization was generated\r\n                            //     with a customer ID and the fail on duplicate payment method\r\n                            //     option is set to true\r\n                            //   * the card being tokenized has previously been vaulted (with any customer)\r\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.fail_on_duplicate_payment_method\r\n                            this.error($t('The payment method used, already exists in the user\\'s vault. Please use the vault option instead.'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':\r\n                            // occurs when:\r\n                            //   * the client token used for client authorization was generated\r\n                            //     with a customer ID and the verify card option is set to true\r\n                            //     and you have credit card verification turned on in the Braintree\r\n                            //     control panel\r\n                            //   * the cvv does not pass verfication (https://developers.braintreepayments.com/reference/general/testing/#avs-and-cvv/cid-responses)\r\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.verify_card\r\n                            this.error($t('CVV did not pass verification'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_FAILED_TOKENIZATION':\r\n                            // occurs for any other tokenization error on the server\r\n                            this.error($t('There was an issue tokenizing the card. Please check the card is valid.'));\r\n                            console.error('Tokenization failed server side. Is the card valid?');\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':\r\n                            // occurs when the Braintree gateway cannot be contacted\r\n                            this.error($t('There was an error connecting to Braintree. Please try again.'));\r\n                            break;\r\n                        default:\r\n                            this.error($t('There was an issue processing the payment. Please try again.'));\r\n                            console.error('Braintree error', tokenizeErr);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    this.setPaymentDetails(payload.nonce);\r\n                    $('#' + this.container).find('[type=\"submit\"]').trigger('click');\r\n                }\r\n            }.bind(this));\r\n        }\r\n    });\r\n});\r\n","PayPal_Braintree/js/system.js":"require(['jquery', 'Magento_Ui/js/modal/alert', 'mage/translate'], function ($, alert, $t) {\r\n    window.braintreeValidator = function (endpoint, env_id) {\r\n        env_id = $('[data-ui-id=\"' + env_id + '\"]').val();\r\n\r\n        var merch_id = '', public_id = '', private_id = '';\r\n\r\n        if (env_id === 'sandbox') {\r\n            merch_id = $('[data-ui-id=\"text-groups-braintree-section-groups-braintree-groups-braintree-required-fields-sandbox-merchant-id-value\"]').val();\r\n            public_id = $('[data-ui-id=\"password-groups-braintree-section-groups-braintree-groups-braintree-required-fields-sandbox-public-key-value\"]').val();\r\n            private_id = $('[data-ui-id=\"password-groups-braintree-section-groups-braintree-groups-braintree-required-fields-sandbox-private-key-value\"]').val();\r\n        } else {\r\n            merch_id = $('[data-ui-id=\"text-groups-braintree-section-groups-braintree-groups-braintree-required-fields-merchant-id-value\"]').val();\r\n            public_id = $('[data-ui-id=\"password-groups-braintree-section-groups-braintree-groups-braintree-required-fields-public-key-value\"]').val();\r\n            private_id = $('[data-ui-id=\"password-groups-braintree-section-groups-braintree-groups-braintree-required-fields-private-key-value\"]').val();\r\n        }\r\n\r\n        /* Remove previous success message if present */\r\n        if ($(\".braintree-credentials-success-message\")) {\r\n            $(\".braintree-credentials-success-message\").remove();\r\n        }\r\n\r\n        /* Basic field validation */\r\n        var errors = [];\r\n\r\n        if (!env_id || env_id !== 'sandbox' && env_id !== 'production') {\r\n            errors.push($t(\"Please select an Environment\"));\r\n        }\r\n\r\n        if (!merch_id) {\r\n            errors.push($t(\"Please enter a Merchant ID\"));\r\n        }\r\n\r\n        if (!public_id) {\r\n            errors.push($t('Please enter a Public Key'));\r\n        }\r\n\r\n        if (!private_id) {\r\n            errors.push($t('Please enter a Private Key'));\r\n        }\r\n\r\n        if (errors.length > 0) {\r\n            alert({\r\n                title: $t('Braintree Credential Validation Failed'),\r\n                content:  errors.join('<br />')\r\n            });\r\n            return false;\r\n        }\r\n\r\n        $(this).text($t(\"We're validating your credentials...\")).attr('disabled', true);\r\n\r\n        var self = this;\r\n        $.post(endpoint, {\r\n            environment: env_id,\r\n            merchant_id: merch_id,\r\n            public_key: public_id,\r\n            private_key: private_id\r\n        }).done(function () {\r\n            $('<div class=\"message message-success braintree-credentials-success-message\">' + $t(\"Your credentials are valid.\") + '</div>').insertAfter(self);\r\n        }).fail(function () {\r\n            alert({\r\n                title: $t('Braintree Credential Validation Failed'),\r\n                content: $t('Your Braintree Credentials could not be validated. Please ensure you have selected the correct environment and entered a valid Merchant ID, Public Key and Private Key.')\r\n            });\r\n        }).always(function () {\r\n            $(self).text($t(\"Validate Credentials\")).attr('disabled', false);\r\n        });\r\n    }\r\n});","PayPal_Braintree/js/validator.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return {\r\n        config: {},\r\n\r\n        /**\r\n         * Set configuration\r\n         * @param {Object} config\r\n         */\r\n        setConfig: function (config) {\r\n            this.config = config;\r\n        },\r\n\r\n        /**\r\n         * Get List of available card types\r\n         * @returns {*|exports.defaults.availableCardTypes|{}}\r\n         */\r\n        getAvailableCardTypes: function () {\r\n            return this.config.availableCardTypes;\r\n        },\r\n\r\n        /**\r\n         * Get list of card types\r\n         * @returns {Object}\r\n         */\r\n        getCcTypesMapper: function () {\r\n            return this.config.ccTypesMapper;\r\n        },\r\n\r\n        /**\r\n         * Find mage card type by Braintree type\r\n         * @param {String} type\r\n         * @param {Object} availableTypes\r\n         * @returns {*}\r\n         */\r\n        getMageCardType: function (type, availableTypes) {\r\n            var storedCardType = null,\r\n                mapper = this.getCcTypesMapper();\r\n\r\n            if (type && typeof mapper[type] !== 'undefined') {\r\n                storedCardType = mapper[type];\r\n\r\n                if (_.indexOf(availableTypes, storedCardType) !== -1) {\r\n                    return storedCardType;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Filter list of available card types\r\n         * @param {Object} availableTypes\r\n         * @param {Object} countrySpecificCardTypes\r\n         * @returns {Object}\r\n         */\r\n        collectTypes: function (availableTypes, countrySpecificCardTypes) {\r\n            var key,\r\n                filteredTypes = [];\r\n\r\n            for (key in availableTypes) {\r\n                if (_.indexOf(countrySpecificCardTypes, availableTypes[key]) !== -1) {\r\n                    filteredTypes.push(availableTypes[key]);\r\n                }\r\n            }\r\n\r\n            return filteredTypes;\r\n        },\r\n\r\n        /**\r\n         * Get list of card types for country\r\n         * @param {String} countryId\r\n         * @returns {*}\r\n         */\r\n        getCountrySpecificCardTypes: function (countryId) {\r\n            if (typeof this.config.countrySpecificCardTypes[countryId] !== 'undefined') {\r\n                return this.config.countrySpecificCardTypes[countryId];\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n});\r\n","PayPal_Braintree/js/vault.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Ui/js/modal/alert'\r\n], function ($, Class, alert) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            $selector: null,\r\n            selector: 'edit_form',\r\n            $container: null\r\n        },\r\n\r\n        /**\r\n         * Set list of observable attributes\r\n         * @returns {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            var self = this;\r\n\r\n            self.$selector = $('#' + self.selector);\r\n            self.$container =  $('#' + self.container);\r\n            self.$selector.on(\r\n                'setVaultNotActive.' + self.getCode(),\r\n                function () {\r\n                    self.$selector.off('submitOrder.' + self.getCode());\r\n                }\r\n            );\r\n            self._super();\r\n\r\n            self.initEventHandlers();\r\n\r\n            return self;\r\n        },\r\n\r\n        /**\r\n         * Get payment code\r\n         * @returns {String}\r\n         */\r\n        getCode: function () {\r\n            return this.code;\r\n        },\r\n\r\n        /**\r\n         * Init event handlers\r\n         */\r\n        initEventHandlers: function () {\r\n            $(this.$container).find('[name=\"payment[token_switcher]\"]')\r\n                .on('click', this.selectPaymentMethod.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Select current payment token\r\n         */\r\n        selectPaymentMethod: function () {\r\n            this.disableEventListeners();\r\n            this.enableEventListeners();\r\n        },\r\n\r\n        /**\r\n         * Enable form event listeners\r\n         */\r\n        enableEventListeners: function () {\r\n            this.$selector.on('submitOrder.' + this.getCode(), this.submitOrder.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Disable form event listeners\r\n         */\r\n        disableEventListeners: function () {\r\n            this.$selector.off('submitOrder');\r\n        },\r\n\r\n        /**\r\n         * Pre submit for order\r\n         * @returns {Boolean}\r\n         */\r\n        submitOrder: function () {\r\n            this.$selector.validate().form();\r\n            this.$selector.trigger('afterValidate.beforeSubmit');\r\n            $('body').trigger('processStop');\r\n\r\n            // validate parent form\r\n            if (this.$selector.validate().errorList.length) {\r\n                return false;\r\n            }\r\n            this.getPaymentMethodNonce();\r\n        },\r\n\r\n        /**\r\n         * Place order\r\n         */\r\n        placeOrder: function () {\r\n            this.$selector.trigger('realOrder');\r\n        },\r\n\r\n        /**\r\n         * Send request to get payment method nonce\r\n         */\r\n        getPaymentMethodNonce: function () {\r\n            var self = this;\r\n\r\n            $('body').trigger('processStart');\r\n\r\n            $.getJSON(self.nonceUrl, {\r\n                'public_hash': self.publicHash\r\n            }).done(function (response) {\r\n                self.setPaymentDetails(response.paymentMethodNonce);\r\n                self.placeOrder();\r\n            }).fail(function (response) {\r\n                var failed = JSON.parse(response.responseText);\r\n\r\n                self.error(failed.message);\r\n            }).always(function () {\r\n                $('body').trigger('processStop');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Store payment details\r\n         * @param {String} nonce\r\n         */\r\n        setPaymentDetails: function (nonce) {\r\n            this.createPublicHashSelector();\r\n\r\n            this.$selector.find('[name=\"payment[public_hash]\"]').val(this.publicHash);\r\n            this.$selector.find('[name=\"payment[payment_method_nonce]\"]').val(nonce).prop('disabled', false);\r\n        },\r\n\r\n        /**\r\n         * Creates public hash selector\r\n         */\r\n        createPublicHashSelector: function () {\r\n            var $input;\r\n\r\n            if (this.$selector.find('[name=\"payment[payment_method_nonce]\"]').size() === 0) {\r\n                $input = $('<input>').attr(\r\n                    {\r\n                        type: 'hidden',\r\n                        id: this.getNonceSelectorName(),\r\n                        name: 'payment[payment_method_nonce]'\r\n                    }\r\n                );\r\n\r\n                $input.appendTo(this.$selector);\r\n                $input.prop('disabled', false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show alert message\r\n         * @param {String} message\r\n         */\r\n        error: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get selector name for nonce input\r\n         * @returns {String}\r\n         */\r\n        getNonceSelectorName: function () {\r\n            return 'nonce_' + this.getCode();\r\n        }\r\n    });\r\n});\r\n","PayPal_Braintree/js/virtual.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/lib/view/utils/dom-observer',\r\n    'mage/translate',\r\n    'PayPal_Braintree/js/validator',\r\n    'braintree',\r\n    'braintreeHostedFields'\r\n], function ($, Class, alert, domObserver, $t, validator, client, hostedFields) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        defaults: {\r\n            $container: null,\r\n            container: 'payment_form_braintree',\r\n            braintree: null,\r\n            selectedCardType: null,\r\n            hostedFieldsInstance: null\r\n        },\r\n\r\n        /**\r\n         * Set list of observable attributes\r\n         * @returns {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            var self = this;\r\n\r\n            validator.setConfig(this);\r\n\r\n            self.$container = $('#' + self.container);\r\n            this._super()\r\n                .observe([\r\n                    'selectedCardType'\r\n                ]);\r\n\r\n            domObserver.get('#' + self.container, function () {\r\n                self.initBraintree();\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Setup Braintree SDK\r\n         */\r\n        initBraintree: function () {\r\n            var self = this;\r\n\r\n            try {\r\n                $('body').trigger('processStart');\r\n\r\n                client.create({\r\n                    authorization: self.clientToken\r\n                }, function (clientErr, clientInstance) {\r\n                    if (clientErr) {\r\n                        alert({\r\n                            content: $t('Please configure your Braintree Payments account in order to use the virtual terminal.')\r\n                        });\r\n                        console.error('Error!', clientErr);\r\n                        return self.error(response.clientErr);\r\n                    }\r\n\r\n                    hostedFields.create({\r\n                        client: clientInstance,\r\n                        fields: self.getHostedFields()\r\n                    }, function (createErr, hostedFieldsInstance) {\r\n                        if (createErr) {\r\n                            self.error($t(createErr));\r\n                            console.error('Error!', createErr);\r\n                            return;\r\n                        }\r\n\r\n                        self.hostedFieldsInstance = hostedFieldsInstance;\r\n                        self.$container.on('takePayment', self.submitOrder.bind(self));\r\n\r\n                        $('body').trigger('processStop');\r\n                    }.bind(this));\r\n                }.bind(this));\r\n            } catch (e) {\r\n                $('body').trigger('processStop');\r\n                self.error(e.message);\r\n                console.log(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get hosted fields configuration\r\n         * @returns {Object}\r\n         */\r\n        getHostedFields: function () {\r\n            return {\r\n                number: {\r\n                    selector: this.getSelector('cc_number'),\r\n                    placeholder: $t('4111 1111 1111 1111')\r\n                },\r\n                expirationMonth: {\r\n                    selector: this.getSelector('cc_exp_month'),\r\n                    placeholder: $t('MM')\r\n                },\r\n                expirationYear: {\r\n                    selector: this.getSelector('cc_exp_year'),\r\n                    placeholder: $t('YY')\r\n                },\r\n                cvv: {\r\n                    selector: this.getSelector('cc_cid'),\r\n                    placeholder: $t('123')\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Show alert message\r\n         * @param {String} message\r\n         */\r\n        error: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Store payment details\r\n         * @param {String} nonce\r\n         */\r\n        setPaymentDetails: function (nonce) {\r\n            var $container = $('#' + this.container);\r\n            $container.find('[name=\"payment_method_nonce\"]').val(nonce);\r\n        },\r\n\r\n        /**\r\n         * Trigger order submit\r\n         */\r\n        submitOrder: function (event) {\r\n            event.preventDefault();\r\n\r\n            this.$container.validate().form();\r\n            this.$container.trigger('afterValidate.beforeSubmit');\r\n            $('body').trigger('processStop');\r\n\r\n            // validate parent form\r\n            if (this.$container.validate().errorList.length) {\r\n                return false;\r\n            }\r\n\r\n            $('body').trigger('processStart');\r\n            this.tokenizeHostedFields();\r\n        },\r\n\r\n        /**\r\n         * Place order\r\n         */\r\n        placeOrder: function () {\r\n            this.$container.submit();\r\n        },\r\n\r\n        /**\r\n         * Get list of currently available card types\r\n         * @returns {Array}\r\n         */\r\n        getCcAvailableTypes: function () {\r\n            var types = [],\r\n                $options = $(this.getSelector('cc_type')).find('option');\r\n\r\n            $.map($options, function (option) {\r\n                types.push($(option).val());\r\n            });\r\n\r\n            return types;\r\n        },\r\n\r\n        /**\r\n         * Get jQuery selector\r\n         * @param {String} field\r\n         * @returns {String}\r\n         */\r\n        getSelector: function (field) {\r\n            return '#' + this.code + '_' + field;\r\n        },\r\n\r\n        tokenizeHostedFields: function () {\r\n            this.hostedFieldsInstance.tokenize({\r\n                vault: false // vault or no?\r\n            }, function (tokenizeErr, payload) {\r\n                if (tokenizeErr) {\r\n                    $('body').trigger('processStop');\r\n                    switch (tokenizeErr.code) {\r\n                        case 'HOSTED_FIELDS_FIELDS_EMPTY':\r\n                            // occurs when none of the fields are filled in\r\n                            this.error($t('Please enter a card number, expiration date and CVV'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_FIELDS_INVALID':\r\n                            // occurs when certain fields do not pass client side validation\r\n                            this.error($t('Please correct the problems with the Credit Card fields.'));\r\n                            console.error('Some fields are invalid:', tokenizeErr.details.invalidFieldKeys);\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':\r\n                            // occurs when:\r\n                            //   * the client token used for client authorization was generated\r\n                            //     with a customer ID and the fail on duplicate payment method\r\n                            //     option is set to true\r\n                            //   * the card being tokenized has previously been vaulted (with any customer)\r\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.fail_on_duplicate_payment_method\r\n                            this.error($t('The payment method used, already exists in the user\\'s vault. Please use the vault option instead.'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':\r\n                            // occurs when:\r\n                            //   * the client token used for client authorization was generated\r\n                            //     with a customer ID and the verify card option is set to true\r\n                            //     and you have credit card verification turned on in the Braintree\r\n                            //     control panel\r\n                            //   * the cvv does not pass verfication (https://developers.braintreepayments.com/reference/general/testing/#avs-and-cvv/cid-responses)\r\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.verify_card\r\n                            this.error($t('CVV did not pass verification'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_FAILED_TOKENIZATION':\r\n                            // occurs for any other tokenization error on the server\r\n                            this.error($t('There was an issue tokenizing the card. Please check the card is valid.'));\r\n                            console.error('Tokenization failed server side. Is the card valid?');\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':\r\n                            // occurs when the Braintree gateway cannot be contacted\r\n                            this.error($t('There was an error connecting to Braintree. Please try again.'));\r\n                            break;\r\n                        default:\r\n                            this.error($t('There was an issue processing the payment. Please try again.'));\r\n                            console.error('Braintree error', tokenizeErr);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    this.setPaymentDetails(payload.nonce);\r\n                    this.placeOrder();\r\n                }\r\n            }.bind(this));\r\n        }\r\n    });\r\n});\r\n","PayPal_Braintree/js/grid/provider.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/grid/provider'\r\n], function (_, Provider) {\r\n    'use strict';\r\n\r\n    return Provider.extend({\r\n\r\n        /**\r\n         * Reload grid\r\n         * @returns {exports}\r\n         */\r\n        reload: function () {\r\n            if (this.hasFilters()) {\r\n                this._super();\r\n\r\n                return this;\r\n            }\r\n\r\n            this.trigger('reload');\r\n\r\n            this.onReload({\r\n                items: [],\r\n                totalRecords: 0\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Has filters checker\r\n         * @returns {Boolean}\r\n         */\r\n        hasFilters: function () {\r\n            var params = this.params,\r\n                filters = params.filters || {};\r\n\r\n            return _.keys(filters).length > 1;\r\n        }\r\n    });\r\n});\r\n","requirejs/domReady.js":"/**\r\n * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/domReady for details\r\n */\r\n/*jslint */\r\n/*global require: false, define: false, requirejs: false,\r\n  window: false, clearInterval: false, document: false,\r\n  self: false, setInterval: false */\r\n\r\n\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var isTop, testDiv, scrollIntervalId,\r\n        isBrowser = typeof window !== \"undefined\" && window.document,\r\n        isPageLoaded = !isBrowser,\r\n        doc = isBrowser ? document : null,\r\n        readyCalls = [];\r\n\r\n    function runCallbacks(callbacks) {\r\n        var i;\r\n        for (i = 0; i < callbacks.length; i += 1) {\r\n            callbacks[i](doc);\r\n        }\r\n    }\r\n\r\n    function callReady() {\r\n        var callbacks = readyCalls;\r\n\r\n        if (isPageLoaded) {\r\n            //Call the DOM ready callbacks\r\n            if (callbacks.length) {\r\n                readyCalls = [];\r\n                runCallbacks(callbacks);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the page as loaded.\r\n     */\r\n    function pageLoaded() {\r\n        if (!isPageLoaded) {\r\n            isPageLoaded = true;\r\n            if (scrollIntervalId) {\r\n                clearInterval(scrollIntervalId);\r\n            }\r\n\r\n            callReady();\r\n        }\r\n    }\r\n\r\n    if (isBrowser) {\r\n        if (document.addEventListener) {\r\n            //Standards. Hooray! Assumption here that if standards based,\r\n            //it knows about DOMContentLoaded.\r\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\r\n            window.addEventListener(\"load\", pageLoaded, false);\r\n        } else if (window.attachEvent) {\r\n            window.attachEvent(\"onload\", pageLoaded);\r\n\r\n            testDiv = document.createElement('div');\r\n            try {\r\n                isTop = window.frameElement === null;\r\n            } catch (e) {}\r\n\r\n            //DOMContentLoaded approximation that uses a doScroll, as found by\r\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\r\n            //but modified by other contributors, including jdalton\r\n            if (testDiv.doScroll && isTop && window.external) {\r\n                scrollIntervalId = setInterval(function () {\r\n                    try {\r\n                        testDiv.doScroll();\r\n                        pageLoaded();\r\n                    } catch (e) {}\r\n                }, 30);\r\n            }\r\n        }\r\n\r\n        //Check if document is no longer loading, and if so, just trigger page load\r\n        //listeners. Latest webkit browsers also use \"interactive\", and\r\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\r\n        //entering \"interactive\" or \"complete\". More details:\r\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\r\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\r\n        //Hmm, this is more complicated on further use, see \"firing too early\"\r\n        //bug: https://github.com/requirejs/domReady/issues/1\r\n        //so removing the || document.readyState === \"interactive\" test.\r\n        //There is still a window.onload binding that should get fired if\r\n        //DOMContentLoaded is missed.\r\n        if (document.readyState !== \"loading\") {\r\n            // Handle it asynchronously to allow scripts the opportunity to delay ready\r\n            setTimeout(pageLoaded);\r\n        }\r\n    }\r\n\r\n    /** START OF PUBLIC API **/\r\n\r\n    /**\r\n     * Registers a callback for DOM ready. If DOM is already ready, the\r\n     * callback is called immediately.\r\n     * @param {Function} callback\r\n     */\r\n    function domReady(callback) {\r\n        if (isPageLoaded) {\r\n            callback(doc);\r\n        } else {\r\n            readyCalls.push(callback);\r\n        }\r\n        return domReady;\r\n    }\r\n\r\n    domReady.version = '2.0.1';\r\n\r\n    /**\r\n     * Loader Plugin API method\r\n     */\r\n    domReady.load = function (name, req, onLoad, config) {\r\n        if (config.isBuild) {\r\n            onLoad(null);\r\n        } else {\r\n            domReady(onLoad);\r\n        }\r\n    };\r\n\r\n    /** END OF PUBLIC API **/\r\n\r\n    return domReady;\r\n});\r\n","Solwin_Cpanel/js/update.js":"/**\n * Solwin Infotech\n * Solwin FreeGo Theme\n *\n * @category   Solwin\n * @package    Solwin FreeGo Theme\n * @copyright  Copyright \u00a9 2006-2016 Solwin (https://www.solwininfotech.com)\n * @license    https://www.solwininfotech.com/magento-extension-license/ \n */\n\nrequire(['jquery'], function () {\n    jQuery(document).ready(function () {\n        jQuery(\".admin__menu #menu-solwin-cpanel-view .submenu .item-addimage, .admin__menu #menu-solwin-cpanel-view .submenu .item-addimage-two\").find('a').remove();\n        \n        var eImage = jQuery(\".admin__menu #menu-solwin-cpanel-view .submenu .item-addimage\").parent().html();\n        var obj = '<a href=\"https://www.solwininfotech.com/product/magento-2-extensions/\" target=\"_blank\">';\n        obj += eImage;\n        obj += '</a>';\n    \tjQuery(\".admin__menu #menu-solwin-cpanel-view .submenu .item-addimage\").replaceWith(obj);\n\n    \tvar eImageTwo = jQuery(\".admin__menu #menu-solwin-cpanel-view .submenu .item-addimage-two\").parent().html();\n        var obj = '<a href=\"https://www.solwininfotech.com/my-account/\" target=\"_blank\">';\n        obj += eImageTwo;\n        obj += '</a>';\n    \tjQuery(\".admin__menu #menu-solwin-cpanel-view .submenu .item-addimage-two\").replaceWith(obj);\n\t});\n});","Solwin_ScrolltoTop/js/jscolor.js":"/**\r\n * jscolor - JavaScript Color Picker\r\n *\r\n * @link    http://jscolor.com\r\n * @license For open source use: GPLv3\r\n *          For commercial use: JSColor Commercial License\r\n * @author  Jan Odvarko\r\n * @version 2.0.4\r\n *\r\n * See usage examples at http://jscolor.com/examples/\r\n */\r\n\r\n\r\n\"use strict\";\r\n\r\n\r\nif (!window.jscolor) { window.jscolor = (function () {\r\n\r\n\r\nvar jsc = {\r\n\r\n\r\n\tregister : function () {\r\n\t\tjsc.attachDOMReadyEvent(jsc.init);\r\n\t\tjsc.attachEvent(document, 'mousedown', jsc.onDocumentMouseDown);\r\n\t\tjsc.attachEvent(document, 'touchstart', jsc.onDocumentTouchStart);\r\n\t\tjsc.attachEvent(window, 'resize', jsc.onWindowResize);\r\n\t},\r\n\r\n\r\n\tinit : function () {\r\n\t\tif (jsc.jscolor.lookupClass) {\r\n\t\t\tjsc.jscolor.installByClassName(jsc.jscolor.lookupClass);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\ttryInstallOnElements : function (elms, className) {\r\n\t\tvar matchClass = new RegExp('(^|\\\\s)(' + className + ')(\\\\s*(\\\\{[^}]*\\\\})|\\\\s|$)', 'i');\r\n\r\n\t\tfor (var i = 0; i < elms.length; i += 1) {\r\n\t\t\tif (elms[i].type !== undefined && elms[i].type.toLowerCase() == 'color') {\r\n\t\t\t\tif (jsc.isColorAttrSupported) {\r\n\t\t\t\t\t// skip inputs of type 'color' if supported by the browser\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar m;\r\n\t\t\tif (!elms[i].jscolor && elms[i].className && (m = elms[i].className.match(matchClass))) {\r\n\t\t\t\tvar targetElm = elms[i];\r\n\t\t\t\tvar optsStr = null;\r\n\r\n\t\t\t\tvar dataOptions = jsc.getDataAttr(targetElm, 'jscolor');\r\n\t\t\t\tif (dataOptions !== null) {\r\n\t\t\t\t\toptsStr = dataOptions;\r\n\t\t\t\t} else if (m[4]) {\r\n\t\t\t\t\toptsStr = m[4];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar opts = {};\r\n\t\t\t\tif (optsStr) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\topts = (new Function ('return (' + optsStr + ')'))();\r\n\t\t\t\t\t} catch(eParseError) {\r\n\t\t\t\t\t\tjsc.warn('Error parsing jscolor options: ' + eParseError + ':\\n' + optsStr);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttargetElm.jscolor = new jsc.jscolor(targetElm, opts);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tisColorAttrSupported : (function () {\r\n\t\tvar elm = document.createElement('input');\r\n\t\tif (elm.setAttribute) {\r\n\t\t\telm.setAttribute('type', 'color');\r\n\t\t\tif (elm.type.toLowerCase() == 'color') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t})(),\r\n\r\n\r\n\tisCanvasSupported : (function () {\r\n\t\tvar elm = document.createElement('canvas');\r\n\t\treturn !!(elm.getContext && elm.getContext('2d'));\r\n\t})(),\r\n\r\n\r\n\tfetchElement : function (mixed) {\r\n\t\treturn typeof mixed === 'string' ? document.getElementById(mixed) : mixed;\r\n\t},\r\n\r\n\r\n\tisElementType : function (elm, type) {\r\n\t\treturn elm.nodeName.toLowerCase() === type.toLowerCase();\r\n\t},\r\n\r\n\r\n\tgetDataAttr : function (el, name) {\r\n\t\tvar attrName = 'data-' + name;\r\n\t\tvar attrValue = el.getAttribute(attrName);\r\n\t\tif (attrValue !== null) {\r\n\t\t\treturn attrValue;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\r\n\tattachEvent : function (el, evnt, func) {\r\n\t\tif (el.addEventListener) {\r\n\t\t\tel.addEventListener(evnt, func, false);\r\n\t\t} else if (el.attachEvent) {\r\n\t\t\tel.attachEvent('on' + evnt, func);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tdetachEvent : function (el, evnt, func) {\r\n\t\tif (el.removeEventListener) {\r\n\t\t\tel.removeEventListener(evnt, func, false);\r\n\t\t} else if (el.detachEvent) {\r\n\t\t\tel.detachEvent('on' + evnt, func);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t_attachedGroupEvents : {},\r\n\r\n\r\n\tattachGroupEvent : function (groupName, el, evnt, func) {\r\n\t\tif (!jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\r\n\t\t\tjsc._attachedGroupEvents[groupName] = [];\r\n\t\t}\r\n\t\tjsc._attachedGroupEvents[groupName].push([el, evnt, func]);\r\n\t\tjsc.attachEvent(el, evnt, func);\r\n\t},\r\n\r\n\r\n\tdetachGroupEvents : function (groupName) {\r\n\t\tif (jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\r\n\t\t\tfor (var i = 0; i < jsc._attachedGroupEvents[groupName].length; i += 1) {\r\n\t\t\t\tvar evt = jsc._attachedGroupEvents[groupName][i];\r\n\t\t\t\tjsc.detachEvent(evt[0], evt[1], evt[2]);\r\n\t\t\t}\r\n\t\t\tdelete jsc._attachedGroupEvents[groupName];\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tattachDOMReadyEvent : function (func) {\r\n\t\tvar fired = false;\r\n\t\tvar fireOnce = function () {\r\n\t\t\tif (!fired) {\r\n\t\t\t\tfired = true;\r\n\t\t\t\tfunc();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (document.readyState === 'complete') {\r\n\t\t\tsetTimeout(fireOnce, 1); // async\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (document.addEventListener) {\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', fireOnce, false);\r\n\r\n\t\t\t// Fallback\r\n\t\t\twindow.addEventListener('load', fireOnce, false);\r\n\r\n\t\t} else if (document.attachEvent) {\r\n\t\t\t// IE\r\n\t\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\t\tdocument.detachEvent('onreadystatechange', arguments.callee);\r\n\t\t\t\t\tfireOnce();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\t// Fallback\r\n\t\t\twindow.attachEvent('onload', fireOnce);\r\n\r\n\t\t\t// IE7/8\r\n\t\t\tif (document.documentElement.doScroll && window == window.top) {\r\n\t\t\t\tvar tryScroll = function () {\r\n\t\t\t\t\tif (!document.body) { return; }\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdocument.documentElement.doScroll('left');\r\n\t\t\t\t\t\tfireOnce();\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tsetTimeout(tryScroll, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\ttryScroll();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\twarn : function (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tpreventDefault : function (e) {\r\n\t\tif (e.preventDefault) { e.preventDefault(); }\r\n\t\te.returnValue = false;\r\n\t},\r\n\r\n\r\n\tcaptureTarget : function (target) {\r\n\t\t// IE\r\n\t\tif (target.setCapture) {\r\n\t\t\tjsc._capturedTarget = target;\r\n\t\t\tjsc._capturedTarget.setCapture();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\treleaseTarget : function () {\r\n\t\t// IE\r\n\t\tif (jsc._capturedTarget) {\r\n\t\t\tjsc._capturedTarget.releaseCapture();\r\n\t\t\tjsc._capturedTarget = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tfireEvent : function (el, evnt) {\r\n\t\tif (!el) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (document.createEvent) {\r\n\t\t\tvar ev = document.createEvent('HTMLEvents');\r\n\t\t\tev.initEvent(evnt, true, true);\r\n\t\t\tel.dispatchEvent(ev);\r\n\t\t} else if (document.createEventObject) {\r\n\t\t\tvar ev = document.createEventObject();\r\n\t\t\tel.fireEvent('on' + evnt, ev);\r\n\t\t} else if (el['on' + evnt]) { // alternatively use the traditional event model\r\n\t\t\tel['on' + evnt]();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tclassNameToList : function (className) {\r\n\t\treturn className.replace(/^\\s+|\\s+$/g, '').split(/\\s+/);\r\n\t},\r\n\r\n\r\n\t// The className parameter (str) can only contain a single class name\r\n\thasClass : function (elm, className) {\r\n\t\tif (!className) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn -1 != (' ' + elm.className.replace(/\\s+/g, ' ') + ' ').indexOf(' ' + className + ' ');\r\n\t},\r\n\r\n\r\n\t// The className parameter (str) can contain multiple class names separated by whitespace\r\n\tsetClass : function (elm, className) {\r\n\t\tvar classList = jsc.classNameToList(className);\r\n\t\tfor (var i = 0; i < classList.length; i += 1) {\r\n\t\t\tif (!jsc.hasClass(elm, classList[i])) {\r\n\t\t\t\telm.className += (elm.className ? ' ' : '') + classList[i];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// The className parameter (str) can contain multiple class names separated by whitespace\r\n\tunsetClass : function (elm, className) {\r\n\t\tvar classList = jsc.classNameToList(className);\r\n\t\tfor (var i = 0; i < classList.length; i += 1) {\r\n\t\t\tvar repl = new RegExp(\r\n\t\t\t\t'^\\\\s*' + classList[i] + '\\\\s*|' +\r\n\t\t\t\t'\\\\s*' + classList[i] + '\\\\s*$|' +\r\n\t\t\t\t'\\\\s+' + classList[i] + '(\\\\s+)',\r\n\t\t\t\t'g'\r\n\t\t\t);\r\n\t\t\telm.className = elm.className.replace(repl, '$1');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tgetStyle : function (elm) {\r\n\t\treturn window.getComputedStyle ? window.getComputedStyle(elm) : elm.currentStyle;\r\n\t},\r\n\r\n\r\n\tsetStyle : (function () {\r\n\t\tvar helper = document.createElement('div');\r\n\t\tvar getSupportedProp = function (names) {\r\n\t\t\tfor (var i = 0; i < names.length; i += 1) {\r\n\t\t\t\tif (names[i] in helper.style) {\r\n\t\t\t\t\treturn names[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar props = {\r\n\t\t\tborderRadius: getSupportedProp(['borderRadius', 'MozBorderRadius', 'webkitBorderRadius']),\r\n\t\t\tboxShadow: getSupportedProp(['boxShadow', 'MozBoxShadow', 'webkitBoxShadow'])\r\n\t\t};\r\n\t\treturn function (elm, prop, value) {\r\n\t\t\tswitch (prop.toLowerCase()) {\r\n\t\t\tcase 'opacity':\r\n\t\t\t\tvar alphaOpacity = Math.round(parseFloat(value) * 100);\r\n\t\t\t\telm.style.opacity = value;\r\n\t\t\t\telm.style.filter = 'alpha(opacity=' + alphaOpacity + ')';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\telm.style[props[prop]] = value;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\t})(),\r\n\r\n\r\n\tsetBorderRadius : function (elm, value) {\r\n\t\tjsc.setStyle(elm, 'borderRadius', value || '0');\r\n\t},\r\n\r\n\r\n\tsetBoxShadow : function (elm, value) {\r\n\t\tjsc.setStyle(elm, 'boxShadow', value || 'none');\r\n\t},\r\n\r\n\r\n\tgetElementPos : function (e, relativeToViewport) {\r\n\t\tvar x=0, y=0;\r\n\t\tvar rect = e.getBoundingClientRect();\r\n\t\tx = rect.left;\r\n\t\ty = rect.top;\r\n\t\tif (!relativeToViewport) {\r\n\t\t\tvar viewPos = jsc.getViewPos();\r\n\t\t\tx += viewPos[0];\r\n\t\t\ty += viewPos[1];\r\n\t\t}\r\n\t\treturn [x, y];\r\n\t},\r\n\r\n\r\n\tgetElementSize : function (e) {\r\n\t\treturn [e.offsetWidth, e.offsetHeight];\r\n\t},\r\n\r\n\r\n\t// get pointer's X/Y coordinates relative to viewport\r\n\tgetAbsPointerPos : function (e) {\r\n\t\tif (!e) { e = window.event; }\r\n\t\tvar x = 0, y = 0;\r\n\t\tif (typeof e.changedTouches !== 'undefined' && e.changedTouches.length) {\r\n\t\t\t// touch devices\r\n\t\t\tx = e.changedTouches[0].clientX;\r\n\t\t\ty = e.changedTouches[0].clientY;\r\n\t\t} else if (typeof e.clientX === 'number') {\r\n\t\t\tx = e.clientX;\r\n\t\t\ty = e.clientY;\r\n\t\t}\r\n\t\treturn { x: x, y: y };\r\n\t},\r\n\r\n\r\n\t// get pointer's X/Y coordinates relative to target element\r\n\tgetRelPointerPos : function (e) {\r\n\t\tif (!e) { e = window.event; }\r\n\t\tvar target = e.target || e.srcElement;\r\n\t\tvar targetRect = target.getBoundingClientRect();\r\n\r\n\t\tvar x = 0, y = 0;\r\n\r\n\t\tvar clientX = 0, clientY = 0;\r\n\t\tif (typeof e.changedTouches !== 'undefined' && e.changedTouches.length) {\r\n\t\t\t// touch devices\r\n\t\t\tclientX = e.changedTouches[0].clientX;\r\n\t\t\tclientY = e.changedTouches[0].clientY;\r\n\t\t} else if (typeof e.clientX === 'number') {\r\n\t\t\tclientX = e.clientX;\r\n\t\t\tclientY = e.clientY;\r\n\t\t}\r\n\r\n\t\tx = clientX - targetRect.left;\r\n\t\ty = clientY - targetRect.top;\r\n\t\treturn { x: x, y: y };\r\n\t},\r\n\r\n\r\n\tgetViewPos : function () {\r\n\t\tvar doc = document.documentElement;\r\n\t\treturn [\r\n\t\t\t(window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\r\n\t\t\t(window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\r\n\t\t];\r\n\t},\r\n\r\n\r\n\tgetViewSize : function () {\r\n\t\tvar doc = document.documentElement;\r\n\t\treturn [\r\n\t\t\t(window.innerWidth || doc.clientWidth),\r\n\t\t\t(window.innerHeight || doc.clientHeight),\r\n\t\t];\r\n\t},\r\n\r\n\r\n\tredrawPosition : function () {\r\n\r\n\t\tif (jsc.picker && jsc.picker.owner) {\r\n\t\t\tvar thisObj = jsc.picker.owner;\r\n\r\n\t\t\tvar tp, vp;\r\n\r\n\t\t\tif (thisObj.fixed) {\r\n\t\t\t\t// Fixed elements are positioned relative to viewport,\r\n\t\t\t\t// therefore we can ignore the scroll offset\r\n\t\t\t\ttp = jsc.getElementPos(thisObj.targetElement, true); // target pos\r\n\t\t\t\tvp = [0, 0]; // view pos\r\n\t\t\t} else {\r\n\t\t\t\ttp = jsc.getElementPos(thisObj.targetElement); // target pos\r\n\t\t\t\tvp = jsc.getViewPos(); // view pos\r\n\t\t\t}\r\n\r\n\t\t\tvar ts = jsc.getElementSize(thisObj.targetElement); // target size\r\n\t\t\tvar vs = jsc.getViewSize(); // view size\r\n\t\t\tvar ps = jsc.getPickerOuterDims(thisObj); // picker size\r\n\t\t\tvar a, b, c;\r\n\t\t\tswitch (thisObj.position.toLowerCase()) {\r\n\t\t\t\tcase 'left': a=1; b=0; c=-1; break;\r\n\t\t\t\tcase 'right':a=1; b=0; c=1; break;\r\n\t\t\t\tcase 'top':  a=0; b=1; c=-1; break;\r\n\t\t\t\tdefault:     a=0; b=1; c=1; break;\r\n\t\t\t}\r\n\t\t\tvar l = (ts[b]+ps[b])/2;\r\n\r\n\t\t\t// compute picker position\r\n\t\t\tif (!thisObj.smartPosition) {\r\n\t\t\t\tvar pp = [\r\n\t\t\t\t\ttp[a],\r\n\t\t\t\t\ttp[b]+ts[b]-l+l*c\r\n\t\t\t\t];\r\n\t\t\t} else {\r\n\t\t\t\tvar pp = [\r\n\t\t\t\t\t-vp[a]+tp[a]+ps[a] > vs[a] ?\r\n\t\t\t\t\t\t(-vp[a]+tp[a]+ts[a]/2 > vs[a]/2 && tp[a]+ts[a]-ps[a] >= 0 ? tp[a]+ts[a]-ps[a] : tp[a]) :\r\n\t\t\t\t\t\ttp[a],\r\n\t\t\t\t\t-vp[b]+tp[b]+ts[b]+ps[b]-l+l*c > vs[b] ?\r\n\t\t\t\t\t\t(-vp[b]+tp[b]+ts[b]/2 > vs[b]/2 && tp[b]+ts[b]-l-l*c >= 0 ? tp[b]+ts[b]-l-l*c : tp[b]+ts[b]-l+l*c) :\r\n\t\t\t\t\t\t(tp[b]+ts[b]-l+l*c >= 0 ? tp[b]+ts[b]-l+l*c : tp[b]+ts[b]-l-l*c)\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\tvar x = pp[a];\r\n\t\t\tvar y = pp[b];\r\n\t\t\tvar positionValue = thisObj.fixed ? 'fixed' : 'absolute';\r\n\t\t\tvar contractShadow =\r\n\t\t\t\t(pp[0] + ps[0] > tp[0] || pp[0] < tp[0] + ts[0]) &&\r\n\t\t\t\t(pp[1] + ps[1] < tp[1] + ts[1]);\r\n\r\n\t\t\tjsc._drawPosition(thisObj, x, y, positionValue, contractShadow);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t_drawPosition : function (thisObj, x, y, positionValue, contractShadow) {\r\n\t\tvar vShadow = contractShadow ? 0 : thisObj.shadowBlur; // px\r\n\r\n\t\tjsc.picker.wrap.style.position = positionValue;\r\n\t\tjsc.picker.wrap.style.left = x + 'px';\r\n\t\tjsc.picker.wrap.style.top = y + 'px';\r\n\r\n\t\tjsc.setBoxShadow(\r\n\t\t\tjsc.picker.boxS,\r\n\t\t\tthisObj.shadow ?\r\n\t\t\t\tnew jsc.BoxShadow(0, vShadow, thisObj.shadowBlur, 0, thisObj.shadowColor) :\r\n\t\t\t\tnull);\r\n\t},\r\n\r\n\r\n\tgetPickerDims : function (thisObj) {\r\n\t\tvar displaySlider = !!jsc.getSliderComponent(thisObj);\r\n\t\tvar dims = [\r\n\t\t\t2 * thisObj.insetWidth + 2 * thisObj.padding + thisObj.width +\r\n\t\t\t\t(displaySlider ? 2 * thisObj.insetWidth + jsc.getPadToSliderPadding(thisObj) + thisObj.sliderSize : 0),\r\n\t\t\t2 * thisObj.insetWidth + 2 * thisObj.padding + thisObj.height +\r\n\t\t\t\t(thisObj.closable ? 2 * thisObj.insetWidth + thisObj.padding + thisObj.buttonHeight : 0)\r\n\t\t];\r\n\t\treturn dims;\r\n\t},\r\n\r\n\r\n\tgetPickerOuterDims : function (thisObj) {\r\n\t\tvar dims = jsc.getPickerDims(thisObj);\r\n\t\treturn [\r\n\t\t\tdims[0] + 2 * thisObj.borderWidth,\r\n\t\t\tdims[1] + 2 * thisObj.borderWidth\r\n\t\t];\r\n\t},\r\n\r\n\r\n\tgetPadToSliderPadding : function (thisObj) {\r\n\t\treturn Math.max(thisObj.padding, 1.5 * (2 * thisObj.pointerBorderWidth + thisObj.pointerThickness));\r\n\t},\r\n\r\n\r\n\tgetPadYComponent : function (thisObj) {\r\n\t\tswitch (thisObj.mode.charAt(1).toLowerCase()) {\r\n\t\t\tcase 'v': return 'v'; break;\r\n\t\t}\r\n\t\treturn 's';\r\n\t},\r\n\r\n\r\n\tgetSliderComponent : function (thisObj) {\r\n\t\tif (thisObj.mode.length > 2) {\r\n\t\t\tswitch (thisObj.mode.charAt(2).toLowerCase()) {\r\n\t\t\t\tcase 's': return 's'; break;\r\n\t\t\t\tcase 'v': return 'v'; break;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\r\n\tonDocumentMouseDown : function (e) {\r\n\t\tif (!e) { e = window.event; }\r\n\t\tvar target = e.target || e.srcElement;\r\n\r\n\t\tif (target._jscLinkedInstance) {\r\n\t\t\tif (target._jscLinkedInstance.showOnClick) {\r\n\t\t\t\ttarget._jscLinkedInstance.show();\r\n\t\t\t}\r\n\t\t} else if (target._jscControlName) {\r\n\t\t\tjsc.onControlPointerStart(e, target, target._jscControlName, 'mouse');\r\n\t\t} else {\r\n\t\t\t// Mouse is outside the picker controls -> hide the color picker!\r\n\t\t\tif (jsc.picker && jsc.picker.owner) {\r\n\t\t\t\tjsc.picker.owner.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonDocumentTouchStart : function (e) {\r\n\t\tif (!e) { e = window.event; }\r\n\t\tvar target = e.target || e.srcElement;\r\n\r\n\t\tif (target._jscLinkedInstance) {\r\n\t\t\tif (target._jscLinkedInstance.showOnClick) {\r\n\t\t\t\ttarget._jscLinkedInstance.show();\r\n\t\t\t}\r\n\t\t} else if (target._jscControlName) {\r\n\t\t\tjsc.onControlPointerStart(e, target, target._jscControlName, 'touch');\r\n\t\t} else {\r\n\t\t\tif (jsc.picker && jsc.picker.owner) {\r\n\t\t\t\tjsc.picker.owner.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonWindowResize : function (e) {\r\n\t\tjsc.redrawPosition();\r\n\t},\r\n\r\n\r\n\tonParentScroll : function (e) {\r\n\t\t// hide the picker when one of the parent elements is scrolled\r\n\t\tif (jsc.picker && jsc.picker.owner) {\r\n\t\t\tjsc.picker.owner.hide();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t_pointerMoveEvent : {\r\n\t\tmouse: 'mousemove',\r\n\t\ttouch: 'touchmove'\r\n\t},\r\n\t_pointerEndEvent : {\r\n\t\tmouse: 'mouseup',\r\n\t\ttouch: 'touchend'\r\n\t},\r\n\r\n\r\n\t_pointerOrigin : null,\r\n\t_capturedTarget : null,\r\n\r\n\r\n\tonControlPointerStart : function (e, target, controlName, pointerType) {\r\n\t\tvar thisObj = target._jscInstance;\r\n\r\n\t\tjsc.preventDefault(e);\r\n\t\tjsc.captureTarget(target);\r\n\r\n\t\tvar registerDragEvents = function (doc, offset) {\r\n\t\t\tjsc.attachGroupEvent('drag', doc, jsc._pointerMoveEvent[pointerType],\r\n\t\t\t\tjsc.onDocumentPointerMove(e, target, controlName, pointerType, offset));\r\n\t\t\tjsc.attachGroupEvent('drag', doc, jsc._pointerEndEvent[pointerType],\r\n\t\t\t\tjsc.onDocumentPointerEnd(e, target, controlName, pointerType));\r\n\t\t};\r\n\r\n\t\tregisterDragEvents(document, [0, 0]);\r\n\r\n\t\tif (window.parent && window.frameElement) {\r\n\t\t\tvar rect = window.frameElement.getBoundingClientRect();\r\n\t\t\tvar ofs = [-rect.left, -rect.top];\r\n\t\t\tregisterDragEvents(window.parent.window.document, ofs);\r\n\t\t}\r\n\r\n\t\tvar abs = jsc.getAbsPointerPos(e);\r\n\t\tvar rel = jsc.getRelPointerPos(e);\r\n\t\tjsc._pointerOrigin = {\r\n\t\t\tx: abs.x - rel.x,\r\n\t\t\ty: abs.y - rel.y\r\n\t\t};\r\n\r\n\t\tswitch (controlName) {\r\n\t\tcase 'pad':\r\n\t\t\t// if the slider is at the bottom, move it up\r\n\t\t\tswitch (jsc.getSliderComponent(thisObj)) {\r\n\t\t\tcase 's': if (thisObj.hsv[1] === 0) { thisObj.fromHSV(null, 100, null); }; break;\r\n\t\t\tcase 'v': if (thisObj.hsv[2] === 0) { thisObj.fromHSV(null, null, 100); }; break;\r\n\t\t\t}\r\n\t\t\tjsc.setPad(thisObj, e, 0, 0);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'sld':\r\n\t\t\tjsc.setSld(thisObj, e, 0);\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tjsc.dispatchFineChange(thisObj);\r\n\t},\r\n\r\n\r\n\tonDocumentPointerMove : function (e, target, controlName, pointerType, offset) {\r\n\t\treturn function (e) {\r\n\t\t\tvar thisObj = target._jscInstance;\r\n\t\t\tswitch (controlName) {\r\n\t\t\tcase 'pad':\r\n\t\t\t\tif (!e) { e = window.event; }\r\n\t\t\t\tjsc.setPad(thisObj, e, offset[0], offset[1]);\r\n\t\t\t\tjsc.dispatchFineChange(thisObj);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'sld':\r\n\t\t\t\tif (!e) { e = window.event; }\r\n\t\t\t\tjsc.setSld(thisObj, e, offset[1]);\r\n\t\t\t\tjsc.dispatchFineChange(thisObj);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonDocumentPointerEnd : function (e, target, controlName, pointerType) {\r\n\t\treturn function (e) {\r\n\t\t\tvar thisObj = target._jscInstance;\r\n\t\t\tjsc.detachGroupEvents('drag');\r\n\t\t\tjsc.releaseTarget();\r\n\t\t\t// Always dispatch changes after detaching outstanding mouse handlers,\r\n\t\t\t// in case some user interaction will occur in user's onchange callback\r\n\t\t\t// that would intrude with current mouse events\r\n\t\t\tjsc.dispatchChange(thisObj);\r\n\t\t};\r\n\t},\r\n\r\n\r\n\tdispatchChange : function (thisObj) {\r\n\t\tif (thisObj.valueElement) {\r\n\t\t\tif (jsc.isElementType(thisObj.valueElement, 'input')) {\r\n\t\t\t\tjsc.fireEvent(thisObj.valueElement, 'change');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tdispatchFineChange : function (thisObj) {\r\n\t\tif (thisObj.onFineChange) {\r\n\t\t\tvar callback;\r\n\t\t\tif (typeof thisObj.onFineChange === 'string') {\r\n\t\t\t\tcallback = new Function (thisObj.onFineChange);\r\n\t\t\t} else {\r\n\t\t\t\tcallback = thisObj.onFineChange;\r\n\t\t\t}\r\n\t\t\tcallback.call(thisObj);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tsetPad : function (thisObj, e, ofsX, ofsY) {\r\n\t\tvar pointerAbs = jsc.getAbsPointerPos(e);\r\n\t\tvar x = ofsX + pointerAbs.x - jsc._pointerOrigin.x - thisObj.padding - thisObj.insetWidth;\r\n\t\tvar y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.insetWidth;\r\n\r\n\t\tvar xVal = x * (360 / (thisObj.width - 1));\r\n\t\tvar yVal = 100 - (y * (100 / (thisObj.height - 1)));\r\n\r\n\t\tswitch (jsc.getPadYComponent(thisObj)) {\r\n\t\tcase 's': thisObj.fromHSV(xVal, yVal, null, jsc.leaveSld); break;\r\n\t\tcase 'v': thisObj.fromHSV(xVal, null, yVal, jsc.leaveSld); break;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tsetSld : function (thisObj, e, ofsY) {\r\n\t\tvar pointerAbs = jsc.getAbsPointerPos(e);\r\n\t\tvar y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.insetWidth;\r\n\r\n\t\tvar yVal = 100 - (y * (100 / (thisObj.height - 1)));\r\n\r\n\t\tswitch (jsc.getSliderComponent(thisObj)) {\r\n\t\tcase 's': thisObj.fromHSV(null, yVal, null, jsc.leavePad); break;\r\n\t\tcase 'v': thisObj.fromHSV(null, null, yVal, jsc.leavePad); break;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t_vmlNS : 'jsc_vml_',\r\n\t_vmlCSS : 'jsc_vml_css_',\r\n\t_vmlReady : false,\r\n\r\n\r\n\tinitVML : function () {\r\n\t\tif (!jsc._vmlReady) {\r\n\t\t\t// init VML namespace\r\n\t\t\tvar doc = document;\r\n\t\t\tif (!doc.namespaces[jsc._vmlNS]) {\r\n\t\t\t\tdoc.namespaces.add(jsc._vmlNS, 'urn:schemas-microsoft-com:vml');\r\n\t\t\t}\r\n\t\t\tif (!doc.styleSheets[jsc._vmlCSS]) {\r\n\t\t\t\tvar tags = ['shape', 'shapetype', 'group', 'background', 'path', 'formulas', 'handles', 'fill', 'stroke', 'shadow', 'textbox', 'textpath', 'imagedata', 'line', 'polyline', 'curve', 'rect', 'roundrect', 'oval', 'arc', 'image'];\r\n\t\t\t\tvar ss = doc.createStyleSheet();\r\n\t\t\t\tss.owningElement.id = jsc._vmlCSS;\r\n\t\t\t\tfor (var i = 0; i < tags.length; i += 1) {\r\n\t\t\t\t\tss.addRule(jsc._vmlNS + '\\\\:' + tags[i], 'behavior:url(#default#VML);');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tjsc._vmlReady = true;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tcreatePalette : function () {\r\n\r\n\t\tvar paletteObj = {\r\n\t\t\telm: null,\r\n\t\t\tdraw: null\r\n\t\t};\r\n\r\n\t\tif (jsc.isCanvasSupported) {\r\n\t\t\t// Canvas implementation for modern browsers\r\n\r\n\t\t\tvar canvas = document.createElement('canvas');\r\n\t\t\tvar ctx = canvas.getContext('2d');\r\n\r\n\t\t\tvar drawFunc = function (width, height, type) {\r\n\t\t\t\tcanvas.width = width;\r\n\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\t\tvar hGrad = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n\t\t\t\thGrad.addColorStop(0 / 6, '#F00');\r\n\t\t\t\thGrad.addColorStop(1 / 6, '#FF0');\r\n\t\t\t\thGrad.addColorStop(2 / 6, '#0F0');\r\n\t\t\t\thGrad.addColorStop(3 / 6, '#0FF');\r\n\t\t\t\thGrad.addColorStop(4 / 6, '#00F');\r\n\t\t\t\thGrad.addColorStop(5 / 6, '#F0F');\r\n\t\t\t\thGrad.addColorStop(6 / 6, '#F00');\r\n\r\n\t\t\t\tctx.fillStyle = hGrad;\r\n\t\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\t\tvar vGrad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n\t\t\t\tswitch (type.toLowerCase()) {\r\n\t\t\t\tcase 's':\r\n\t\t\t\t\tvGrad.addColorStop(0, 'rgba(255,255,255,0)');\r\n\t\t\t\t\tvGrad.addColorStop(1, 'rgba(255,255,255,1)');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'v':\r\n\t\t\t\t\tvGrad.addColorStop(0, 'rgba(0,0,0,0)');\r\n\t\t\t\t\tvGrad.addColorStop(1, 'rgba(0,0,0,1)');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tctx.fillStyle = vGrad;\r\n\t\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\t\t};\r\n\r\n\t\t\tpaletteObj.elm = canvas;\r\n\t\t\tpaletteObj.draw = drawFunc;\r\n\r\n\t\t} else {\r\n\t\t\t// VML fallback for IE 7 and 8\r\n\r\n\t\t\tjsc.initVML();\r\n\r\n\t\t\tvar vmlContainer = document.createElement('div');\r\n\t\t\tvmlContainer.style.position = 'relative';\r\n\t\t\tvmlContainer.style.overflow = 'hidden';\r\n\r\n\t\t\tvar hGrad = document.createElement(jsc._vmlNS + ':fill');\r\n\t\t\thGrad.type = 'gradient';\r\n\t\t\thGrad.method = 'linear';\r\n\t\t\thGrad.angle = '90';\r\n\t\t\thGrad.colors = '16.67% #F0F, 33.33% #00F, 50% #0FF, 66.67% #0F0, 83.33% #FF0'\r\n\r\n\t\t\tvar hRect = document.createElement(jsc._vmlNS + ':rect');\r\n\t\t\thRect.style.position = 'absolute';\r\n\t\t\thRect.style.left = -1 + 'px';\r\n\t\t\thRect.style.top = -1 + 'px';\r\n\t\t\thRect.stroked = false;\r\n\t\t\thRect.appendChild(hGrad);\r\n\t\t\tvmlContainer.appendChild(hRect);\r\n\r\n\t\t\tvar vGrad = document.createElement(jsc._vmlNS + ':fill');\r\n\t\t\tvGrad.type = 'gradient';\r\n\t\t\tvGrad.method = 'linear';\r\n\t\t\tvGrad.angle = '180';\r\n\t\t\tvGrad.opacity = '0';\r\n\r\n\t\t\tvar vRect = document.createElement(jsc._vmlNS + ':rect');\r\n\t\t\tvRect.style.position = 'absolute';\r\n\t\t\tvRect.style.left = -1 + 'px';\r\n\t\t\tvRect.style.top = -1 + 'px';\r\n\t\t\tvRect.stroked = false;\r\n\t\t\tvRect.appendChild(vGrad);\r\n\t\t\tvmlContainer.appendChild(vRect);\r\n\r\n\t\t\tvar drawFunc = function (width, height, type) {\r\n\t\t\t\tvmlContainer.style.width = width + 'px';\r\n\t\t\t\tvmlContainer.style.height = height + 'px';\r\n\r\n\t\t\t\thRect.style.width =\r\n\t\t\t\tvRect.style.width =\r\n\t\t\t\t\t(width + 1) + 'px';\r\n\t\t\t\thRect.style.height =\r\n\t\t\t\tvRect.style.height =\r\n\t\t\t\t\t(height + 1) + 'px';\r\n\r\n\t\t\t\t// Colors must be specified during every redraw, otherwise IE won't display\r\n\t\t\t\t// a full gradient during a subsequential redraw\r\n\t\t\t\thGrad.color = '#F00';\r\n\t\t\t\thGrad.color2 = '#F00';\r\n\r\n\t\t\t\tswitch (type.toLowerCase()) {\r\n\t\t\t\tcase 's':\r\n\t\t\t\t\tvGrad.color = vGrad.color2 = '#FFF';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'v':\r\n\t\t\t\t\tvGrad.color = vGrad.color2 = '#000';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tpaletteObj.elm = vmlContainer;\r\n\t\t\tpaletteObj.draw = drawFunc;\r\n\t\t}\r\n\r\n\t\treturn paletteObj;\r\n\t},\r\n\r\n\r\n\tcreateSliderGradient : function () {\r\n\r\n\t\tvar sliderObj = {\r\n\t\t\telm: null,\r\n\t\t\tdraw: null\r\n\t\t};\r\n\r\n\t\tif (jsc.isCanvasSupported) {\r\n\t\t\t// Canvas implementation for modern browsers\r\n\r\n\t\t\tvar canvas = document.createElement('canvas');\r\n\t\t\tvar ctx = canvas.getContext('2d');\r\n\r\n\t\t\tvar drawFunc = function (width, height, color1, color2) {\r\n\t\t\t\tcanvas.width = width;\r\n\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\t\tvar grad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n\t\t\t\tgrad.addColorStop(0, color1);\r\n\t\t\t\tgrad.addColorStop(1, color2);\r\n\r\n\t\t\t\tctx.fillStyle = grad;\r\n\t\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\t\t};\r\n\r\n\t\t\tsliderObj.elm = canvas;\r\n\t\t\tsliderObj.draw = drawFunc;\r\n\r\n\t\t} else {\r\n\t\t\t// VML fallback for IE 7 and 8\r\n\r\n\t\t\tjsc.initVML();\r\n\r\n\t\t\tvar vmlContainer = document.createElement('div');\r\n\t\t\tvmlContainer.style.position = 'relative';\r\n\t\t\tvmlContainer.style.overflow = 'hidden';\r\n\r\n\t\t\tvar grad = document.createElement(jsc._vmlNS + ':fill');\r\n\t\t\tgrad.type = 'gradient';\r\n\t\t\tgrad.method = 'linear';\r\n\t\t\tgrad.angle = '180';\r\n\r\n\t\t\tvar rect = document.createElement(jsc._vmlNS + ':rect');\r\n\t\t\trect.style.position = 'absolute';\r\n\t\t\trect.style.left = -1 + 'px';\r\n\t\t\trect.style.top = -1 + 'px';\r\n\t\t\trect.stroked = false;\r\n\t\t\trect.appendChild(grad);\r\n\t\t\tvmlContainer.appendChild(rect);\r\n\r\n\t\t\tvar drawFunc = function (width, height, color1, color2) {\r\n\t\t\t\tvmlContainer.style.width = width + 'px';\r\n\t\t\t\tvmlContainer.style.height = height + 'px';\r\n\r\n\t\t\t\trect.style.width = (width + 1) + 'px';\r\n\t\t\t\trect.style.height = (height + 1) + 'px';\r\n\r\n\t\t\t\tgrad.color = color1;\r\n\t\t\t\tgrad.color2 = color2;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tsliderObj.elm = vmlContainer;\r\n\t\t\tsliderObj.draw = drawFunc;\r\n\t\t}\r\n\r\n\t\treturn sliderObj;\r\n\t},\r\n\r\n\r\n\tleaveValue : 1<<0,\r\n\tleaveStyle : 1<<1,\r\n\tleavePad : 1<<2,\r\n\tleaveSld : 1<<3,\r\n\r\n\r\n\tBoxShadow : (function () {\r\n\t\tvar BoxShadow = function (hShadow, vShadow, blur, spread, color, inset) {\r\n\t\t\tthis.hShadow = hShadow;\r\n\t\t\tthis.vShadow = vShadow;\r\n\t\t\tthis.blur = blur;\r\n\t\t\tthis.spread = spread;\r\n\t\t\tthis.color = color;\r\n\t\t\tthis.inset = !!inset;\r\n\t\t};\r\n\r\n\t\tBoxShadow.prototype.toString = function () {\r\n\t\t\tvar vals = [\r\n\t\t\t\tMath.round(this.hShadow) + 'px',\r\n\t\t\t\tMath.round(this.vShadow) + 'px',\r\n\t\t\t\tMath.round(this.blur) + 'px',\r\n\t\t\t\tMath.round(this.spread) + 'px',\r\n\t\t\t\tthis.color\r\n\t\t\t];\r\n\t\t\tif (this.inset) {\r\n\t\t\t\tvals.push('inset');\r\n\t\t\t}\r\n\t\t\treturn vals.join(' ');\r\n\t\t};\r\n\r\n\t\treturn BoxShadow;\r\n\t})(),\r\n\r\n\r\n\t//\r\n\t// Usage:\r\n\t// var myColor = new jscolor(<targetElement> [, <options>])\r\n\t//\r\n\r\n\tjscolor : function (targetElement, options) {\r\n\r\n\t\t// General options\r\n\t\t//\r\n\t\tthis.value = null; // initial HEX color. To change it later, use methods fromString(), fromHSV() and fromRGB()\r\n\t\tthis.valueElement = targetElement; // element that will be used to display and input the color code\r\n\t\tthis.styleElement = targetElement; // element that will preview the picked color using CSS backgroundColor\r\n\t\tthis.required = true; // whether the associated text <input> can be left empty\r\n\t\tthis.refine = true; // whether to refine the entered color code (e.g. uppercase it and remove whitespace)\r\n\t\tthis.hash = false; // whether to prefix the HEX color code with # symbol\r\n\t\tthis.uppercase = true; // whether to uppercase the color code\r\n\t\tthis.onFineChange = null; // called instantly every time the color changes (value can be either a function or a string with javascript code)\r\n\t\tthis.activeClass = 'jscolor-active'; // class to be set to the target element when a picker window is open on it\r\n\t\tthis.minS = 0; // min allowed saturation (0 - 100)\r\n\t\tthis.maxS = 100; // max allowed saturation (0 - 100)\r\n\t\tthis.minV = 0; // min allowed value (brightness) (0 - 100)\r\n\t\tthis.maxV = 100; // max allowed value (brightness) (0 - 100)\r\n\r\n\t\t// Accessing the picked color\r\n\t\t//\r\n\t\tthis.hsv = [0, 0, 100]; // read-only  [0-360, 0-100, 0-100]\r\n\t\tthis.rgb = [255, 255, 255]; // read-only  [0-255, 0-255, 0-255]\r\n\r\n\t\t// Color Picker options\r\n\t\t//\r\n\t\tthis.width = 181; // width of color palette (in px)\r\n\t\tthis.height = 101; // height of color palette (in px)\r\n\t\tthis.showOnClick = true; // whether to display the color picker when user clicks on its target element\r\n\t\tthis.mode = 'HSV'; // HSV | HVS | HS | HV - layout of the color picker controls\r\n\t\tthis.position = 'bottom'; // left | right | top | bottom - position relative to the target element\r\n\t\tthis.smartPosition = true; // automatically change picker position when there is not enough space for it\r\n\t\tthis.sliderSize = 16; // px\r\n\t\tthis.crossSize = 8; // px\r\n\t\tthis.closable = false; // whether to display the Close button\r\n\t\tthis.closeText = 'Close';\r\n\t\tthis.buttonColor = '#000000'; // CSS color\r\n\t\tthis.buttonHeight = 18; // px\r\n\t\tthis.padding = 12; // px\r\n\t\tthis.backgroundColor = '#FFFFFF'; // CSS color\r\n\t\tthis.borderWidth = 1; // px\r\n\t\tthis.borderColor = '#BBBBBB'; // CSS color\r\n\t\tthis.borderRadius = 8; // px\r\n\t\tthis.insetWidth = 1; // px\r\n\t\tthis.insetColor = '#BBBBBB'; // CSS color\r\n\t\tthis.shadow = true; // whether to display shadow\r\n\t\tthis.shadowBlur = 15; // px\r\n\t\tthis.shadowColor = 'rgba(0,0,0,0.2)'; // CSS color\r\n\t\tthis.pointerColor = '#4C4C4C'; // px\r\n\t\tthis.pointerBorderColor = '#FFFFFF'; // px\r\n        this.pointerBorderWidth = 1; // px\r\n        this.pointerThickness = 2; // px\r\n\t\tthis.zIndex = 1000;\r\n\t\tthis.container = null; // where to append the color picker (BODY element by default)\r\n\r\n\r\n\t\tfor (var opt in options) {\r\n\t\t\tif (options.hasOwnProperty(opt)) {\r\n\t\t\t\tthis[opt] = options[opt];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis.hide = function () {\r\n\t\t\tif (isPickerOwner()) {\r\n\t\t\t\tdetachPicker();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.show = function () {\r\n\t\t\tdrawPicker();\r\n\t\t};\r\n\r\n\r\n\t\tthis.redraw = function () {\r\n\t\t\tif (isPickerOwner()) {\r\n\t\t\t\tdrawPicker();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.importColor = function () {\r\n\t\t\tif (!this.valueElement) {\r\n\t\t\t\tthis.exportColor();\r\n\t\t\t} else {\r\n\t\t\t\tif (jsc.isElementType(this.valueElement, 'input')) {\r\n\t\t\t\t\tif (!this.refine) {\r\n\t\t\t\t\t\tif (!this.fromString(this.valueElement.value, jsc.leaveValue)) {\r\n\t\t\t\t\t\t\tif (this.styleElement) {\r\n\t\t\t\t\t\t\t\tthis.styleElement.style.backgroundImage = this.styleElement._jscOrigStyle.backgroundImage;\r\n\t\t\t\t\t\t\t\tthis.styleElement.style.backgroundColor = this.styleElement._jscOrigStyle.backgroundColor;\r\n\t\t\t\t\t\t\t\tthis.styleElement.style.color = this.styleElement._jscOrigStyle.color;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.exportColor(jsc.leaveValue | jsc.leaveStyle);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (!this.required && /^\\s*$/.test(this.valueElement.value)) {\r\n\t\t\t\t\t\tthis.valueElement.value = '';\r\n\t\t\t\t\t\tif (this.styleElement) {\r\n\t\t\t\t\t\t\tthis.styleElement.style.backgroundImage = this.styleElement._jscOrigStyle.backgroundImage;\r\n\t\t\t\t\t\t\tthis.styleElement.style.backgroundColor = this.styleElement._jscOrigStyle.backgroundColor;\r\n\t\t\t\t\t\t\tthis.styleElement.style.color = this.styleElement._jscOrigStyle.color;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.exportColor(jsc.leaveValue | jsc.leaveStyle);\r\n\r\n\t\t\t\t\t} else if (this.fromString(this.valueElement.value)) {\r\n\t\t\t\t\t\t// managed to import color successfully from the value -> OK, don't do anything\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.exportColor(2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// not an input element -> doesn't have any value\r\n\t\t\t\t\tthis.exportColor();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.exportColor = function (flags) {\r\n            if (flags == 2) {\r\n                if (this.styleElement) {\r\n                    this.styleElement.style.backgroundImage = 'none';\r\n                    this.styleElement.style.backgroundColor = 'transparent';\r\n                    this.styleElement.style.color = '#000';\r\n                }\r\n            } else {\r\n\t\t\t    if (!(flags & jsc.leaveValue) && this.valueElement) {\r\n\t\t\t\t    var value = this.toString();\r\n\t\t\t\t    if (this.uppercase) { value = value.toUpperCase(); }\r\n\t\t\t\t    if (this.hash) { value = '#' + value; }\r\n\r\n\t\t\t\t    if (jsc.isElementType(this.valueElement, 'input')) {\r\n\t\t\t\t\t    this.valueElement.value = value;\r\n\t\t\t\t    } else {\r\n\t\t\t\t\t    this.valueElement.innerHTML = value;\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t\t    if (!(flags & jsc.leaveStyle)) {\r\n\t\t\t\t    if (this.styleElement) {\r\n\t\t\t\t\t    this.styleElement.style.backgroundImage = 'none';\r\n\t\t\t\t\t    this.styleElement.style.backgroundColor = '#' + this.toString();\r\n\t\t\t\t\t    this.styleElement.style.color = this.isLight() ? '#000' : '#FFF';\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t\t    if (!(flags & jsc.leavePad) && isPickerOwner()) {\r\n\t\t\t\t    redrawPad();\r\n\t\t\t    }\r\n\t\t\t    if (!(flags & jsc.leaveSld) && isPickerOwner()) {\r\n\t\t\t\t    redrawSld();\r\n\t\t\t    }\r\n            }\r\n\t\t};\r\n\r\n\r\n\t\t// h: 0-360\r\n\t\t// s: 0-100\r\n\t\t// v: 0-100\r\n\t\t//\r\n\t\tthis.fromHSV = function (h, s, v, flags) { // null = don't change\r\n\t\t\tif (h !== null) {\r\n\t\t\t\tif (isNaN(h)) { return false; }\r\n\t\t\t\th = Math.max(0, Math.min(360, h));\r\n\t\t\t}\r\n\t\t\tif (s !== null) {\r\n\t\t\t\tif (isNaN(s)) { return false; }\r\n\t\t\t\ts = Math.max(0, Math.min(100, this.maxS, s), this.minS);\r\n\t\t\t}\r\n\t\t\tif (v !== null) {\r\n\t\t\t\tif (isNaN(v)) { return false; }\r\n\t\t\t\tv = Math.max(0, Math.min(100, this.maxV, v), this.minV);\r\n\t\t\t}\r\n\r\n\t\t\tthis.rgb = HSV_RGB(\r\n\t\t\t\th===null ? this.hsv[0] : (this.hsv[0]=h),\r\n\t\t\t\ts===null ? this.hsv[1] : (this.hsv[1]=s),\r\n\t\t\t\tv===null ? this.hsv[2] : (this.hsv[2]=v)\r\n\t\t\t);\r\n\r\n\t\t\tthis.exportColor(flags);\r\n\t\t};\r\n\r\n\r\n\t\t// r: 0-255\r\n\t\t// g: 0-255\r\n\t\t// b: 0-255\r\n\t\t//\r\n\t\tthis.fromRGB = function (r, g, b, flags) { // null = don't change\r\n\t\t\tif (r !== null) {\r\n\t\t\t\tif (isNaN(r)) { return false; }\r\n\t\t\t\tr = Math.max(0, Math.min(255, r));\r\n\t\t\t}\r\n\t\t\tif (g !== null) {\r\n\t\t\t\tif (isNaN(g)) { return false; }\r\n\t\t\t\tg = Math.max(0, Math.min(255, g));\r\n\t\t\t}\r\n\t\t\tif (b !== null) {\r\n\t\t\t\tif (isNaN(b)) { return false; }\r\n\t\t\t\tb = Math.max(0, Math.min(255, b));\r\n\t\t\t}\r\n\r\n\t\t\tvar hsv = RGB_HSV(\r\n\t\t\t\tr===null ? this.rgb[0] : r,\r\n\t\t\t\tg===null ? this.rgb[1] : g,\r\n\t\t\t\tb===null ? this.rgb[2] : b\r\n\t\t\t);\r\n\t\t\tif (hsv[0] !== null) {\r\n\t\t\t\tthis.hsv[0] = Math.max(0, Math.min(360, hsv[0]));\r\n\t\t\t}\r\n\t\t\tif (hsv[2] !== 0) {\r\n\t\t\t\tthis.hsv[1] = hsv[1]===null ? null : Math.max(0, this.minS, Math.min(100, this.maxS, hsv[1]));\r\n\t\t\t}\r\n\t\t\tthis.hsv[2] = hsv[2]===null ? null : Math.max(0, this.minV, Math.min(100, this.maxV, hsv[2]));\r\n\r\n\t\t\t// update RGB according to final HSV, as some values might be trimmed\r\n\t\t\tvar rgb = HSV_RGB(this.hsv[0], this.hsv[1], this.hsv[2]);\r\n\t\t\tthis.rgb[0] = rgb[0];\r\n\t\t\tthis.rgb[1] = rgb[1];\r\n\t\t\tthis.rgb[2] = rgb[2];\r\n\r\n\t\t\tthis.exportColor(flags);\r\n\t\t};\r\n\r\n\r\n\t\tthis.fromString = function (str, flags) {\r\n\t\t\tvar m;\r\n\t\t\tif (m = str.match(/^\\W*([0-9A-F]{3}([0-9A-F]{3})?)\\W*$/i)) {\r\n\t\t\t\t// HEX notation\r\n\t\t\t\t//\r\n\r\n\t\t\t\tif (m[1].length === 6) {\r\n\t\t\t\t\t// 6-char notation\r\n\t\t\t\t\tthis.fromRGB(\r\n\t\t\t\t\t\tparseInt(m[1].substr(0,2),16),\r\n\t\t\t\t\t\tparseInt(m[1].substr(2,2),16),\r\n\t\t\t\t\t\tparseInt(m[1].substr(4,2),16),\r\n\t\t\t\t\t\tflags\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 3-char notation\r\n\t\t\t\t\tthis.fromRGB(\r\n\t\t\t\t\t\tparseInt(m[1].charAt(0) + m[1].charAt(0),16),\r\n\t\t\t\t\t\tparseInt(m[1].charAt(1) + m[1].charAt(1),16),\r\n\t\t\t\t\t\tparseInt(m[1].charAt(2) + m[1].charAt(2),16),\r\n\t\t\t\t\t\tflags\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t} else if (m = str.match(/^\\W*rgba?\\(([^)]*)\\)\\W*$/i)) {\r\n\t\t\t\tvar params = m[1].split(',');\r\n\t\t\t\tvar re = /^\\s*(\\d*)(\\.\\d+)?\\s*$/;\r\n\t\t\t\tvar mR, mG, mB;\r\n\t\t\t\tif (\r\n\t\t\t\t\tparams.length >= 3 &&\r\n\t\t\t\t\t(mR = params[0].match(re)) &&\r\n\t\t\t\t\t(mG = params[1].match(re)) &&\r\n\t\t\t\t\t(mB = params[2].match(re))\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar r = parseFloat((mR[1] || '0') + (mR[2] || ''));\r\n\t\t\t\t\tvar g = parseFloat((mG[1] || '0') + (mG[2] || ''));\r\n\t\t\t\t\tvar b = parseFloat((mB[1] || '0') + (mB[2] || ''));\r\n\t\t\t\t\tthis.fromRGB(r, g, b, flags);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\r\n\t\tthis.toString = function () {\r\n\t\t\treturn (\r\n\t\t\t\t(0x100 | Math.round(this.rgb[0])).toString(16).substr(1) +\r\n\t\t\t\t(0x100 | Math.round(this.rgb[1])).toString(16).substr(1) +\r\n\t\t\t\t(0x100 | Math.round(this.rgb[2])).toString(16).substr(1)\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tthis.toHEXString = function () {\r\n\t\t\treturn '#' + this.toString().toUpperCase();\r\n\t\t};\r\n\r\n\r\n\t\tthis.toRGBString = function () {\r\n\t\t\treturn ('rgb(' +\r\n\t\t\t\tMath.round(this.rgb[0]) + ',' +\r\n\t\t\t\tMath.round(this.rgb[1]) + ',' +\r\n\t\t\t\tMath.round(this.rgb[2]) + ')'\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tthis.isLight = function () {\r\n\t\t\treturn (\r\n\t\t\t\t0.213 * this.rgb[0] +\r\n\t\t\t\t0.715 * this.rgb[1] +\r\n\t\t\t\t0.072 * this.rgb[2] >\r\n\t\t\t\t255 / 2\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tthis._processParentElementsInDOM = function () {\r\n\t\t\tif (this._linkedElementsProcessed) { return; }\r\n\t\t\tthis._linkedElementsProcessed = true;\r\n\r\n\t\t\tvar elm = this.targetElement;\r\n\t\t\tdo {\r\n\t\t\t\t// If the target element or one of its parent nodes has fixed position,\r\n\t\t\t\t// then use fixed positioning instead\r\n\t\t\t\t//\r\n\t\t\t\t// Note: In Firefox, getComputedStyle returns null in a hidden iframe,\r\n\t\t\t\t// that's why we need to check if the returned style object is non-empty\r\n\t\t\t\tvar currStyle = jsc.getStyle(elm);\r\n\t\t\t\tif (currStyle && currStyle.position.toLowerCase() === 'fixed') {\r\n\t\t\t\t\tthis.fixed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (elm !== this.targetElement) {\r\n\t\t\t\t\t// Ensure to attach onParentScroll only once to each parent element\r\n\t\t\t\t\t// (multiple targetElements can share the same parent nodes)\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// Note: It's not just offsetParents that can be scrollable,\r\n\t\t\t\t\t// that's why we loop through all parent nodes\r\n\t\t\t\t\tif (!elm._jscEventsAttached) {\r\n\t\t\t\t\t\tjsc.attachEvent(elm, 'scroll', jsc.onParentScroll);\r\n\t\t\t\t\t\telm._jscEventsAttached = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while ((elm = elm.parentNode) && !jsc.isElementType(elm, 'body'));\r\n\t\t};\r\n\r\n\r\n\t\t// r: 0-255\r\n\t\t// g: 0-255\r\n\t\t// b: 0-255\r\n\t\t//\r\n\t\t// returns: [ 0-360, 0-100, 0-100 ]\r\n\t\t//\r\n\t\tfunction RGB_HSV (r, g, b) {\r\n\t\t\tr /= 255;\r\n\t\t\tg /= 255;\r\n\t\t\tb /= 255;\r\n\t\t\tvar n = Math.min(Math.min(r,g),b);\r\n\t\t\tvar v = Math.max(Math.max(r,g),b);\r\n\t\t\tvar m = v - n;\r\n\t\t\tif (m === 0) { return [ null, 0, 100 * v ]; }\r\n\t\t\tvar h = r===n ? 3+(b-g)/m : (g===n ? 5+(r-b)/m : 1+(g-r)/m);\r\n\t\t\treturn [\r\n\t\t\t\t60 * (h===6?0:h),\r\n\t\t\t\t100 * (m/v),\r\n\t\t\t\t100 * v\r\n\t\t\t];\r\n\t\t}\r\n\r\n\r\n\t\t// h: 0-360\r\n\t\t// s: 0-100\r\n\t\t// v: 0-100\r\n\t\t//\r\n\t\t// returns: [ 0-255, 0-255, 0-255 ]\r\n\t\t//\r\n\t\tfunction HSV_RGB (h, s, v) {\r\n\t\t\tvar u = 255 * (v / 100);\r\n\r\n\t\t\tif (h === null) {\r\n\t\t\t\treturn [ u, u, u ];\r\n\t\t\t}\r\n\r\n\t\t\th /= 60;\r\n\t\t\ts /= 100;\r\n\r\n\t\t\tvar i = Math.floor(h);\r\n\t\t\tvar f = i%2 ? h-i : 1-(h-i);\r\n\t\t\tvar m = u * (1 - s);\r\n\t\t\tvar n = u * (1 - s * f);\r\n\t\t\tswitch (i) {\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 0: return [u,n,m];\r\n\t\t\t\tcase 1: return [n,u,m];\r\n\t\t\t\tcase 2: return [m,u,n];\r\n\t\t\t\tcase 3: return [m,n,u];\r\n\t\t\t\tcase 4: return [n,m,u];\r\n\t\t\t\tcase 5: return [u,m,n];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction detachPicker () {\r\n\t\t\tjsc.unsetClass(THIS.targetElement, THIS.activeClass);\r\n\t\t\tjsc.picker.wrap.parentNode.removeChild(jsc.picker.wrap);\r\n\t\t\tdelete jsc.picker.owner;\r\n\t\t}\r\n\r\n\r\n\t\tfunction drawPicker () {\r\n\r\n\t\t\t// At this point, when drawing the picker, we know what the parent elements are\r\n\t\t\t// and we can do all related DOM operations, such as registering events on them\r\n\t\t\t// or checking their positioning\r\n\t\t\tTHIS._processParentElementsInDOM();\r\n\r\n\t\t\tif (!jsc.picker) {\r\n\t\t\t\tjsc.picker = {\r\n\t\t\t\t\towner: null,\r\n\t\t\t\t\twrap : document.createElement('div'),\r\n\t\t\t\t\tbox : document.createElement('div'),\r\n\t\t\t\t\tboxS : document.createElement('div'), // shadow area\r\n\t\t\t\t\tboxB : document.createElement('div'), // border\r\n\t\t\t\t\tpad : document.createElement('div'),\r\n\t\t\t\t\tpadB : document.createElement('div'), // border\r\n\t\t\t\t\tpadM : document.createElement('div'), // mouse/touch area\r\n\t\t\t\t\tpadPal : jsc.createPalette(),\r\n\t\t\t\t\tcross : document.createElement('div'),\r\n\t\t\t\t\tcrossBY : document.createElement('div'), // border Y\r\n\t\t\t\t\tcrossBX : document.createElement('div'), // border X\r\n\t\t\t\t\tcrossLY : document.createElement('div'), // line Y\r\n\t\t\t\t\tcrossLX : document.createElement('div'), // line X\r\n\t\t\t\t\tsld : document.createElement('div'),\r\n\t\t\t\t\tsldB : document.createElement('div'), // border\r\n\t\t\t\t\tsldM : document.createElement('div'), // mouse/touch area\r\n\t\t\t\t\tsldGrad : jsc.createSliderGradient(),\r\n\t\t\t\t\tsldPtrS : document.createElement('div'), // slider pointer spacer\r\n\t\t\t\t\tsldPtrIB : document.createElement('div'), // slider pointer inner border\r\n\t\t\t\t\tsldPtrMB : document.createElement('div'), // slider pointer middle border\r\n\t\t\t\t\tsldPtrOB : document.createElement('div'), // slider pointer outer border\r\n\t\t\t\t\tbtn : document.createElement('div'),\r\n\t\t\t\t\tbtnT : document.createElement('span') // text\r\n\t\t\t\t};\r\n\r\n\t\t\t\tjsc.picker.pad.appendChild(jsc.picker.padPal.elm);\r\n\t\t\t\tjsc.picker.padB.appendChild(jsc.picker.pad);\r\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossBY);\r\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossBX);\r\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossLY);\r\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossLX);\r\n\t\t\t\tjsc.picker.padB.appendChild(jsc.picker.cross);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.padB);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.padM);\r\n\r\n\t\t\t\tjsc.picker.sld.appendChild(jsc.picker.sldGrad.elm);\r\n\t\t\t\tjsc.picker.sldB.appendChild(jsc.picker.sld);\r\n\t\t\t\tjsc.picker.sldB.appendChild(jsc.picker.sldPtrOB);\r\n\t\t\t\tjsc.picker.sldPtrOB.appendChild(jsc.picker.sldPtrMB);\r\n\t\t\t\tjsc.picker.sldPtrMB.appendChild(jsc.picker.sldPtrIB);\r\n\t\t\t\tjsc.picker.sldPtrIB.appendChild(jsc.picker.sldPtrS);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.sldB);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.sldM);\r\n\r\n\t\t\t\tjsc.picker.btn.appendChild(jsc.picker.btnT);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.btn);\r\n\r\n\t\t\t\tjsc.picker.boxB.appendChild(jsc.picker.box);\r\n\t\t\t\tjsc.picker.wrap.appendChild(jsc.picker.boxS);\r\n\t\t\t\tjsc.picker.wrap.appendChild(jsc.picker.boxB);\r\n\t\t\t}\r\n\r\n\t\t\tvar p = jsc.picker;\r\n\r\n\t\t\tvar displaySlider = !!jsc.getSliderComponent(THIS);\r\n\t\t\tvar dims = jsc.getPickerDims(THIS);\r\n\t\t\tvar crossOuterSize = (2 * THIS.pointerBorderWidth + THIS.pointerThickness + 2 * THIS.crossSize);\r\n\t\t\tvar padToSliderPadding = jsc.getPadToSliderPadding(THIS);\r\n\t\t\tvar borderRadius = Math.min(\r\n\t\t\t\tTHIS.borderRadius,\r\n\t\t\t\tMath.round(THIS.padding * Math.PI)); // px\r\n\t\t\tvar padCursor = 'crosshair';\r\n\r\n\t\t\t// wrap\r\n\t\t\tp.wrap.style.clear = 'both';\r\n\t\t\tp.wrap.style.width = (dims[0] + 2 * THIS.borderWidth) + 'px';\r\n\t\t\tp.wrap.style.height = (dims[1] + 2 * THIS.borderWidth) + 'px';\r\n\t\t\tp.wrap.style.zIndex = THIS.zIndex;\r\n\r\n\t\t\t// picker\r\n\t\t\tp.box.style.width = dims[0] + 'px';\r\n\t\t\tp.box.style.height = dims[1] + 'px';\r\n\r\n\t\t\tp.boxS.style.position = 'absolute';\r\n\t\t\tp.boxS.style.left = '0';\r\n\t\t\tp.boxS.style.top = '0';\r\n\t\t\tp.boxS.style.width = '100%';\r\n\t\t\tp.boxS.style.height = '100%';\r\n\t\t\tjsc.setBorderRadius(p.boxS, borderRadius + 'px');\r\n\r\n\t\t\t// picker border\r\n\t\t\tp.boxB.style.position = 'relative';\r\n\t\t\tp.boxB.style.border = THIS.borderWidth + 'px solid';\r\n\t\t\tp.boxB.style.borderColor = THIS.borderColor;\r\n\t\t\tp.boxB.style.background = THIS.backgroundColor;\r\n\t\t\tjsc.setBorderRadius(p.boxB, borderRadius + 'px');\r\n\r\n\t\t\t// IE hack:\r\n\t\t\t// If the element is transparent, IE will trigger the event on the elements under it,\r\n\t\t\t// e.g. on Canvas or on elements with border\r\n\t\t\tp.padM.style.background =\r\n\t\t\tp.sldM.style.background =\r\n\t\t\t\t'#FFF';\r\n\t\t\tjsc.setStyle(p.padM, 'opacity', '0');\r\n\t\t\tjsc.setStyle(p.sldM, 'opacity', '0');\r\n\r\n\t\t\t// pad\r\n\t\t\tp.pad.style.position = 'relative';\r\n\t\t\tp.pad.style.width = THIS.width + 'px';\r\n\t\t\tp.pad.style.height = THIS.height + 'px';\r\n\r\n\t\t\t// pad palettes (HSV and HVS)\r\n\t\t\tp.padPal.draw(THIS.width, THIS.height, jsc.getPadYComponent(THIS));\r\n\r\n\t\t\t// pad border\r\n\t\t\tp.padB.style.position = 'absolute';\r\n\t\t\tp.padB.style.left = THIS.padding + 'px';\r\n\t\t\tp.padB.style.top = THIS.padding + 'px';\r\n\t\t\tp.padB.style.border = THIS.insetWidth + 'px solid';\r\n\t\t\tp.padB.style.borderColor = THIS.insetColor;\r\n\r\n\t\t\t// pad mouse area\r\n\t\t\tp.padM._jscInstance = THIS;\r\n\t\t\tp.padM._jscControlName = 'pad';\r\n\t\t\tp.padM.style.position = 'absolute';\r\n\t\t\tp.padM.style.left = '0';\r\n\t\t\tp.padM.style.top = '0';\r\n\t\t\tp.padM.style.width = (THIS.padding + 2 * THIS.insetWidth + THIS.width + padToSliderPadding / 2) + 'px';\r\n\t\t\tp.padM.style.height = dims[1] + 'px';\r\n\t\t\tp.padM.style.cursor = padCursor;\r\n\r\n\t\t\t// pad cross\r\n\t\t\tp.cross.style.position = 'absolute';\r\n\t\t\tp.cross.style.left =\r\n\t\t\tp.cross.style.top =\r\n\t\t\t\t'0';\r\n\t\t\tp.cross.style.width =\r\n\t\t\tp.cross.style.height =\r\n\t\t\t\tcrossOuterSize + 'px';\r\n\r\n\t\t\t// pad cross border Y and X\r\n\t\t\tp.crossBY.style.position =\r\n\t\t\tp.crossBX.style.position =\r\n\t\t\t\t'absolute';\r\n\t\t\tp.crossBY.style.background =\r\n\t\t\tp.crossBX.style.background =\r\n\t\t\t\tTHIS.pointerBorderColor;\r\n\t\t\tp.crossBY.style.width =\r\n\t\t\tp.crossBX.style.height =\r\n\t\t\t\t(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\r\n\t\t\tp.crossBY.style.height =\r\n\t\t\tp.crossBX.style.width =\r\n\t\t\t\tcrossOuterSize + 'px';\r\n\t\t\tp.crossBY.style.left =\r\n\t\t\tp.crossBX.style.top =\r\n\t\t\t\t(Math.floor(crossOuterSize / 2) - Math.floor(THIS.pointerThickness / 2) - THIS.pointerBorderWidth) + 'px';\r\n\t\t\tp.crossBY.style.top =\r\n\t\t\tp.crossBX.style.left =\r\n\t\t\t\t'0';\r\n\r\n\t\t\t// pad cross line Y and X\r\n\t\t\tp.crossLY.style.position =\r\n\t\t\tp.crossLX.style.position =\r\n\t\t\t\t'absolute';\r\n\t\t\tp.crossLY.style.background =\r\n\t\t\tp.crossLX.style.background =\r\n\t\t\t\tTHIS.pointerColor;\r\n\t\t\tp.crossLY.style.height =\r\n\t\t\tp.crossLX.style.width =\r\n\t\t\t\t(crossOuterSize - 2 * THIS.pointerBorderWidth) + 'px';\r\n\t\t\tp.crossLY.style.width =\r\n\t\t\tp.crossLX.style.height =\r\n\t\t\t\tTHIS.pointerThickness + 'px';\r\n\t\t\tp.crossLY.style.left =\r\n\t\t\tp.crossLX.style.top =\r\n\t\t\t\t(Math.floor(crossOuterSize / 2) - Math.floor(THIS.pointerThickness / 2)) + 'px';\r\n\t\t\tp.crossLY.style.top =\r\n\t\t\tp.crossLX.style.left =\r\n\t\t\t\tTHIS.pointerBorderWidth + 'px';\r\n\r\n\t\t\t// slider\r\n\t\t\tp.sld.style.overflow = 'hidden';\r\n\t\t\tp.sld.style.width = THIS.sliderSize + 'px';\r\n\t\t\tp.sld.style.height = THIS.height + 'px';\r\n\r\n\t\t\t// slider gradient\r\n\t\t\tp.sldGrad.draw(THIS.sliderSize, THIS.height, '#000', '#000');\r\n\r\n\t\t\t// slider border\r\n\t\t\tp.sldB.style.display = displaySlider ? 'block' : 'none';\r\n\t\t\tp.sldB.style.position = 'absolute';\r\n\t\t\tp.sldB.style.right = THIS.padding + 'px';\r\n\t\t\tp.sldB.style.top = THIS.padding + 'px';\r\n\t\t\tp.sldB.style.border = THIS.insetWidth + 'px solid';\r\n\t\t\tp.sldB.style.borderColor = THIS.insetColor;\r\n\r\n\t\t\t// slider mouse area\r\n\t\t\tp.sldM._jscInstance = THIS;\r\n\t\t\tp.sldM._jscControlName = 'sld';\r\n\t\t\tp.sldM.style.display = displaySlider ? 'block' : 'none';\r\n\t\t\tp.sldM.style.position = 'absolute';\r\n\t\t\tp.sldM.style.right = '0';\r\n\t\t\tp.sldM.style.top = '0';\r\n\t\t\tp.sldM.style.width = (THIS.sliderSize + padToSliderPadding / 2 + THIS.padding + 2 * THIS.insetWidth) + 'px';\r\n\t\t\tp.sldM.style.height = dims[1] + 'px';\r\n\t\t\tp.sldM.style.cursor = 'default';\r\n\r\n\t\t\t// slider pointer inner and outer border\r\n\t\t\tp.sldPtrIB.style.border =\r\n\t\t\tp.sldPtrOB.style.border =\r\n\t\t\t\tTHIS.pointerBorderWidth + 'px solid ' + THIS.pointerBorderColor;\r\n\r\n\t\t\t// slider pointer outer border\r\n\t\t\tp.sldPtrOB.style.position = 'absolute';\r\n\t\t\tp.sldPtrOB.style.left = -(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\r\n\t\t\tp.sldPtrOB.style.top = '0';\r\n\r\n\t\t\t// slider pointer middle border\r\n\t\t\tp.sldPtrMB.style.border = THIS.pointerThickness + 'px solid ' + THIS.pointerColor;\r\n\r\n\t\t\t// slider pointer spacer\r\n\t\t\tp.sldPtrS.style.width = THIS.sliderSize + 'px';\r\n\t\t\tp.sldPtrS.style.height = sliderPtrSpace + 'px';\r\n\r\n\t\t\t// the Close button\r\n\t\t\tfunction setBtnBorder () {\r\n\t\t\t\tvar insetColors = THIS.insetColor.split(/\\s+/);\r\n\t\t\t\tvar outsetColor = insetColors.length < 2 ? insetColors[0] : insetColors[1] + ' ' + insetColors[0] + ' ' + insetColors[0] + ' ' + insetColors[1];\r\n\t\t\t\tp.btn.style.borderColor = outsetColor;\r\n\t\t\t}\r\n\t\t\tp.btn.style.display = THIS.closable ? 'block' : 'none';\r\n\t\t\tp.btn.style.position = 'absolute';\r\n\t\t\tp.btn.style.left = THIS.padding + 'px';\r\n\t\t\tp.btn.style.bottom = THIS.padding + 'px';\r\n\t\t\tp.btn.style.padding = '0 15px';\r\n\t\t\tp.btn.style.height = THIS.buttonHeight + 'px';\r\n\t\t\tp.btn.style.border = THIS.insetWidth + 'px solid';\r\n\t\t\tsetBtnBorder();\r\n\t\t\tp.btn.style.color = THIS.buttonColor;\r\n\t\t\tp.btn.style.font = '12px sans-serif';\r\n\t\t\tp.btn.style.textAlign = 'center';\r\n\t\t\ttry {\r\n\t\t\t\tp.btn.style.cursor = 'pointer';\r\n\t\t\t} catch(eOldIE) {\r\n\t\t\t\tp.btn.style.cursor = 'hand';\r\n\t\t\t}\r\n\t\t\tp.btn.onmousedown = function () {\r\n\t\t\t\tTHIS.hide();\r\n\t\t\t};\r\n\t\t\tp.btnT.style.lineHeight = THIS.buttonHeight + 'px';\r\n\t\t\tp.btnT.innerHTML = '';\r\n\t\t\tp.btnT.appendChild(document.createTextNode(THIS.closeText));\r\n\r\n\t\t\t// place pointers\r\n\t\t\tredrawPad();\r\n\t\t\tredrawSld();\r\n\r\n\t\t\t// If we are changing the owner without first closing the picker,\r\n\t\t\t// make sure to first deal with the old owner\r\n\t\t\tif (jsc.picker.owner && jsc.picker.owner !== THIS) {\r\n\t\t\t\tjsc.unsetClass(jsc.picker.owner.targetElement, THIS.activeClass);\r\n\t\t\t}\r\n\r\n\t\t\t// Set the new picker owner\r\n\t\t\tjsc.picker.owner = THIS;\r\n\r\n\t\t\t// The redrawPosition() method needs picker.owner to be set, that's why we call it here,\r\n\t\t\t// after setting the owner\r\n\t\t\tif (jsc.isElementType(container, 'body')) {\r\n\t\t\t\tjsc.redrawPosition();\r\n\t\t\t} else {\r\n\t\t\t\tjsc._drawPosition(THIS, 0, 0, 'relative', false);\r\n\t\t\t}\r\n\r\n\t\t\tif (p.wrap.parentNode != container) {\r\n\t\t\t\tcontainer.appendChild(p.wrap);\r\n\t\t\t}\r\n\r\n\t\t\tjsc.setClass(THIS.targetElement, THIS.activeClass);\r\n\t\t}\r\n\r\n\r\n\t\tfunction redrawPad () {\r\n\t\t\t// redraw the pad pointer\r\n\t\t\tswitch (jsc.getPadYComponent(THIS)) {\r\n\t\t\tcase 's': var yComponent = 1; break;\r\n\t\t\tcase 'v': var yComponent = 2; break;\r\n\t\t\t}\r\n\t\t\tvar x = Math.round((THIS.hsv[0] / 360) * (THIS.width - 1));\r\n\t\t\tvar y = Math.round((1 - THIS.hsv[yComponent] / 100) * (THIS.height - 1));\r\n\t\t\tvar crossOuterSize = (2 * THIS.pointerBorderWidth + THIS.pointerThickness + 2 * THIS.crossSize);\r\n\t\t\tvar ofs = -Math.floor(crossOuterSize / 2);\r\n\t\t\tjsc.picker.cross.style.left = (x + ofs) + 'px';\r\n\t\t\tjsc.picker.cross.style.top = (y + ofs) + 'px';\r\n\r\n\t\t\t// redraw the slider\r\n\t\t\tswitch (jsc.getSliderComponent(THIS)) {\r\n\t\t\tcase 's':\r\n\t\t\t\tvar rgb1 = HSV_RGB(THIS.hsv[0], 100, THIS.hsv[2]);\r\n\t\t\t\tvar rgb2 = HSV_RGB(THIS.hsv[0], 0, THIS.hsv[2]);\r\n\t\t\t\tvar color1 = 'rgb(' +\r\n\t\t\t\t\tMath.round(rgb1[0]) + ',' +\r\n\t\t\t\t\tMath.round(rgb1[1]) + ',' +\r\n\t\t\t\t\tMath.round(rgb1[2]) + ')';\r\n\t\t\t\tvar color2 = 'rgb(' +\r\n\t\t\t\t\tMath.round(rgb2[0]) + ',' +\r\n\t\t\t\t\tMath.round(rgb2[1]) + ',' +\r\n\t\t\t\t\tMath.round(rgb2[2]) + ')';\r\n\t\t\t\tjsc.picker.sldGrad.draw(THIS.sliderSize, THIS.height, color1, color2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'v':\r\n\t\t\t\tvar rgb = HSV_RGB(THIS.hsv[0], THIS.hsv[1], 100);\r\n\t\t\t\tvar color1 = 'rgb(' +\r\n\t\t\t\t\tMath.round(rgb[0]) + ',' +\r\n\t\t\t\t\tMath.round(rgb[1]) + ',' +\r\n\t\t\t\t\tMath.round(rgb[2]) + ')';\r\n\t\t\t\tvar color2 = '#000';\r\n\t\t\t\tjsc.picker.sldGrad.draw(THIS.sliderSize, THIS.height, color1, color2);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction redrawSld () {\r\n\t\t\tvar sldComponent = jsc.getSliderComponent(THIS);\r\n\t\t\tif (sldComponent) {\r\n\t\t\t\t// redraw the slider pointer\r\n\t\t\t\tswitch (sldComponent) {\r\n\t\t\t\tcase 's': var yComponent = 1; break;\r\n\t\t\t\tcase 'v': var yComponent = 2; break;\r\n\t\t\t\t}\r\n\t\t\t\tvar y = Math.round((1 - THIS.hsv[yComponent] / 100) * (THIS.height - 1));\r\n\t\t\t\tjsc.picker.sldPtrOB.style.top = (y - (2 * THIS.pointerBorderWidth + THIS.pointerThickness) - Math.floor(sliderPtrSpace / 2)) + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction isPickerOwner () {\r\n\t\t\treturn jsc.picker && jsc.picker.owner === THIS;\r\n\t\t}\r\n\r\n\r\n\t\tfunction blurValue () {\r\n\t\t\tTHIS.importColor();\r\n\t\t}\r\n\r\n\r\n\t\t// Find the target element\r\n\t\tif (typeof targetElement === 'string') {\r\n\t\t\tvar id = targetElement;\r\n\t\t\tvar elm = document.getElementById(id);\r\n\t\t\tif (elm) {\r\n\t\t\t\tthis.targetElement = elm;\r\n\t\t\t} else {\r\n\t\t\t\tjsc.warn('Could not find target element with ID \\'' + id + '\\'');\r\n\t\t\t}\r\n\t\t} else if (targetElement) {\r\n\t\t\tthis.targetElement = targetElement;\r\n\t\t} else {\r\n\t\t\tjsc.warn('Invalid target element: \\'' + targetElement + '\\'');\r\n\t\t}\r\n\r\n\t\tif (this.targetElement._jscLinkedInstance) {\r\n\t\t\tjsc.warn('Cannot link jscolor twice to the same element. Skipping.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.targetElement._jscLinkedInstance = this;\r\n\r\n\t\t// Find the value element\r\n\t\tthis.valueElement = jsc.fetchElement(this.valueElement);\r\n\t\t// Find the style element\r\n\t\tthis.styleElement = jsc.fetchElement(this.styleElement);\r\n\r\n\t\tvar THIS = this;\r\n\t\tvar container =\r\n\t\t\tthis.container ?\r\n\t\t\tjsc.fetchElement(this.container) :\r\n\t\t\tdocument.getElementsByTagName('body')[0];\r\n\t\tvar sliderPtrSpace = 3; // px\r\n\r\n\t\t// For BUTTON elements it's important to stop them from sending the form when clicked\r\n\t\t// (e.g. in Safari)\r\n\t\tif (jsc.isElementType(this.targetElement, 'button')) {\r\n\t\t\tif (this.targetElement.onclick) {\r\n\t\t\t\tvar origCallback = this.targetElement.onclick;\r\n\t\t\t\tthis.targetElement.onclick = function (evt) {\r\n\t\t\t\t\torigCallback.call(this, evt);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetElement.onclick = function () { return false; };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tvar elm = this.targetElement;\r\n\t\tdo {\r\n\t\t\t// If the target element or one of its offsetParents has fixed position,\r\n\t\t\t// then use fixed positioning instead\r\n\t\t\t//\r\n\t\t\t// Note: In Firefox, getComputedStyle returns null in a hidden iframe,\r\n\t\t\t// that's why we need to check if the returned style object is non-empty\r\n\t\t\tvar currStyle = jsc.getStyle(elm);\r\n\t\t\tif (currStyle && currStyle.position.toLowerCase() === 'fixed') {\r\n\t\t\t\tthis.fixed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (elm !== this.targetElement) {\r\n\t\t\t\t// attach onParentScroll so that we can recompute the picker position\r\n\t\t\t\t// when one of the offsetParents is scrolled\r\n\t\t\t\tif (!elm._jscEventsAttached) {\r\n\t\t\t\t\tjsc.attachEvent(elm, 'scroll', jsc.onParentScroll);\r\n\t\t\t\t\telm._jscEventsAttached = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while ((elm = elm.offsetParent) && !jsc.isElementType(elm, 'body'));\r\n\t\t*/\r\n\r\n\t\t// valueElement\r\n\t\tif (this.valueElement) {\r\n\t\t\tif (jsc.isElementType(this.valueElement, 'input')) {\r\n\t\t\t\tvar updateField = function () {\r\n\t\t\t\t\tTHIS.fromString(THIS.valueElement.value, jsc.leaveValue);\r\n\t\t\t\t\tjsc.dispatchFineChange(THIS);\r\n\t\t\t\t};\r\n\t\t\t\tjsc.attachEvent(this.valueElement, 'keyup', updateField);\r\n\t\t\t\tjsc.attachEvent(this.valueElement, 'input', updateField);\r\n\t\t\t\tjsc.attachEvent(this.valueElement, 'blur', blurValue);\r\n\t\t\t\tthis.valueElement.setAttribute('autocomplete', 'off');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// styleElement\r\n\t\tif (this.styleElement) {\r\n\t\t\tthis.styleElement._jscOrigStyle = {\r\n\t\t\t\tbackgroundImage : this.styleElement.style.backgroundImage,\r\n\t\t\t\tbackgroundColor : this.styleElement.style.backgroundColor,\r\n\t\t\t\tcolor : this.styleElement.style.color\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (this.value) {\r\n\t\t\t// Try to set the color from the .value option and if unsuccessful,\r\n\t\t\t// export the current color\r\n\t\t\tthis.fromString(this.value) || this.exportColor();\r\n\t\t} else {\r\n\t\t\tthis.importColor();\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\n\r\n//================================\r\n// Public properties and methods\r\n//================================\r\n\r\n\r\n// By default, search for all elements with class=\"jscolor\" and install a color picker on them.\r\n//\r\n// You can change what class name will be looked for by setting the property jscolor.lookupClass\r\n// anywhere in your HTML document. To completely disable the automatic lookup, set it to null.\r\n//\r\njsc.jscolor.lookupClass = 'jscolor';\r\n\r\n\r\njsc.jscolor.installByClassName = function (className) {\r\n\tvar inputElms = document.getElementsByTagName('input');\r\n\tvar buttonElms = document.getElementsByTagName('button');\r\n\r\n\tjsc.tryInstallOnElements(inputElms, className);\r\n\tjsc.tryInstallOnElements(buttonElms, className);\r\n};\r\n\r\n\r\njsc.register();\r\n\r\n\r\nreturn jsc.jscolor;\r\n\r\n\r\n})(); }\r\n","Solwin_ScrolltoTop/js/jscolor.min.js":"/**\n * jscolor - JavaScript Color Picker\n *\n * @link    http://jscolor.com\n * @license For open source use: GPLv3\n *          For commercial use: JSColor Commercial License\n * @author  Jan Odvarko\n *\n * See usage examples at http://jscolor.com/examples/\n */\"use strict\";window.jscolor||(window.jscolor=function(){var e={register:function(){e.attachDOMReadyEvent(e.init),e.attachEvent(document,\"mousedown\",e.onDocumentMouseDown),e.attachEvent(document,\"touchstart\",e.onDocumentTouchStart),e.attachEvent(window,\"resize\",e.onWindowResize)},init:function(){e.jscolor.lookupClass&&e.jscolor.installByClassName(e.jscolor.lookupClass)},tryInstallOnElements:function(t,n){var r=new RegExp(\"(^|\\\\s)(\"+n+\")(\\\\s*(\\\\{[^}]*\\\\})|\\\\s|$)\",\"i\");for(var i=0;i<t.length;i+=1){if(t[i].type!==undefined&&t[i].type.toLowerCase()==\"color\"&&e.isColorAttrSupported)continue;var s;if(!t[i].jscolor&&t[i].className&&(s=t[i].className.match(r))){var o=t[i],u=null,a=e.getDataAttr(o,\"jscolor\");a!==null?u=a:s[4]&&(u=s[4]);var f={};if(u)try{f=(new Function(\"return (\"+u+\")\"))()}catch(l){e.warn(\"Error parsing jscolor options: \"+l+\":\\n\"+u)}o.jscolor=new e.jscolor(o,f)}}},isColorAttrSupported:function(){var e=document.createElement(\"input\");if(e.setAttribute){e.setAttribute(\"type\",\"color\");if(e.type.toLowerCase()==\"color\")return!0}return!1}(),isCanvasSupported:function(){var e=document.createElement(\"canvas\");return!!e.getContext&&!!e.getContext(\"2d\")}(),fetchElement:function(e){return typeof e==\"string\"?document.getElementById(e):e},isElementType:function(e,t){return e.nodeName.toLowerCase()===t.toLowerCase()},getDataAttr:function(e,t){var n=\"data-\"+t,r=e.getAttribute(n);return r!==null?r:null},attachEvent:function(e,t,n){e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent&&e.attachEvent(\"on\"+t,n)},detachEvent:function(e,t,n){e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent&&e.detachEvent(\"on\"+t,n)},_attachedGroupEvents:{},attachGroupEvent:function(t,n,r,i){e._attachedGroupEvents.hasOwnProperty(t)||(e._attachedGroupEvents[t]=[]),e._attachedGroupEvents[t].push([n,r,i]),e.attachEvent(n,r,i)},detachGroupEvents:function(t){if(e._attachedGroupEvents.hasOwnProperty(t)){for(var n=0;n<e._attachedGroupEvents[t].length;n+=1){var r=e._attachedGroupEvents[t][n];e.detachEvent(r[0],r[1],r[2])}delete e._attachedGroupEvents[t]}},attachDOMReadyEvent:function(e){var t=!1,n=function(){t||(t=!0,e())};if(document.readyState===\"complete\"){setTimeout(n,1);return}if(document.addEventListener)document.addEventListener(\"DOMContentLoaded\",n,!1),window.addEventListener(\"load\",n,!1);else if(document.attachEvent){document.attachEvent(\"onreadystatechange\",function(){document.readyState===\"complete\"&&(document.detachEvent(\"onreadystatechange\",arguments.callee),n())}),window.attachEvent(\"onload\",n);if(document.documentElement.doScroll&&window==window.top){var r=function(){if(!document.body)return;try{document.documentElement.doScroll(\"left\"),n()}catch(e){setTimeout(r,1)}};r()}}},warn:function(e){window.console&&window.console.warn&&window.console.warn(e)},preventDefault:function(e){e.preventDefault&&e.preventDefault(),e.returnValue=!1},captureTarget:function(t){t.setCapture&&(e._capturedTarget=t,e._capturedTarget.setCapture())},releaseTarget:function(){e._capturedTarget&&(e._capturedTarget.releaseCapture(),e._capturedTarget=null)},fireEvent:function(e,t){if(!e)return;if(document.createEvent){var n=document.createEvent(\"HTMLEvents\");n.initEvent(t,!0,!0),e.dispatchEvent(n)}else if(document.createEventObject){var n=document.createEventObject();e.fireEvent(\"on\"+t,n)}else e[\"on\"+t]&&e[\"on\"+t]()},classNameToList:function(e){return e.replace(/^\\s+|\\s+$/g,\"\").split(/\\s+/)},hasClass:function(e,t){return t?-1!=(\" \"+e.className.replace(/\\s+/g,\" \")+\" \").indexOf(\" \"+t+\" \"):!1},setClass:function(t,n){var r=e.classNameToList(n);for(var i=0;i<r.length;i+=1)e.hasClass(t,r[i])||(t.className+=(t.className?\" \":\"\")+r[i])},unsetClass:function(t,n){var r=e.classNameToList(n);for(var i=0;i<r.length;i+=1){var s=new RegExp(\"^\\\\s*\"+r[i]+\"\\\\s*|\"+\"\\\\s*\"+r[i]+\"\\\\s*$|\"+\"\\\\s+\"+r[i]+\"(\\\\s+)\",\"g\");t.className=t.className.replace(s,\"$1\")}},getStyle:function(e){return window.getComputedStyle?window.getComputedStyle(e):e.currentStyle},setStyle:function(){var e=document.createElement(\"div\"),t=function(t){for(var n=0;n<t.length;n+=1)if(t[n]in e.style)return t[n]},n={borderRadius:t([\"borderRadius\",\"MozBorderRadius\",\"webkitBorderRadius\"]),boxShadow:t([\"boxShadow\",\"MozBoxShadow\",\"webkitBoxShadow\"])};return function(e,t,r){switch(t.toLowerCase()){case\"opacity\":var i=Math.round(parseFloat(r)*100);e.style.opacity=r,e.style.filter=\"alpha(opacity=\"+i+\")\";break;default:e.style[n[t]]=r}}}(),setBorderRadius:function(t,n){e.setStyle(t,\"borderRadius\",n||\"0\")},setBoxShadow:function(t,n){e.setStyle(t,\"boxShadow\",n||\"none\")},getElementPos:function(t,n){var r=0,i=0,s=t.getBoundingClientRect();r=s.left,i=s.top;if(!n){var o=e.getViewPos();r+=o[0],i+=o[1]}return[r,i]},getElementSize:function(e){return[e.offsetWidth,e.offsetHeight]},getAbsPointerPos:function(e){e||(e=window.event);var t=0,n=0;return typeof e.changedTouches!=\"undefined\"&&e.changedTouches.length?(t=e.changedTouches[0].clientX,n=e.changedTouches[0].clientY):typeof e.clientX==\"number\"&&(t=e.clientX,n=e.clientY),{x:t,y:n}},getRelPointerPos:function(e){e||(e=window.event);var t=e.target||e.srcElement,n=t.getBoundingClientRect(),r=0,i=0,s=0,o=0;return typeof e.changedTouches!=\"undefined\"&&e.changedTouches.length?(s=e.changedTouches[0].clientX,o=e.changedTouches[0].clientY):typeof e.clientX==\"number\"&&(s=e.clientX,o=e.clientY),r=s-n.left,i=o-n.top,{x:r,y:i}},getViewPos:function(){var e=document.documentElement;return[(window.pageXOffset||e.scrollLeft)-(e.clientLeft||0),(window.pageYOffset||e.scrollTop)-(e.clientTop||0)]},getViewSize:function(){var e=document.documentElement;return[window.innerWidth||e.clientWidth,window.innerHeight||e.clientHeight]},redrawPosition:function(){if(e.picker&&e.picker.owner){var t=e.picker.owner,n,r;t.fixed?(n=e.getElementPos(t.targetElement,!0),r=[0,0]):(n=e.getElementPos(t.targetElement),r=e.getViewPos());var i=e.getElementSize(t.targetElement),s=e.getViewSize(),o=e.getPickerOuterDims(t),u,a,f;switch(t.position.toLowerCase()){case\"left\":u=1,a=0,f=-1;break;case\"right\":u=1,a=0,f=1;break;case\"top\":u=0,a=1,f=-1;break;default:u=0,a=1,f=1}var l=(i[a]+o[a])/2;if(!t.smartPosition)var c=[n[u],n[a]+i[a]-l+l*f];else var c=[-r[u]+n[u]+o[u]>s[u]?-r[u]+n[u]+i[u]/2>s[u]/2&&n[u]+i[u]-o[u]>=0?n[u]+i[u]-o[u]:n[u]:n[u],-r[a]+n[a]+i[a]+o[a]-l+l*f>s[a]?-r[a]+n[a]+i[a]/2>s[a]/2&&n[a]+i[a]-l-l*f>=0?n[a]+i[a]-l-l*f:n[a]+i[a]-l+l*f:n[a]+i[a]-l+l*f>=0?n[a]+i[a]-l+l*f:n[a]+i[a]-l-l*f];var h=c[u],p=c[a],d=t.fixed?\"fixed\":\"absolute\",v=(c[0]+o[0]>n[0]||c[0]<n[0]+i[0])&&c[1]+o[1]<n[1]+i[1];e._drawPosition(t,h,p,d,v)}},_drawPosition:function(t,n,r,i,s){var o=s?0:t.shadowBlur;e.picker.wrap.style.position=i,e.picker.wrap.style.left=n+\"px\",e.picker.wrap.style.top=r+\"px\",e.setBoxShadow(e.picker.boxS,t.shadow?new e.BoxShadow(0,o,t.shadowBlur,0,t.shadowColor):null)},getPickerDims:function(t){var n=!!e.getSliderComponent(t),r=[2*t.insetWidth+2*t.padding+t.width+(n?2*t.insetWidth+e.getPadToSliderPadding(t)+t.sliderSize:0),2*t.insetWidth+2*t.padding+t.height+(t.closable?2*t.insetWidth+t.padding+t.buttonHeight:0)];return r},getPickerOuterDims:function(t){var n=e.getPickerDims(t);return[n[0]+2*t.borderWidth,n[1]+2*t.borderWidth]},getPadToSliderPadding:function(e){return Math.max(e.padding,1.5*(2*e.pointerBorderWidth+e.pointerThickness))},getPadYComponent:function(e){switch(e.mode.charAt(1).toLowerCase()){case\"v\":return\"v\"}return\"s\"},getSliderComponent:function(e){if(e.mode.length>2)switch(e.mode.charAt(2).toLowerCase()){case\"s\":return\"s\";case\"v\":return\"v\"}return null},onDocumentMouseDown:function(t){t||(t=window.event);var n=t.target||t.srcElement;n._jscLinkedInstance?n._jscLinkedInstance.showOnClick&&n._jscLinkedInstance.show():n._jscControlName?e.onControlPointerStart(t,n,n._jscControlName,\"mouse\"):e.picker&&e.picker.owner&&e.picker.owner.hide()},onDocumentTouchStart:function(t){t||(t=window.event);var n=t.target||t.srcElement;n._jscLinkedInstance?n._jscLinkedInstance.showOnClick&&n._jscLinkedInstance.show():n._jscControlName?e.onControlPointerStart(t,n,n._jscControlName,\"touch\"):e.picker&&e.picker.owner&&e.picker.owner.hide()},onWindowResize:function(t){e.redrawPosition()},onParentScroll:function(t){e.picker&&e.picker.owner&&e.picker.owner.hide()},_pointerMoveEvent:{mouse:\"mousemove\",touch:\"touchmove\"},_pointerEndEvent:{mouse:\"mouseup\",touch:\"touchend\"},_pointerOrigin:null,_capturedTarget:null,onControlPointerStart:function(t,n,r,i){var s=n._jscInstance;e.preventDefault(t),e.captureTarget(n);var o=function(s,o){e.attachGroupEvent(\"drag\",s,e._pointerMoveEvent[i],e.onDocumentPointerMove(t,n,r,i,o)),e.attachGroupEvent(\"drag\",s,e._pointerEndEvent[i],e.onDocumentPointerEnd(t,n,r,i))};o(document,[0,0]);if(window.parent&&window.frameElement){var u=window.frameElement.getBoundingClientRect(),a=[-u.left,-u.top];o(window.parent.window.document,a)}var f=e.getAbsPointerPos(t),l=e.getRelPointerPos(t);e._pointerOrigin={x:f.x-l.x,y:f.y-l.y};switch(r){case\"pad\":switch(e.getSliderComponent(s)){case\"s\":s.hsv[1]===0&&s.fromHSV(null,100,null);break;case\"v\":s.hsv[2]===0&&s.fromHSV(null,null,100)}e.setPad(s,t,0,0);break;case\"sld\":e.setSld(s,t,0)}e.dispatchFineChange(s)},onDocumentPointerMove:function(t,n,r,i,s){return function(t){var i=n._jscInstance;switch(r){case\"pad\":t||(t=window.event),e.setPad(i,t,s[0],s[1]),e.dispatchFineChange(i);break;case\"sld\":t||(t=window.event),e.setSld(i,t,s[1]),e.dispatchFineChange(i)}}},onDocumentPointerEnd:function(t,n,r,i){return function(t){var r=n._jscInstance;e.detachGroupEvents(\"drag\"),e.releaseTarget(),e.dispatchChange(r)}},dispatchChange:function(t){t.valueElement&&e.isElementType(t.valueElement,\"input\")&&e.fireEvent(t.valueElement,\"change\")},dispatchFineChange:function(e){if(e.onFineChange){var t;typeof e.onFineChange==\"string\"?t=new Function(e.onFineChange):t=e.onFineChange,t.call(e)}},setPad:function(t,n,r,i){var s=e.getAbsPointerPos(n),o=r+s.x-e._pointerOrigin.x-t.padding-t.insetWidth,u=i+s.y-e._pointerOrigin.y-t.padding-t.insetWidth,a=o*(360/(t.width-1)),f=100-u*(100/(t.height-1));switch(e.getPadYComponent(t)){case\"s\":t.fromHSV(a,f,null,e.leaveSld);break;case\"v\":t.fromHSV(a,null,f,e.leaveSld)}},setSld:function(t,n,r){var i=e.getAbsPointerPos(n),s=r+i.y-e._pointerOrigin.y-t.padding-t.insetWidth,o=100-s*(100/(t.height-1));switch(e.getSliderComponent(t)){case\"s\":t.fromHSV(null,o,null,e.leavePad);break;case\"v\":t.fromHSV(null,null,o,e.leavePad)}},_vmlNS:\"jsc_vml_\",_vmlCSS:\"jsc_vml_css_\",_vmlReady:!1,initVML:function(){if(!e._vmlReady){var t=document;t.namespaces[e._vmlNS]||t.namespaces.add(e._vmlNS,\"urn:schemas-microsoft-com:vml\");if(!t.styleSheets[e._vmlCSS]){var n=[\"shape\",\"shapetype\",\"group\",\"background\",\"path\",\"formulas\",\"handles\",\"fill\",\"stroke\",\"shadow\",\"textbox\",\"textpath\",\"imagedata\",\"line\",\"polyline\",\"curve\",\"rect\",\"roundrect\",\"oval\",\"arc\",\"image\"],r=t.createStyleSheet();r.owningElement.id=e._vmlCSS;for(var i=0;i<n.length;i+=1)r.addRule(e._vmlNS+\"\\\\:\"+n[i],\"behavior:url(#default#VML);\")}e._vmlReady=!0}},createPalette:function(){var t={elm:null,draw:null};if(e.isCanvasSupported){var n=document.createElement(\"canvas\"),r=n.getContext(\"2d\"),i=function(e,t,i){n.width=e,n.height=t,r.clearRect(0,0,n.width,n.height);var s=r.createLinearGradient(0,0,n.width,0);s.addColorStop(0,\"#F00\"),s.addColorStop(1/6,\"#FF0\"),s.addColorStop(2/6,\"#0F0\"),s.addColorStop(.5,\"#0FF\"),s.addColorStop(4/6,\"#00F\"),s.addColorStop(5/6,\"#F0F\"),s.addColorStop(1,\"#F00\"),r.fillStyle=s,r.fillRect(0,0,n.width,n.height);var o=r.createLinearGradient(0,0,0,n.height);switch(i.toLowerCase()){case\"s\":o.addColorStop(0,\"rgba(255,255,255,0)\"),o.addColorStop(1,\"rgba(255,255,255,1)\");break;case\"v\":o.addColorStop(0,\"rgba(0,0,0,0)\"),o.addColorStop(1,\"rgba(0,0,0,1)\")}r.fillStyle=o,r.fillRect(0,0,n.width,n.height)};t.elm=n,t.draw=i}else{e.initVML();var s=document.createElement(\"div\");s.style.position=\"relative\",s.style.overflow=\"hidden\";var o=document.createElement(e._vmlNS+\":fill\");o.type=\"gradient\",o.method=\"linear\",o.angle=\"90\",o.colors=\"16.67% #F0F, 33.33% #00F, 50% #0FF, 66.67% #0F0, 83.33% #FF0\";var u=document.createElement(e._vmlNS+\":rect\");u.style.position=\"absolute\",u.style.left=\"-1px\",u.style.top=\"-1px\",u.stroked=!1,u.appendChild(o),s.appendChild(u);var a=document.createElement(e._vmlNS+\":fill\");a.type=\"gradient\",a.method=\"linear\",a.angle=\"180\",a.opacity=\"0\";var f=document.createElement(e._vmlNS+\":rect\");f.style.position=\"absolute\",f.style.left=\"-1px\",f.style.top=\"-1px\",f.stroked=!1,f.appendChild(a),s.appendChild(f);var i=function(e,t,n){s.style.width=e+\"px\",s.style.height=t+\"px\",u.style.width=f.style.width=e+1+\"px\",u.style.height=f.style.height=t+1+\"px\",o.color=\"#F00\",o.color2=\"#F00\";switch(n.toLowerCase()){case\"s\":a.color=a.color2=\"#FFF\";break;case\"v\":a.color=a.color2=\"#000\"}};t.elm=s,t.draw=i}return t},createSliderGradient:function(){var t={elm:null,draw:null};if(e.isCanvasSupported){var n=document.createElement(\"canvas\"),r=n.getContext(\"2d\"),i=function(e,t,i,s){n.width=e,n.height=t,r.clearRect(0,0,n.width,n.height);var o=r.createLinearGradient(0,0,0,n.height);o.addColorStop(0,i),o.addColorStop(1,s),r.fillStyle=o,r.fillRect(0,0,n.width,n.height)};t.elm=n,t.draw=i}else{e.initVML();var s=document.createElement(\"div\");s.style.position=\"relative\",s.style.overflow=\"hidden\";var o=document.createElement(e._vmlNS+\":fill\");o.type=\"gradient\",o.method=\"linear\",o.angle=\"180\";var u=document.createElement(e._vmlNS+\":rect\");u.style.position=\"absolute\",u.style.left=\"-1px\",u.style.top=\"-1px\",u.stroked=!1,u.appendChild(o),s.appendChild(u);var i=function(e,t,n,r){s.style.width=e+\"px\",s.style.height=t+\"px\",u.style.width=e+1+\"px\",u.style.height=t+1+\"px\",o.color=n,o.color2=r};t.elm=s,t.draw=i}return t},leaveValue:1,leaveStyle:2,leavePad:4,leaveSld:8,BoxShadow:function(){var e=function(e,t,n,r,i,s){this.hShadow=e,this.vShadow=t,this.blur=n,this.spread=r,this.color=i,this.inset=!!s};return e.prototype.toString=function(){var e=[Math.round(this.hShadow)+\"px\",Math.round(this.vShadow)+\"px\",Math.round(this.blur)+\"px\",Math.round(this.spread)+\"px\",this.color];return this.inset&&e.push(\"inset\"),e.join(\" \")},e}(),jscolor:function(t,n){function i(e,t,n){e/=255,t/=255,n/=255;var r=Math.min(Math.min(e,t),n),i=Math.max(Math.max(e,t),n),s=i-r;if(s===0)return[null,0,100*i];var o=e===r?3+(n-t)/s:t===r?5+(e-n)/s:1+(t-e)/s;return[60*(o===6?0:o),100*(s/i),100*i]}function s(e,t,n){var r=255*(n/100);if(e===null)return[r,r,r];e/=60,t/=100;var i=Math.floor(e),s=i%2?e-i:1-(e-i),o=r*(1-t),u=r*(1-t*s);switch(i){case 6:case 0:return[r,u,o];case 1:return[u,r,o];case 2:return[o,r,u];case 3:return[o,u,r];case 4:return[u,o,r];case 5:return[r,o,u]}}function o(){e.unsetClass(d.targetElement,d.activeClass),e.picker.wrap.parentNode.removeChild(e.picker.wrap),delete e.picker.owner}function u(){function l(){var e=d.insetColor.split(/\\s+/),n=e.length<2?e[0]:e[1]+\" \"+e[0]+\" \"+e[0]+\" \"+e[1];t.btn.style.borderColor=n}d._processParentElementsInDOM(),e.picker||(e.picker={owner:null,wrap:document.createElement(\"div\"),box:document.createElement(\"div\"),boxS:document.createElement(\"div\"),boxB:document.createElement(\"div\"),pad:document.createElement(\"div\"),padB:document.createElement(\"div\"),padM:document.createElement(\"div\"),padPal:e.createPalette(),cross:document.createElement(\"div\"),crossBY:document.createElement(\"div\"),crossBX:document.createElement(\"div\"),crossLY:document.createElement(\"div\"),crossLX:document.createElement(\"div\"),sld:document.createElement(\"div\"),sldB:document.createElement(\"div\"),sldM:document.createElement(\"div\"),sldGrad:e.createSliderGradient(),sldPtrS:document.createElement(\"div\"),sldPtrIB:document.createElement(\"div\"),sldPtrMB:document.createElement(\"div\"),sldPtrOB:document.createElement(\"div\"),btn:document.createElement(\"div\"),btnT:document.createElement(\"span\")},e.picker.pad.appendChild(e.picker.padPal.elm),e.picker.padB.appendChild(e.picker.pad),e.picker.cross.appendChild(e.picker.crossBY),e.picker.cross.appendChild(e.picker.crossBX),e.picker.cross.appendChild(e.picker.crossLY),e.picker.cross.appendChild(e.picker.crossLX),e.picker.padB.appendChild(e.picker.cross),e.picker.box.appendChild(e.picker.padB),e.picker.box.appendChild(e.picker.padM),e.picker.sld.appendChild(e.picker.sldGrad.elm),e.picker.sldB.appendChild(e.picker.sld),e.picker.sldB.appendChild(e.picker.sldPtrOB),e.picker.sldPtrOB.appendChild(e.picker.sldPtrMB),e.picker.sldPtrMB.appendChild(e.picker.sldPtrIB),e.picker.sldPtrIB.appendChild(e.picker.sldPtrS),e.picker.box.appendChild(e.picker.sldB),e.picker.box.appendChild(e.picker.sldM),e.picker.btn.appendChild(e.picker.btnT),e.picker.box.appendChild(e.picker.btn),e.picker.boxB.appendChild(e.picker.box),e.picker.wrap.appendChild(e.picker.boxS),e.picker.wrap.appendChild(e.picker.boxB));var t=e.picker,n=!!e.getSliderComponent(d),r=e.getPickerDims(d),i=2*d.pointerBorderWidth+d.pointerThickness+2*d.crossSize,s=e.getPadToSliderPadding(d),o=Math.min(d.borderRadius,Math.round(d.padding*Math.PI)),u=\"crosshair\";t.wrap.style.clear=\"both\",t.wrap.style.width=r[0]+2*d.borderWidth+\"px\",t.wrap.style.height=r[1]+2*d.borderWidth+\"px\",t.wrap.style.zIndex=d.zIndex,t.box.style.width=r[0]+\"px\",t.box.style.height=r[1]+\"px\",t.boxS.style.position=\"absolute\",t.boxS.style.left=\"0\",t.boxS.style.top=\"0\",t.boxS.style.width=\"100%\",t.boxS.style.height=\"100%\",e.setBorderRadius(t.boxS,o+\"px\"),t.boxB.style.position=\"relative\",t.boxB.style.border=d.borderWidth+\"px solid\",t.boxB.style.borderColor=d.borderColor,t.boxB.style.background=d.backgroundColor,e.setBorderRadius(t.boxB,o+\"px\"),t.padM.style.background=t.sldM.style.background=\"#FFF\",e.setStyle(t.padM,\"opacity\",\"0\"),e.setStyle(t.sldM,\"opacity\",\"0\"),t.pad.style.position=\"relative\",t.pad.style.width=d.width+\"px\",t.pad.style.height=d.height+\"px\",t.padPal.draw(d.width,d.height,e.getPadYComponent(d)),t.padB.style.position=\"absolute\",t.padB.style.left=d.padding+\"px\",t.padB.style.top=d.padding+\"px\",t.padB.style.border=d.insetWidth+\"px solid\",t.padB.style.borderColor=d.insetColor,t.padM._jscInstance=d,t.padM._jscControlName=\"pad\",t.padM.style.position=\"absolute\",t.padM.style.left=\"0\",t.padM.style.top=\"0\",t.padM.style.width=d.padding+2*d.insetWidth+d.width+s/2+\"px\",t.padM.style.height=r[1]+\"px\",t.padM.style.cursor=u,t.cross.style.position=\"absolute\",t.cross.style.left=t.cross.style.top=\"0\",t.cross.style.width=t.cross.style.height=i+\"px\",t.crossBY.style.position=t.crossBX.style.position=\"absolute\",t.crossBY.style.background=t.crossBX.style.background=d.pointerBorderColor,t.crossBY.style.width=t.crossBX.style.height=2*d.pointerBorderWidth+d.pointerThickness+\"px\",t.crossBY.style.height=t.crossBX.style.width=i+\"px\",t.crossBY.style.left=t.crossBX.style.top=Math.floor(i/2)-Math.floor(d.pointerThickness/2)-d.pointerBorderWidth+\"px\",t.crossBY.style.top=t.crossBX.style.left=\"0\",t.crossLY.style.position=t.crossLX.style.position=\"absolute\",t.crossLY.style.background=t.crossLX.style.background=d.pointerColor,t.crossLY.style.height=t.crossLX.style.width=i-2*d.pointerBorderWidth+\"px\",t.crossLY.style.width=t.crossLX.style.height=d.pointerThickness+\"px\",t.crossLY.style.left=t.crossLX.style.top=Math.floor(i/2)-Math.floor(d.pointerThickness/2)+\"px\",t.crossLY.style.top=t.crossLX.style.left=d.pointerBorderWidth+\"px\",t.sld.style.overflow=\"hidden\",t.sld.style.width=d.sliderSize+\"px\",t.sld.style.height=d.height+\"px\",t.sldGrad.draw(d.sliderSize,d.height,\"#000\",\"#000\"),t.sldB.style.display=n?\"block\":\"none\",t.sldB.style.position=\"absolute\",t.sldB.style.right=d.padding+\"px\",t.sldB.style.top=d.padding+\"px\",t.sldB.style.border=d.insetWidth+\"px solid\",t.sldB.style.borderColor=d.insetColor,t.sldM._jscInstance=d,t.sldM._jscControlName=\"sld\",t.sldM.style.display=n?\"block\":\"none\",t.sldM.style.position=\"absolute\",t.sldM.style.right=\"0\",t.sldM.style.top=\"0\",t.sldM.style.width=d.sliderSize+s/2+d.padding+2*d.insetWidth+\"px\",t.sldM.style.height=r[1]+\"px\",t.sldM.style.cursor=\"default\",t.sldPtrIB.style.border=t.sldPtrOB.style.border=d.pointerBorderWidth+\"px solid \"+d.pointerBorderColor,t.sldPtrOB.style.position=\"absolute\",t.sldPtrOB.style.left=-(2*d.pointerBorderWidth+d.pointerThickness)+\"px\",t.sldPtrOB.style.top=\"0\",t.sldPtrMB.style.border=d.pointerThickness+\"px solid \"+d.pointerColor,t.sldPtrS.style.width=d.sliderSize+\"px\",t.sldPtrS.style.height=m+\"px\",t.btn.style.display=d.closable?\"block\":\"none\",t.btn.style.position=\"absolute\",t.btn.style.left=d.padding+\"px\",t.btn.style.bottom=d.padding+\"px\",t.btn.style.padding=\"0 15px\",t.btn.style.height=d.buttonHeight+\"px\",t.btn.style.border=d.insetWidth+\"px solid\",l(),t.btn.style.color=d.buttonColor,t.btn.style.font=\"12px sans-serif\",t.btn.style.textAlign=\"center\";try{t.btn.style.cursor=\"pointer\"}catch(c){t.btn.style.cursor=\"hand\"}t.btn.onmousedown=function(){d.hide()},t.btnT.style.lineHeight=d.buttonHeight+\"px\",t.btnT.innerHTML=\"\",t.btnT.appendChild(document.createTextNode(d.closeText)),a(),f(),e.picker.owner&&e.picker.owner!==d&&e.unsetClass(e.picker.owner.targetElement,d.activeClass),e.picker.owner=d,e.isElementType(v,\"body\")?e.redrawPosition():e._drawPosition(d,0,0,\"relative\",!1),t.wrap.parentNode!=v&&v.appendChild(t.wrap),e.setClass(d.targetElement,d.activeClass)}function a(){switch(e.getPadYComponent(d)){case\"s\":var t=1;break;case\"v\":var t=2}var n=Math.round(d.hsv[0]/360*(d.width-1)),r=Math.round((1-d.hsv[t]/100)*(d.height-1)),i=2*d.pointerBorderWidth+d.pointerThickness+2*d.crossSize,o=-Math.floor(i/2);e.picker.cross.style.left=n+o+\"px\",e.picker.cross.style.top=r+o+\"px\";switch(e.getSliderComponent(d)){case\"s\":var u=s(d.hsv[0],100,d.hsv[2]),a=s(d.hsv[0],0,d.hsv[2]),f=\"rgb(\"+Math.round(u[0])+\",\"+Math.round(u[1])+\",\"+Math.round(u[2])+\")\",l=\"rgb(\"+Math.round(a[0])+\",\"+Math.round(a[1])+\",\"+Math.round(a[2])+\")\";e.picker.sldGrad.draw(d.sliderSize,d.height,f,l);break;case\"v\":var c=s(d.hsv[0],d.hsv[1],100),f=\"rgb(\"+Math.round(c[0])+\",\"+Math.round(c[1])+\",\"+Math.round(c[2])+\")\",l=\"#000\";e.picker.sldGrad.draw(d.sliderSize,d.height,f,l)}}function f(){var t=e.getSliderComponent(d);if(t){switch(t){case\"s\":var n=1;break;case\"v\":var n=2}var r=Math.round((1-d.hsv[n]/100)*(d.height-1));e.picker.sldPtrOB.style.top=r-(2*d.pointerBorderWidth+d.pointerThickness)-Math.floor(m/2)+\"px\"}}function l(){return e.picker&&e.picker.owner===d}function c(){d.importColor()}this.value=null,this.valueElement=t,this.styleElement=t,this.required=!0,this.refine=!0,this.hash=!1,this.uppercase=!0,this.onFineChange=null,this.activeClass=\"jscolor-active\",this.minS=0,this.maxS=100,this.minV=0,this.maxV=100,this.hsv=[0,0,100],this.rgb=[255,255,255],this.width=181,this.height=101,this.showOnClick=!0,this.mode=\"HSV\",this.position=\"bottom\",this.smartPosition=!0,this.sliderSize=16,this.crossSize=8,this.closable=!1,this.closeText=\"Close\",this.buttonColor=\"#000000\",this.buttonHeight=18,this.padding=12,this.backgroundColor=\"#FFFFFF\",this.borderWidth=1,this.borderColor=\"#BBBBBB\",this.borderRadius=8,this.insetWidth=1,this.insetColor=\"#BBBBBB\",this.shadow=!0,this.shadowBlur=15,this.shadowColor=\"rgba(0,0,0,0.2)\",this.pointerColor=\"#4C4C4C\",this.pointerBorderColor=\"#FFFFFF\",this.pointerBorderWidth=1,this.pointerThickness=2,this.zIndex=1e3,this.container=null;for(var r in n)n.hasOwnProperty(r)&&(this[r]=n[r]);this.hide=function(){l()&&o()},this.show=function(){u()},this.redraw=function(){l()&&u()},this.importColor=function(){this.valueElement?e.isElementType(this.valueElement,\"input\")?this.refine?!this.required&&/^\\s*$/.test(this.valueElement.value)?(this.valueElement.value=\"\",this.styleElement&&(this.styleElement.style.backgroundImage=this.styleElement._jscOrigStyle.backgroundImage,this.styleElement.style.backgroundColor=this.styleElement._jscOrigStyle.backgroundColor,this.styleElement.style.color=this.styleElement._jscOrigStyle.color),this.exportColor(e.leaveValue|e.leaveStyle)):this.fromString(this.valueElement.value)||this.exportColor():this.fromString(this.valueElement.value,e.leaveValue)||(this.styleElement&&(this.styleElement.style.backgroundImage=this.styleElement._jscOrigStyle.backgroundImage,this.styleElement.style.backgroundColor=this.styleElement._jscOrigStyle.backgroundColor,this.styleElement.style.color=this.styleElement._jscOrigStyle.color),this.exportColor(e.leaveValue|e.leaveStyle)):this.exportColor():this.exportColor()},this.exportColor=function(t){if(!(t&e.leaveValue)&&this.valueElement){var n=this.toString();this.uppercase&&(n=n.toUpperCase()),this.hash&&(n=\"#\"+n),e.isElementType(this.valueElement,\"input\")?this.valueElement.value=n:this.valueElement.innerHTML=n}t&e.leaveStyle||this.styleElement&&(this.styleElement.style.backgroundImage=\"none\",this.styleElement.style.backgroundColor=\"#\"+this.toString(),this.styleElement.style.color=this.isLight()?\"#000\":\"#FFF\"),!(t&e.leavePad)&&l()&&a(),!(t&e.leaveSld)&&l()&&f()},this.fromHSV=function(e,t,n,r){if(e!==null){if(isNaN(e))return!1;e=Math.max(0,Math.min(360,e))}if(t!==null){if(isNaN(t))return!1;t=Math.max(0,Math.min(100,this.maxS,t),this.minS)}if(n!==null){if(isNaN(n))return!1;n=Math.max(0,Math.min(100,this.maxV,n),this.minV)}this.rgb=s(e===null?this.hsv[0]:this.hsv[0]=e,t===null?this.hsv[1]:this.hsv[1]=t,n===null?this.hsv[2]:this.hsv[2]=n),this.exportColor(r)},this.fromRGB=function(e,t,n,r){if(e!==null){if(isNaN(e))return!1;e=Math.max(0,Math.min(255,e))}if(t!==null){if(isNaN(t))return!1;t=Math.max(0,Math.min(255,t))}if(n!==null){if(isNaN(n))return!1;n=Math.max(0,Math.min(255,n))}var o=i(e===null?this.rgb[0]:e,t===null?this.rgb[1]:t,n===null?this.rgb[2]:n);o[0]!==null&&(this.hsv[0]=Math.max(0,Math.min(360,o[0]))),o[2]!==0&&(this.hsv[1]=o[1]===null?null:Math.max(0,this.minS,Math.min(100,this.maxS,o[1]))),this.hsv[2]=o[2]===null?null:Math.max(0,this.minV,Math.min(100,this.maxV,o[2]));var u=s(this.hsv[0],this.hsv[1],this.hsv[2]);this.rgb[0]=u[0],this.rgb[1]=u[1],this.rgb[2]=u[2],this.exportColor(r)},this.fromString=function(e,t){var n;if(n=e.match(/^\\W*([0-9A-F]{3}([0-9A-F]{3})?)\\W*$/i))return n[1].length===6?this.fromRGB(parseInt(n[1].substr(0,2),16),parseInt(n[1].substr(2,2),16),parseInt(n[1].substr(4,2),16),t):this.fromRGB(parseInt(n[1].charAt(0)+n[1].charAt(0),16),parseInt(n[1].charAt(1)+n[1].charAt(1),16),parseInt(n[1].charAt(2)+n[1].charAt(2),16),t),!0;if(n=e.match(/^\\W*rgba?\\(([^)]*)\\)\\W*$/i)){var r=n[1].split(\",\"),i=/^\\s*(\\d*)(\\.\\d+)?\\s*$/,s,o,u;if(r.length>=3&&(s=r[0].match(i))&&(o=r[1].match(i))&&(u=r[2].match(i))){var a=parseFloat((s[1]||\"0\")+(s[2]||\"\")),f=parseFloat((o[1]||\"0\")+(o[2]||\"\")),l=parseFloat((u[1]||\"0\")+(u[2]||\"\"));return this.fromRGB(a,f,l,t),!0}}return!1},this.toString=function(){return(256|Math.round(this.rgb[0])).toString(16).substr(1)+(256|Math.round(this.rgb[1])).toString(16).substr(1)+(256|Math.round(this.rgb[2])).toString(16).substr(1)},this.toHEXString=function(){return\"#\"+this.toString().toUpperCase()},this.toRGBString=function(){return\"rgb(\"+Math.round(this.rgb[0])+\",\"+Math.round(this.rgb[1])+\",\"+Math.round(this.rgb[2])+\")\"},this.isLight=function(){return.213*this.rgb[0]+.715*this.rgb[1]+.072*this.rgb[2]>127.5},this._processParentElementsInDOM=function(){if(this._linkedElementsProcessed)return;this._linkedElementsProcessed=!0;var t=this.targetElement;do{var n=e.getStyle(t);n&&n.position.toLowerCase()===\"fixed\"&&(this.fixed=!0),t!==this.targetElement&&(t._jscEventsAttached||(e.attachEvent(t,\"scroll\",e.onParentScroll),t._jscEventsAttached=!0))}while((t=t.parentNode)&&!e.isElementType(t,\"body\"))};if(typeof t==\"string\"){var h=t,p=document.getElementById(h);p?this.targetElement=p:e.warn(\"Could not find target element with ID '\"+h+\"'\")}else t?this.targetElement=t:e.warn(\"Invalid target element: '\"+t+\"'\");if(this.targetElement._jscLinkedInstance){e.warn(\"Cannot link jscolor twice to the same element. Skipping.\");return}this.targetElement._jscLinkedInstance=this,this.valueElement=e.fetchElement(this.valueElement),this.styleElement=e.fetchElement(this.styleElement);var d=this,v=this.container?e.fetchElement(this.container):document.getElementsByTagName(\"body\")[0],m=3;if(e.isElementType(this.targetElement,\"button\"))if(this.targetElement.onclick){var g=this.targetElement.onclick;this.targetElement.onclick=function(e){return g.call(this,e),!1}}else this.targetElement.onclick=function(){return!1};if(this.valueElement&&e.isElementType(this.valueElement,\"input\")){var y=function(){d.fromString(d.valueElement.value,e.leaveValue),e.dispatchFineChange(d)};e.attachEvent(this.valueElement,\"keyup\",y),e.attachEvent(this.valueElement,\"input\",y),e.attachEvent(this.valueElement,\"blur\",c),this.valueElement.setAttribute(\"autocomplete\",\"off\")}this.styleElement&&(this.styleElement._jscOrigStyle={backgroundImage:this.styleElement.style.backgroundImage,backgroundColor:this.styleElement.style.backgroundColor,color:this.styleElement.style.color}),this.value?this.fromString(this.value)||this.exportColor():this.importColor()}};return e.jscolor.lookupClass=\"jscolor\",e.jscolor.installByClassName=function(t){var n=document.getElementsByTagName(\"input\"),r=document.getElementsByTagName(\"button\");e.tryInstallOnElements(n,t),e.tryInstallOnElements(r,t)},e.register(),e.jscolor}());","Vertex_AddressValidation/js/definitions.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\n/**\r\n * @typedef UncleanAddress\r\n * @api\r\n * @property {string[]} streetAddress\r\n * @property {string} city\r\n * @property {string} mainDivision - Region, State, or Province\r\n * @property {string} postalCode - ZIP or postal code\r\n * @property {string} country - 2 or 3 letter country code\r\n */\r\n\r\n/**\r\n * @typedef CleanAddress\r\n * @api\r\n * @property {string[]} streetAddress - street address lines\r\n * @property {?string} city - name of the city\r\n * @property {?string} subDivision - name of the sub-division (county, parish)\r\n * @property {?string} regionName - name of the region (state/province)\r\n * @property {?int} regionId - numeric (state/province) region identifier in the Magento database\r\n * @property {?string} postalCode - ZIP+4 or postal code\r\n * @property {?string} countryCode - 2 letter country code\r\n * @property {?string} countryName - name of the country\r\n */\r\n","Vertex_AddressValidation/js/validation-messages.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\ndefine(['mage/translate'], function ($t) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Messages here may not be the final version.  Please check the module's\r\n     * i18n.csv file for final english versions.\r\n     *\r\n     * Messages are kept here as-is for backwards compatibility with translations\r\n     */\r\n    return {\r\n        noChangesNecessary: $t('The address is valid'),\r\n        noAddressFound: $t('We did not find a valid address'),\r\n        changesFound: $t('The address is not valid'),\r\n        adminChangesFound: $t('The intended address could be:'),\r\n        addressUpdated: $t('The address was updated'),\r\n        streetAddressUpdateWarning: $t('Warning: Updating the address will replace all street address fields.')\r\n    };\r\n})\r\n","Vertex_AddressValidation/js/action/cleanse-address.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @typedef CleanseAddressActionConfig\r\n     * @api\r\n     * @property {?string} apiUrl - The URL to use for cleansing an address\r\n     */\r\n\r\n    /**\r\n     * @type {CleanseAddressActionConfig}\r\n     */\r\n    const config = {apiUrl: null};\r\n\r\n    /**\r\n     * @api\r\n     */\r\n    return {\r\n        /**\r\n         * Globally configure the URL to query for address cleansing results\r\n         *\r\n         * @param {string} apiUrl\r\n         */\r\n        setApiUrl: function (apiUrl) {\r\n            if (typeof apiUrl !== 'string') {\r\n                throw new TypeError('apiUrl must be a string');\r\n            }\r\n            config.apiUrl = apiUrl;\r\n        },\r\n\r\n        /**\r\n         * Call the Cleanse Address API with an unclean address\r\n         *\r\n         * @param {UncleanAddress} address\r\n         * @returns {jQuery.Deferred}\r\n         * @exception Throws an error if the api url has not been configured\r\n         */\r\n        cleanseAddress: function (address) {\r\n            if (config.apiUrl === null) {\r\n                throw 'API URL Not Defined';\r\n            }\r\n            const result = $.Deferred();\r\n            $.post(config.apiUrl, address, 'json')\r\n                .fail(function (jqXhr, textStatus) {\r\n                    result.reject(textStatus);\r\n                })\r\n                .done(function (cleanAddress) {\r\n                    result.resolve(cleanAddress);\r\n                });\r\n            return result;\r\n        }\r\n    }\r\n});\r\n","Vertex_AddressValidation/js/model/address-difference-template-renderer.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(['underscore', 'uiClass'], function (_, Component) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @typedef {Object} vertexDifferenceRendererObject\r\n     * @property {vertexDifferenceObject_Message} message\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} vertexDifferenceObject_Message\r\n     * @property {string} text - Informative message to end user\r\n     * @property {vertexDifferenceObject_Difference[]} differences - Array of differences\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} vertexDifferenceObject_Difference\r\n     * @property {string} name - Human readable name of field that has a difference\r\n     * @property {string} value - New value for the field\r\n     */\r\n\r\n    /**\r\n     * @api\r\n     */\r\n    return Component.extend({\r\n        /**\r\n         * @var {string} template - Location of file to render\r\n         */\r\n        template: 'Vertex_AddressValidation/template/validation-result.html',\r\n\r\n        /**\r\n         * @var {*} renderer - Underscore.js template object\r\n         */\r\n        renderer: null,\r\n\r\n        /**\r\n         * @constructor\r\n         * @param {string} template - File to render\r\n         * @returns {*}\r\n         */\r\n        initialize: function (template) {\r\n            if (typeof this.template !== 'undefined') {\r\n                this.template = template;\r\n            }\r\n\r\n            require(['text!' + this.template], function (templateContents) {\r\n                this.renderer = _.template(templateContents);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param {vertexDifferenceRendererObject} message\r\n         * @returns {string} HTML\r\n         */\r\n        render: function (message) {\r\n            return this.renderer(message);\r\n        }\r\n    });\r\n});\r\n","Vertex_AddressValidation/js/model/difference-determiner.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(['mage/translate'], function ($t) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @typedef VertexAddressReadableDifference\r\n     * @property {string} type - Type of difference (used for code)\r\n     * @property {string} name - Human readable name of the item that has changed\r\n     * @property {(string|string[])} value - Human readable value of the item that has changed\r\n     * @property {(string|string[])} rawValue - Script usable value of the item that has changed\r\n     */\r\n\r\n    /**\r\n     * @param {UncleanAddress} uncleanAddress\r\n     * @param {CleanAddress} cleanAddress\r\n     * @returns {boolean}\r\n     */\r\n    function streetAddressesAreDifferent(uncleanAddress, cleanAddress) {\r\n        uncleanAddress.street_address.filter(function (val) {\r\n            // Filter out empty strings\r\n            return val.length > 0;\r\n        });\r\n\r\n        if (uncleanAddress.street_address.length !== cleanAddress.street_address.length) {\r\n            return true;\r\n        }\r\n        for(let index = 0,length = uncleanAddress.street_address.length;index < length;++index) {\r\n            if (uncleanAddress.street_address[index] !== cleanAddress.street_address[index]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param {UncleanAddress} uncleanAddress\r\n     * @param {CleanAddress} cleanAddress\r\n     * @returns {VertexAddressReadableDifference[]}\r\n     */\r\n    return function (uncleanAddress, cleanAddress) {\r\n        const listedDifferences = [];\r\n        if (streetAddressesAreDifferent(uncleanAddress, cleanAddress)) {\r\n            listedDifferences.push({type: 'street', name: $t('Street Address'), value: cleanAddress.street_address, rawValue: cleanAddress.street_address});\r\n        }\r\n        if (uncleanAddress.city !== cleanAddress.city) {\r\n            listedDifferences.push({type: 'city', name: $t('City'), value: cleanAddress.city, rawValue: cleanAddress.city});\r\n        }\r\n        if (uncleanAddress.main_division !== cleanAddress.region_name) {\r\n            listedDifferences.push({type: 'region', name: $t('State/Province'), value: cleanAddress.region_name, rawValue: cleanAddress.region_id});\r\n        }\r\n        if (uncleanAddress.postal_code !== cleanAddress.postal_code) {\r\n            listedDifferences.push({type: 'postcode', name: $t('Zip/Postal Code'), value: cleanAddress.postal_code, rawValue: cleanAddress.postal_code});\r\n        }\r\n        if (uncleanAddress.country !== cleanAddress.country_code) {\r\n            listedDifferences.push({type: 'country', name: $t('Country'), value: cleanAddress.country_name, rawValue: cleanAddress.country_code});\r\n        }\r\n        return listedDifferences;\r\n    };\r\n});\r\n","Vertex_AddressValidation/js/view/cleanse-address-button.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiElement',\r\n    'ko',\r\n    'mage/translate',\r\n    'Vertex_AddressValidation/js/model/address-difference-template-renderer',\r\n    'Vertex_AddressValidation/js/model/difference-determiner',\r\n    'Vertex_AddressValidation/js/action/cleanse-address',\r\n    'Vertex_AddressValidation/js/validation-messages'\r\n], function ($, Component, ko, $t, differenceRenderer, differenceDeterminer, addressCleaner, validationMessages) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            /** @var {string} */\r\n            prefix: '',\r\n\r\n            /** @var {string[]} */\r\n            validCountryList: ['US'],\r\n\r\n            /**\r\n             * @var {?int} - Milliseconds for how long an animation should run. Null is default, 0 is no animations\r\n             */\r\n            animationDuration: null,\r\n\r\n            /**\r\n             * @var {string} - Template to use for rendering differences between clean and unclean addresses\r\n             */\r\n            cleanseAddressTemplate: 'Vertex_AddressValidation/template/validation-result.html',\r\n\r\n            /**\r\n             * @var {string} - Selector for the element that will have its HTML replaced by our messages\r\n             */\r\n            messageContainerSelector: '[data-role=\"vertex-message_container\"]',\r\n\r\n            /**\r\n             * @var {string} - Selector for the element that, when clicked, will trigger address cleansing\r\n             */\r\n            cleanseAddressButtonSelector: '[data-role=\"vertex-cleanse_address\"]',\r\n\r\n            /**\r\n             * @var {string} - Selector for the element that, when clicked, will update address form fields\r\n             */\r\n            updateAddressButtonSelector: '[data-role=\"vertex-update_address\"]',\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @param {boolean} enabled - Whether or not the button should be enabled\r\n         * @returns {boolean} Whether or not the button is enabled\r\n         */\r\n        cleanseAddressButtonEnabled: null,\r\n\r\n        /**\r\n         * @function\r\n         * @param {boolean} inProgress - Whether or not we're currently cleansing an address\r\n         * @returns {boolean} Whether or not we're currently cleansing an address\r\n         */\r\n        inProgress: null,\r\n\r\n        /**\r\n         * @function\r\n         * @param {boolean} validCountry - Whether or not the currently selected country is valid\r\n         * @returns {boolean} Whether or not the currently selected country is valid\r\n         */\r\n        validatableAddress: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        node: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        cleanseAddressButton: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        updateAddressButton: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        countryInput: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        streetInputs: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        regionInput: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        postalCodeInput: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        cityInput: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        form: null,\r\n\r\n        /**\r\n         * @var {jQuery}\r\n         */\r\n        messageContainer: null,\r\n\r\n        /**\r\n         * @var {function}\r\n         */\r\n        templateRenderer: null,\r\n\r\n        /**\r\n         * @var {?CleanAddress}\r\n         */\r\n        cleanAddress: null,\r\n\r\n        /**\r\n         * @param {Object} config\r\n         * @param {Element} node\r\n         * @returns {*}\r\n         */\r\n        initialize: function (config, node) {\r\n            this.node = $(node);\r\n            this._super();\r\n\r\n            addressCleaner.setApiUrl(config.apiUrl);\r\n            this.updateValidatableAddress();\r\n            this.updateCleanseAddressButtonEnabled();\r\n\r\n            this.templateRenderer = new differenceRenderer(this.cleanseAddressTemplate);\r\n\r\n            return this;\r\n        },\r\n\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.cleanseAddressButton = this.node.find(this.cleanseAddressButtonSelector);\r\n            this.updateAddressButton = this.node.find(this.updateAddressButtonSelector);\r\n            this.messageContainer = this.node.find(this.messageContainerSelector);\r\n            this.form = $('#' + window.order[this.prefix + 'Container']);\r\n\r\n            this.streetInputs = this.form.find('input[name*=\"[street]\"]');\r\n            this.cityInput = this.form.find('input[name*=\"[city]\"]');\r\n            this.countryInput = this.form.find('select[name*=\"[country_id]\"]');\r\n            this.regionInput = this.form.find('select[name*=\"[region_id]\"]');\r\n            this.postalCodeInput = this.form.find('input[name*=\"[postcode]\"]');\r\n\r\n            this.animationDuration = this.animationDuration !== null\r\n                ? parseInt(this.animationDuration, 10)\r\n                : null;\r\n\r\n            return this;\r\n        },\r\n\r\n        initObservable: function () {\r\n            this._super();\r\n\r\n            this.cleanseAddressButtonEnabled = ko.observable(null);\r\n            this.inProgress = ko.observable(false);\r\n            this.validatableAddress = ko.observable(false);\r\n\r\n            this.countryInput.on('change', this.updateValidatableAddress.bind(this));\r\n            this.regionInput.on('change', this.updateValidatableAddress.bind(this));\r\n            this.streetInputs.on('keyup', this.updateValidatableAddress.bind(this));\r\n            this.postalCodeInput.on('keyup', this.updateValidatableAddress.bind(this));\r\n\r\n            this.inProgress.subscribe(this.updateCleanseAddressButtonEnabled.bind(this));\r\n            this.cleanseAddressButtonEnabled.subscribe(this.triggerButtonUpdate.bind(this));\r\n            this.cleanseAddressButton.on('click', this.cleanseAddress.bind(this));\r\n            this.updateAddressButton.on('click', this.updateAddress.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        getStreetLines: function () {\r\n            return this.streetInputs\r\n                .map(function (index, element) {\r\n                    return $(element).val();\r\n                })\r\n                .toArray()\r\n                .filter(function (v) {\r\n                    return v.length > 0\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Check if the currently selected country for the address is a country we support cleansing in\r\n         *\r\n         * This updates the value of {@link this.validatableAddress} and then calls {@link this.cleanseAddressButtonEnabled}\r\n         */\r\n        updateValidatableAddress: function () {\r\n            /*\r\n             * In order for our address to be worth cleansing, it must:\r\n             * - be in a country we support cleansing for\r\n             * - have a street address\r\n             * - have either a postcode or a region\r\n             */\r\n            const validAddress = this.validCountryList.indexOf(this.countryInput.val()) >= 0\r\n                && this.getStreetLines().length > 0\r\n                && (this.postalCodeInput.val() !== '' || this.regionInput.val() !== '');\r\n\r\n            this.validatableAddress(validAddress);\r\n            this.updateCleanseAddressButtonEnabled();\r\n        },\r\n\r\n        /**\r\n         * Update the address input fields with the differences found by the API\r\n         */\r\n        updateAddress: function () {\r\n            const differences = differenceDeterminer(this.retrieveAddress(), this.cleanAddress);\r\n            for (let index = 0, length = differences.length; index < length; ++index) {\r\n                let difference = differences[index];\r\n                switch (difference.type) {\r\n                    case 'street':\r\n                        this.streetInputs.val('');\r\n                        for (\r\n                            let streetIndex = 0, streetLength = difference.rawValue.length;\r\n                            streetIndex < streetLength;\r\n                            ++streetIndex\r\n                        ) {\r\n                            $(this.streetInputs[streetIndex]).val(difference.rawValue[streetIndex])\r\n                                .trigger('change')\r\n                                .trigger('blur');\r\n                        }\r\n                        break;\r\n                    case 'city':\r\n                        this.cityInput.val(difference.rawValue).trigger('change').trigger('blur');\r\n                        break;\r\n                    case 'region':\r\n                        this.regionInput.val(difference.rawValue).trigger('change').trigger('blur');\r\n                        break;\r\n                    case 'postcode':\r\n                        this.postalCodeInput.val(difference.rawValue).trigger('change').trigger('blur');\r\n                        break;\r\n                    case 'country':\r\n                        this.countryInput.val(difference.rawValue).trigger('change').trigger('blur');\r\n                        break;\r\n                }\r\n            }\r\n            this.hideMessage();\r\n        },\r\n\r\n        /**\r\n         * Determine whether or not the button should be enabled\r\n         *\r\n         * This updates the value of {@link this.buttonEnabled}\r\n         *\r\n         * @param {boolean} [inProgressValue]\r\n         */\r\n        updateCleanseAddressButtonEnabled: function (inProgressValue) {\r\n            if (typeof inProgressValue === 'undefined') {\r\n                inProgressValue = this.inProgress();\r\n            }\r\n            this.cleanseAddressButtonEnabled(this.validatableAddress() && !inProgressValue);\r\n        },\r\n\r\n        /**\r\n         * Update the button to be enabled or disabled\r\n         *\r\n         * @param {boolean} enabled\r\n         */\r\n        triggerButtonUpdate: function (enabled) {\r\n            $(this.cleanseAddressButton).attr('disabled', !enabled);\r\n        },\r\n\r\n        /**\r\n         * Trigger Address Cleansing\r\n         */\r\n        cleanseAddress: function () {\r\n            this.cleanAddress = null;\r\n            this.inProgress(true);\r\n            this.hideMessage();\r\n\r\n            addressCleaner\r\n                .cleanseAddress(this.retrieveAddress())\r\n                .fail(this.showErrorMessage.bind(this))\r\n                .done(this.suggestCleansedAddress.bind(this))\r\n                .always(function () {\r\n                    this.inProgress(false);\r\n                }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * @param {?CleanAddress} address\r\n         */\r\n        suggestCleansedAddress: function (address) {\r\n            if (address !== null && typeof address.ajaxRedirect !== 'undefined') {\r\n                // We're about to get redirected.  So let's just.. stop\r\n                return;\r\n            }\r\n\r\n            if (address !== null && (typeof address !== 'object' || typeof address.postal_code === 'undefined')) {\r\n                // When things go weird wrong but we get a 200 (it happens!)\r\n                this.showErrorMessage();\r\n                return;\r\n            }\r\n\r\n            const differences = address === null ? [] : differenceDeterminer(this.retrieveAddress(), address);\r\n            let messageText, containerClass = 'message-info';\r\n\r\n            switch (true) {\r\n                case address === null:\r\n                    messageText = validationMessages.noAddressFound;\r\n                    break;\r\n                case differences.length === 0:\r\n                    containerClass = 'message-success';\r\n                    messageText = validationMessages.noChangesNecessary;\r\n                    break;\r\n                default:\r\n                    messageText = validationMessages.adminChangesFound;\r\n            }\r\n\r\n            /** @var {vertexDifferenceRendererObject} */\r\n            const templateVariables = {\r\n                message: {\r\n                    text: messageText,\r\n                    differences: differences\r\n                },\r\n                address: address\r\n            };\r\n\r\n            for (let index = 0, length = differences.length; index < length; ++index) {\r\n                if (differences[index].type === 'street') {\r\n                    templateVariables.warning = validationMessages.streetAddressUpdateWarning;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.messageContainer\r\n                .stop(true, true)\r\n                .addClass(containerClass)\r\n                .html(this.templateRenderer.render(templateVariables));\r\n\r\n            this.cleanAddress = address;\r\n\r\n            if (differences.length > 0) {\r\n                this.updateAddressButton.show();\r\n            }\r\n\r\n            if (this.animationDuration !== 0) {\r\n                const options = this.animationDuration !== null ? {duration: this.animationDuration} : {};\r\n                this.messageContainer.slideDown(options);\r\n            } else {\r\n                this.messageContainer.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {UncleanAddress}\r\n         */\r\n        retrieveAddress: function () {\r\n            /** @var {UncleanAddress} uncleanAddress */\r\n            const uncleanAddress = {},\r\n                city = this.form.find('input[name*=\"[city]\"]').val(),\r\n                mainDivisionValue = this.regionInput.val(),\r\n                postalCodeValue = this.postalCodeInput.val();\r\n\r\n            uncleanAddress.street_address = this.getStreetLines();\r\n            if (city.length > 0) {\r\n                uncleanAddress.city = city;\r\n            }\r\n            if (mainDivisionValue.length > 0) {\r\n                uncleanAddress.main_division = this.regionInput.find('option[value=\"' + mainDivisionValue + '\"]').text();\r\n            }\r\n            if (postalCodeValue.length > 0) {\r\n                uncleanAddress.postal_code = postalCodeValue;\r\n            }\r\n            uncleanAddress.country = this.countryInput.val();\r\n            return uncleanAddress;\r\n        },\r\n\r\n        /**\r\n         * Show an error message (for various failures)\r\n         *\r\n         * @param {int=500} errorCode\r\n         */\r\n        showErrorMessage: function (errorCode) {\r\n            if (typeof errorCode === 'undefined') {\r\n                errorCode = 500;\r\n            }\r\n            if (this.animationDuration !== 0) {\r\n                this.messageContainer.stop(true, true);\r\n            }\r\n\r\n            let message = '';\r\n            switch (errorCode) {\r\n                case '403':\r\n                    message = $t('Your session has expired. Please reload the page and try again.');\r\n                    break;\r\n                default:\r\n                    message = $t('There was an error cleansing the address. Please try again.');\r\n                    break;\r\n            }\r\n\r\n            this.messageContainer\r\n                .addClass('message-error')\r\n                .text(message);\r\n\r\n            if (this.animationDuration !== 0) {\r\n                const options = this.animationDuration !== null ? {duration: this.animationDuration} : {};\r\n                this.messageContainer.slideDown(options);\r\n            } else {\r\n                this.messageContainer.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide the message container and remove its classes\r\n         */\r\n        hideMessage: function () {\r\n            const updateContainer = function () {\r\n                this.messageContainer.text('')\r\n                    .removeClass('message-error')\r\n                    .removeClass('message-notice')\r\n                    .removeClass('message-success');\r\n            }.bind(this);\r\n\r\n            this.updateAddressButton.hide();\r\n            if (this.animationDuration === 0) {\r\n                updateContainer();\r\n                this.messageContainer.hide();\r\n            } else {\r\n                const options = {\r\n                    done: updateContainer\r\n                };\r\n                if (this.animationDuration !== null) {\r\n                    options.duration = this.animationDuration;\r\n                }\r\n                this.messageContainer.slideUp(options);\r\n            }\r\n        }\r\n    });\r\n})\r\n","Vertex_Tax/js/allowed-countries.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(['jquery', 'jquery/ui'], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('vertex.allowedCountries', {\r\n        /**\r\n         * Bind all optgroups under the attached element to mass-select/mass-deselect their children on click\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(this.element).on('click', 'optgroup', this.filterClick.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Filter out any clicks where the target was not explicitly the optgroup\r\n         *\r\n         * @param {Event} event\r\n         * @return void\r\n         */\r\n        filterClick: function (event) {\r\n            if (!$(event.target).is('optgroup')) {\r\n                return;\r\n            }\r\n\r\n            this._processClick(event);\r\n        },\r\n\r\n        /**\r\n         * Decide to select or unselect all child elements and execute the chosen task\r\n         *\r\n         * @private\r\n         * @param {Event} event\r\n         * @return void\r\n         */\r\n        _processClick: function (event) {\r\n            var optgroup = $(event.target),\r\n                select = optgroup.closest('select'),\r\n                scrollTop = select.scrollTop();\r\n\r\n            if (optgroup.children('option:not(:selected)').length === 0) {\r\n                optgroup.children('option').prop('selected', false);\r\n            } else {\r\n                optgroup.children('option').prop('selected', true);\r\n            }\r\n\r\n            //  Maintain current scroll position\r\n            // Default behavior, in chrome at least, is to jump to some other selected option\r\n            setTimeout(function () {\r\n                select.scrollTop(scrollTop);\r\n            }, 0);\r\n        }\r\n    });\r\n\r\n    return $.vertex.allowedCountries;\r\n});\r\n","Vertex_Tax/js/form/caption-formatter.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Return formatted selected option value\r\n         * @param {Object} selected\r\n         * @returns {String}\r\n         */\r\n        getFormattedValue: function (selected) {\r\n            var label = '';\r\n\r\n            if (selected.parent) {\r\n                label = selected.parent + ' - ';\r\n            }\r\n            label += selected.label;\r\n            return label;\r\n        }\r\n    };\r\n});\r\n","Vertex_Tax/js/form/depend-field-checker.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Makes sure a value is set if its depending field is also set.\r\n         *\r\n         * @param dependField\r\n         * @param valueCheck\r\n         * @returns {boolean}\r\n         */\r\n        validateValues : function (dependField, valueCheck) {\r\n            if ($(dependField).length) {\r\n                let dependValue = $(dependField).val();\r\n\r\n                return !(dependValue && !valueCheck);\r\n            }\r\n\r\n            return true;\r\n        }\r\n    };\r\n});\r\n","Vertex_Tax/js/form/flex-field-select.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/form/element/ui-select',\r\n    'Vertex_Tax/js/form/caption-formatter'\r\n], function (_, Component, captionFormatter) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            presets: {\r\n                optgroup: {\r\n                    openLevelsAction: true,\r\n                    showOpenLevelsActionIcon: true\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set Caption\r\n         */\r\n        setCaption: function () {\r\n            var length, label;\r\n\r\n            if (!_.isArray(this.value()) && this.value()) {\r\n                length = 1;\r\n            } else if (this.value()) {\r\n                length = this.value().length;\r\n            } else {\r\n                this.value([]);\r\n                length = 0;\r\n            }\r\n\r\n            if (length && this.getSelected().length) {\r\n                label = captionFormatter.getFormattedValue(this.getSelected()[0]);\r\n                this.placeholder(label);\r\n            } else {\r\n                this.placeholder(this.selectedPlaceholders.defaultPlaceholder);\r\n            }\r\n\r\n            return this.placeholder();\r\n        }\r\n    });\r\n});\r\n","Vertex_Tax/js/form/element/custom-option-flex-field-select.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(['underscore', 'Magento_Ui/js/form/element/select'], function (_, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        /**\r\n         * Overwrites the parent's filter to allow for checking if a value is\r\n         * in an array and for allowing the value of \"unmapped\" through all\r\n         * filters\r\n         *\r\n         * @param {String} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var source = this.initialOptions,\r\n                result;\r\n\r\n            field = field || this.filterBy.field;\r\n\r\n            result = _.filter(source, function (item) {\r\n                return Array.isArray(item[field]) && item[field].includes(value) ||\r\n                    item[field] === value ||\r\n                    item.value === '' ||\r\n                    item.value === 'unmapped';\r\n            });\r\n\r\n            this.setOptions(result);\r\n        }\r\n    });\r\n});\r\n","Vertex_Tax/js/form/element/customer-country-validation.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'Magento_Ui/js/form/element/select',\r\n    'Magento_Ui/js/lib/validation/validator',\r\n    'Vertex_Tax/js/form/depend-field-checker',\r\n    'mage/translate'\r\n], function ($, ko, Select, validator, dependFieldChecker) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            imports: {\r\n                'taxvat': '${ $.provider }:data.customer.taxvat'\r\n            },\r\n            listens: {\r\n                '${ $.provider }:data.customer.taxvat': '_taxVatUpdated',\r\n            }\r\n        },\r\n\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.required(!!this.taxvat().length);\r\n        },\r\n\r\n        setLinks: function () {\r\n            return this._super();\r\n        },\r\n\r\n        initObservable: function () {\r\n            this._super();\r\n            this.taxvat = ko.observable('');\r\n\r\n            return this;\r\n        },\r\n\r\n        initConfig: function (config) {\r\n            /**\r\n             * Validates if a customer VAT number is set, then selecting a Country is required.\r\n             */\r\n            validator.addRule(\r\n                'vertex-customer-country',\r\n                function (value) {\r\n                    let dependField = 'input[name=\"customer['+ config.dependField +']\"]';\r\n\r\n                    return dependFieldChecker.validateValues(dependField, value);\r\n                },\r\n                $.mage.__(\"Please select a Country.\")\r\n            );\r\n\r\n            this._super();\r\n            return this;\r\n        },\r\n\r\n        _taxVatUpdated: function (newValue) {\r\n            this.required(!!newValue.length);\r\n        }\r\n    });\r\n});\r\n","Vertex_Tax/js/model/flex-field-table.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'ko',\r\n    'uiLayout',\r\n    'Vertex_Tax/js/form/caption-formatter'\r\n], function (Component, ko, layout, captionFormatter) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            elementName: '', // Prefix to use for input elements\r\n            fieldType: '', // One of code, numeric, or date\r\n            tableId: '',\r\n            template: 'Vertex_Tax/flex-field-table',\r\n            defaultPlaceholder: 'No Data',\r\n            selectOptions: [\r\n                {\r\n                    label: 'No Data',\r\n                    value: 'none'\r\n                }\r\n            ]\r\n        },\r\n        retrieveFields: [],\r\n\r\n        /**\r\n         * Initializes the table\r\n         * @returns {FlexFieldTable} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.retrieveFields = ko.observableArray();\r\n            this.initializeFields();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize the select components and link them to the form values\r\n         */\r\n        initializeFields: function () {\r\n            var i, name, fieldId, fieldSource, toLayOut = [];\r\n\r\n            for (i in this.values) {\r\n                if (this.values.hasOwnProperty(i)) {\r\n                    fieldSource = this.values[i]['field_source'];\r\n                    fieldId = this.values[i]['field_id'];\r\n                    name = this.fieldType + 'FlexField' + fieldId;\r\n\r\n                    this.retrieveFields.push({\r\n                        fieldId: fieldId,\r\n                        fieldSource: fieldSource,\r\n                        fieldLabel: this.getFieldLabelFromSource(fieldSource),\r\n                        editMode: ko.observable(false),\r\n                        childName: name\r\n                    });\r\n                }\r\n            }\r\n\r\n            layout(toLayOut);\r\n        },\r\n\r\n        /**\r\n         * Replace the label value with a dropdown\r\n         * @param {Object} child\r\n         */\r\n        enableEditMode: function (child) {\r\n            child.editMode(true);\r\n\r\n            layout([{\r\n                component: 'Vertex_Tax/js/form/flex-field-select',\r\n                template: 'ui/grid/filters/elements/ui-select',\r\n                parent: this.name,\r\n                name: child.childName,\r\n                dataScope: '',\r\n                multiple: false,\r\n                selectType: 'optgroup',\r\n                selectedPlaceholders: {\r\n                    defaultPlaceholder: this.defaultPlaceholder\r\n                },\r\n                showOpenLevelsActionIcon: true,\r\n                presets: {\r\n                    optgroup: {\r\n                        showOpenLevelsActionIcon: true\r\n                    }\r\n                },\r\n                filterOptions: true,\r\n                isDisplayMissingValuePlaceholder: true,\r\n                options: this.selectOptions,\r\n                value: child.fieldSource\r\n            }]);\r\n        },\r\n\r\n        /**\r\n         * Retrieve the name for a Field ID input\r\n         *\r\n         * @param {String} fieldId\r\n         * @returns {String}\r\n         */\r\n        getFieldIdInputName: function (fieldId) {\r\n            return this.elementName + '[' + fieldId + '][field_id]';\r\n        },\r\n\r\n        /**\r\n         * Retrieve the label for the selected source\r\n         * @param {String} source\r\n         * @returns {String}\r\n         */\r\n        getFieldLabelFromSource: function (source) {\r\n            var i, j, selected;\r\n\r\n            for (i in this.selectOptions) {\r\n                if (this.selectOptions[i].optgroup === undefined) {\r\n                    continue;\r\n                }\r\n                for (j in this.selectOptions[i].optgroup) {\r\n                    selected = this.selectOptions[i].optgroup[j];\r\n\r\n                    if (selected.value === source) {\r\n                        return captionFormatter.getFormattedValue(selected);\r\n                    }\r\n                }\r\n            }\r\n            return this.defaultPlaceholder;\r\n        },\r\n\r\n        /**\r\n         * Retrieve the name for a Field Value input\r\n         * @param {String} fieldId\r\n         * @returns {String}\r\n         */\r\n        getFieldValueInputName: function (fieldId) {\r\n            return this.elementName + '[' + fieldId + '][field_source]';\r\n        },\r\n\r\n        /**\r\n         * Retrieve the name for the empty input\r\n         * @returns {String}\r\n         */\r\n        getEmptyName: function () {\r\n            return this.elementName + '[__empty]';\r\n        }\r\n    });\r\n});\r\n"}
}});
